{
  "openapi": "3.0.1",
  "info": {
    "title": "SendinBlue API",
    "description": "SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :\n  - Manage your campaigns and get the statistics\n  - Manage your contacts\n  - Send transactional Emails and SMS\n  - and much more...\n\nYou can download our wrappers at https://github.com/orgs/sendinblue\n\n**Possible responses**\n  | Code | Message |\n  | :-------------: | ------------- |\n  | 200  | OK. Successful Request  |\n  | 201  | OK. Successful Creation |\n  | 202  | OK. Request accepted |\n  | 204  | OK. Successful Update/Deletion  |\n  | 400  | Error. Bad Request  |\n  | 401  | Error. Authentication Needed  |\n  | 402  | Error. Not enough credit, plan upgrade needed  |\n  | 403  | Error. Permission denied  |\n  | 404  | Error. Object does not exist |\n  | 405  | Error. Method not allowed  |\n  | 406  | Error. Not Acceptable  |\n",
    "contact": {
      "name": "Sendinblue Support",
      "url": "https://account.sendinblue.com/support",
      "email": "contact@sendinblue.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "3.0.0"
  },
  "servers": [
    {
      "url": "https://api.sendinblue.com/v3"
    }
  ],
  "security": [
    {
      "api-key": []
    }
  ],
  "paths": {
    "/emailCampaigns": {
      "get": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Return all your created email campaigns",
        "operationId": "getEmailCampaigns",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter on the type of the campaigns",
            "schema": {
              "type": "string",
              "enum": [
                "classic",
                "trigger"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter on the status of the campaign",
            "schema": {
              "type": "string",
              "enum": [
                "suspended",
                "archive",
                "sent",
                "queued",
                "draft",
                "inProcess"
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "**Mandatory if endDate is used**. Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent email campaigns.\n**Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "**Mandatory if startDate is used**. Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent email campaigns.\n**Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents per page",
            "schema": {
              "maximum": 1000,
              "type": "integer",
              "format": "int64",
              "default": 500
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document in the page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email campaigns informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "campaigns": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "allOf": [
                              {
                                "required": [
                                  "id",
                                  "name",
                                  "status",
                                  "type"
                                ],
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "ID of the campaign",
                                    "format": "int64",
                                    "example": 12
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the campaign",
                                    "example": "EN - Sales Summer 2017"
                                  },
                                  "subject": {
                                    "type": "string",
                                    "description": "Subject of the campaign. Only available if `abTesting` flag of the campaign is `false`",
                                    "example": "20% OFF for 2017 Summer Sales"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of campaign",
                                    "example": "classic",
                                    "enum": [
                                      "classic",
                                      "trigger"
                                    ]
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Status of the campaign",
                                    "example": "sent",
                                    "enum": [
                                      "draft",
                                      "sent",
                                      "archive",
                                      "queued",
                                      "suspended",
                                      "in_process"
                                    ]
                                  },
                                  "scheduledAt": {
                                    "type": "string",
                                    "description": "UTC date-time on which campaign is scheduled (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                                    "example": "2017-06-01T12:30:00Z"
                                  },
                                  "abTesting": {
                                    "type": "boolean",
                                    "description": "Status of A/B Test for the campaign. abTesting = false means it is disabled, & abTesting = true means it is enabled.",
                                    "example": true
                                  },
                                  "subjectA": {
                                    "type": "string",
                                    "description": "Subject A of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
                                    "example": "Discover the New Collection!"
                                  },
                                  "subjectB": {
                                    "type": "string",
                                    "description": "Subject B of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
                                    "example": "Want to discover the New Collection?"
                                  },
                                  "splitRule": {
                                    "type": "integer",
                                    "description": "The size of your ab-test groups. Only available if `abTesting` flag of the campaign is `true`",
                                    "example": 25
                                  },
                                  "winnerCriteria": {
                                    "type": "string",
                                    "description": "Criteria for the winning version. Only available if `abTesting` flag of the campaign is `true`",
                                    "example": "open"
                                  },
                                  "winnerDelay": {
                                    "type": "integer",
                                    "description": "The duration of the test in hours at the end of which the winning version will be sent. Only available if `abTesting` flag of the campaign is `true`",
                                    "example": 50
                                  },
                                  "sendAtBestTime": {
                                    "type": "boolean",
                                    "description": "It is true if you have chosen to send your campaign at best time, otherwise it is false",
                                    "example": true
                                  }
                                }
                              },
                              {
                                "required": [
                                  "createdAt",
                                  "footer",
                                  "header",
                                  "htmlContent",
                                  "modifiedAt",
                                  "replyTo",
                                  "sender",
                                  "testSent"
                                ],
                                "type": "object",
                                "properties": {
                                  "testSent": {
                                    "type": "boolean",
                                    "description": "Retrieved the status of test email sending. (true=Test email has been sent  false=Test email has not been sent)",
                                    "example": true
                                  },
                                  "header": {
                                    "type": "string",
                                    "description": "Header of the campaign",
                                    "example": "[DEFAULT_HEADER]"
                                  },
                                  "footer": {
                                    "type": "string",
                                    "description": "Footer of the campaign",
                                    "example": "[DEFAULT_FOOTER]"
                                  },
                                  "sender": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Sender name of the campaign",
                                        "example": "Marketing"
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Sender email of the campaign",
                                        "format": "email",
                                        "example": "marketing@mycompany.com"
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "Sender id of the campaign",
                                        "example": "43"
                                      }
                                    }
                                  },
                                  "replyTo": {
                                    "type": "string",
                                    "description": "Email defined as the \"Reply to\" of the campaign",
                                    "format": "email",
                                    "example": "replyto@domain.com"
                                  },
                                  "toField": {
                                    "type": "string",
                                    "description": "Customisation of the \"to\" field of the campaign",
                                    "example": "{FNAME} {LNAME}"
                                  },
                                  "htmlContent": {
                                    "type": "string",
                                    "description": "HTML content of the campaign",
                                    "example": "This is my HTML Content"
                                  },
                                  "shareLink": {
                                    "type": "string",
                                    "description": "Link to share the campaign on social medias",
                                    "format": "url",
                                    "example": "http://dhh.sendinblue.com/fhsgccc.html?t=9865448900"
                                  },
                                  "tag": {
                                    "type": "string",
                                    "description": "Tag of the campaign",
                                    "example": "Newsletter"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "description": "Creation UTC date-time of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                                    "example": "2017-05-01T12:30:00Z"
                                  },
                                  "modifiedAt": {
                                    "type": "string",
                                    "description": "UTC date-time of last modification of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                                    "example": "2017-05-01T12:30:00Z"
                                  },
                                  "inlineImageActivation": {
                                    "type": "boolean",
                                    "description": "Status of inline image. inlineImageActivation = false means image can’t be embedded, & inlineImageActivation = true means image can be embedded, in the email.",
                                    "example": true
                                  },
                                  "mirrorActive": {
                                    "type": "boolean",
                                    "description": "Status of mirror links in campaign. mirrorActive = false means mirror links are deactivated, & mirrorActive = true means mirror links are activated, in the campaign",
                                    "example": true
                                  },
                                  "recurring": {
                                    "type": "boolean",
                                    "description": "FOR TRIGGER ONLY ! Type of trigger campaign.recurring = false means contact can receive the same Trigger campaign only once, & recurring = true means contact can receive the same Trigger campaign several times",
                                    "example": true
                                  },
                                  "sentDate": {
                                    "type": "string",
                                    "description": "Sent UTC date-time of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ). Only available if 'status' of the campaign is 'sent'",
                                    "example": "2018-12-01T16:30:00Z"
                                  },
                                  "returnBounce": {
                                    "type": "integer",
                                    "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                    "format": "int64",
                                    "example": 5
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "required": [
                              "recipients",
                              "statistics"
                            ],
                            "type": "object",
                            "properties": {
                              "recipients": {
                                "type": "object",
                                "allOf": [
                                  {
                                    "required": [
                                      "exclusionLists",
                                      "lists"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "lists": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer",
                                          "description": "List IDs included in the campaign",
                                          "format": "int64",
                                          "example": 21
                                        }
                                      },
                                      "exclusionLists": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer",
                                          "description": "List IDs excluded of the campaign",
                                          "format": "int64",
                                          "example": 13
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "statistics": {
                                "type": "object",
                                "allOf": [
                                  {
                                    "required": [
                                      "campaignStats",
                                      "globalStats",
                                      "linksStats",
                                      "mirrorClick",
                                      "remaining",
                                      "statsByBrowser",
                                      "statsByDevice",
                                      "statsByDomain"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "globalStats": {
                                        "type": "object",
                                        "description": "Overall statistics of the campaign",
                                        "allOf": [
                                          {
                                            "required": [
                                              "clickers",
                                              "complaints",
                                              "delivered",
                                              "hardBounces",
                                              "sent",
                                              "softBounces",
                                              "uniqueClicks",
                                              "uniqueViews",
                                              "unsubscriptions",
                                              "viewed",
                                              "trackableViews"
                                            ],
                                            "type": "object",
                                            "properties": {
                                              "listId": {
                                                "type": "integer",
                                                "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                                "format": "int64",
                                                "example": 2
                                              },
                                              "uniqueClicks": {
                                                "type": "integer",
                                                "description": "Number of unique clicks for the campaign",
                                                "format": "int64",
                                                "example": 2300
                                              },
                                              "clickers": {
                                                "type": "integer",
                                                "description": "Number of total clicks for the campaign",
                                                "format": "int64",
                                                "example": 2665
                                              },
                                              "complaints": {
                                                "type": "integer",
                                                "description": "Number of complaints (Spam reports) for the campaign",
                                                "format": "int64",
                                                "example": 1
                                              },
                                              "delivered": {
                                                "type": "integer",
                                                "description": "Number of delivered emails for the campaign",
                                                "format": "int64",
                                                "example": 19765
                                              },
                                              "sent": {
                                                "type": "integer",
                                                "description": "Number of sent emails for the campaign",
                                                "format": "int64",
                                                "example": 19887
                                              },
                                              "softBounces": {
                                                "type": "integer",
                                                "description": "Number of softbounce for the campaign",
                                                "format": "int64",
                                                "example": 100
                                              },
                                              "hardBounces": {
                                                "type": "integer",
                                                "description": "Number of harbounce for the campaign",
                                                "format": "int64",
                                                "example": 87
                                              },
                                              "uniqueViews": {
                                                "type": "integer",
                                                "description": "Number of unique openings for the campaign",
                                                "format": "int64",
                                                "example": 7779
                                              },
                                              "trackableViews": {
                                                "type": "integer",
                                                "description": "Recipients without any privacy protection option enabled in their email client",
                                                "format": "int64",
                                                "example": 5661
                                              },
                                              "unsubscriptions": {
                                                "type": "integer",
                                                "description": "Number of unsubscription for the campaign",
                                                "format": "int64",
                                                "example": 2
                                              },
                                              "viewed": {
                                                "type": "integer",
                                                "description": "Number of openings for the campaign",
                                                "format": "int64",
                                                "example": 8999
                                              },
                                              "deferred": {
                                                "type": "integer",
                                                "description": "Number of deferred emails for the campaign",
                                                "format": "int64",
                                                "example": 30
                                              },
                                              "returnBounce": {
                                                "type": "integer",
                                                "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                                "format": "int64",
                                                "example": 5
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "campaignStats": {
                                        "type": "array",
                                        "description": "List-wise statistics of the campaign.",
                                        "items": {
                                          "type": "object",
                                          "allOf": [
                                            {
                                              "required": [
                                                "clickers",
                                                "complaints",
                                                "delivered",
                                                "hardBounces",
                                                "sent",
                                                "softBounces",
                                                "uniqueClicks",
                                                "uniqueViews",
                                                "unsubscriptions",
                                                "viewed",
                                                "trackableViews"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "listId": {
                                                  "type": "integer",
                                                  "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                                  "format": "int64",
                                                  "example": 2
                                                },
                                                "uniqueClicks": {
                                                  "type": "integer",
                                                  "description": "Number of unique clicks for the campaign",
                                                  "format": "int64",
                                                  "example": 2300
                                                },
                                                "clickers": {
                                                  "type": "integer",
                                                  "description": "Number of total clicks for the campaign",
                                                  "format": "int64",
                                                  "example": 2665
                                                },
                                                "complaints": {
                                                  "type": "integer",
                                                  "description": "Number of complaints (Spam reports) for the campaign",
                                                  "format": "int64",
                                                  "example": 1
                                                },
                                                "delivered": {
                                                  "type": "integer",
                                                  "description": "Number of delivered emails for the campaign",
                                                  "format": "int64",
                                                  "example": 19765
                                                },
                                                "sent": {
                                                  "type": "integer",
                                                  "description": "Number of sent emails for the campaign",
                                                  "format": "int64",
                                                  "example": 19887
                                                },
                                                "softBounces": {
                                                  "type": "integer",
                                                  "description": "Number of softbounce for the campaign",
                                                  "format": "int64",
                                                  "example": 100
                                                },
                                                "hardBounces": {
                                                  "type": "integer",
                                                  "description": "Number of harbounce for the campaign",
                                                  "format": "int64",
                                                  "example": 87
                                                },
                                                "uniqueViews": {
                                                  "type": "integer",
                                                  "description": "Number of unique openings for the campaign",
                                                  "format": "int64",
                                                  "example": 7779
                                                },
                                                "trackableViews": {
                                                  "type": "integer",
                                                  "description": "Recipients without any privacy protection option enabled in their email client",
                                                  "format": "int64",
                                                  "example": 5661
                                                },
                                                "unsubscriptions": {
                                                  "type": "integer",
                                                  "description": "Number of unsubscription for the campaign",
                                                  "format": "int64",
                                                  "example": 2
                                                },
                                                "viewed": {
                                                  "type": "integer",
                                                  "description": "Number of openings for the campaign",
                                                  "format": "int64",
                                                  "example": 8999
                                                },
                                                "deferred": {
                                                  "type": "integer",
                                                  "description": "Number of deferred emails for the campaign",
                                                  "format": "int64",
                                                  "example": 30
                                                },
                                                "returnBounce": {
                                                  "type": "integer",
                                                  "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                                  "format": "int64",
                                                  "example": 5
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "mirrorClick": {
                                        "type": "integer",
                                        "description": "Number of clicks on mirror link",
                                        "format": "int64",
                                        "example": 120
                                      },
                                      "remaining": {
                                        "type": "integer",
                                        "description": "Number of remaning emails to send",
                                        "format": "int64",
                                        "example": 1000
                                      },
                                      "linksStats": {
                                        "type": "object",
                                        "properties": {},
                                        "description": "Statistics about the number of clicks for the links",
                                        "example": {
                                          "example.abc.com": 7,
                                          "example.domain.com": 10
                                        }
                                      },
                                      "statsByDomain": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "required": [
                                            "clickers",
                                            "complaints",
                                            "delivered",
                                            "hardBounces",
                                            "sent",
                                            "softBounces",
                                            "uniqueClicks",
                                            "uniqueViews",
                                            "unsubscriptions",
                                            "viewed",
                                            "trackableViews"
                                          ],
                                          "type": "object",
                                          "properties": {
                                            "listId": {
                                              "type": "integer",
                                              "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                              "format": "int64",
                                              "example": 2
                                            },
                                            "uniqueClicks": {
                                              "type": "integer",
                                              "description": "Number of unique clicks for the campaign",
                                              "format": "int64",
                                              "example": 2300
                                            },
                                            "clickers": {
                                              "type": "integer",
                                              "description": "Number of total clicks for the campaign",
                                              "format": "int64",
                                              "example": 2665
                                            },
                                            "complaints": {
                                              "type": "integer",
                                              "description": "Number of complaints (Spam reports) for the campaign",
                                              "format": "int64",
                                              "example": 1
                                            },
                                            "delivered": {
                                              "type": "integer",
                                              "description": "Number of delivered emails for the campaign",
                                              "format": "int64",
                                              "example": 19765
                                            },
                                            "sent": {
                                              "type": "integer",
                                              "description": "Number of sent emails for the campaign",
                                              "format": "int64",
                                              "example": 19887
                                            },
                                            "softBounces": {
                                              "type": "integer",
                                              "description": "Number of softbounce for the campaign",
                                              "format": "int64",
                                              "example": 100
                                            },
                                            "hardBounces": {
                                              "type": "integer",
                                              "description": "Number of harbounce for the campaign",
                                              "format": "int64",
                                              "example": 87
                                            },
                                            "uniqueViews": {
                                              "type": "integer",
                                              "description": "Number of unique openings for the campaign",
                                              "format": "int64",
                                              "example": 7779
                                            },
                                            "trackableViews": {
                                              "type": "integer",
                                              "description": "Recipients without any privacy protection option enabled in their email client",
                                              "format": "int64",
                                              "example": 5661
                                            },
                                            "unsubscriptions": {
                                              "type": "integer",
                                              "description": "Number of unsubscription for the campaign",
                                              "format": "int64",
                                              "example": 2
                                            },
                                            "viewed": {
                                              "type": "integer",
                                              "description": "Number of openings for the campaign",
                                              "format": "int64",
                                              "example": 8999
                                            },
                                            "deferred": {
                                              "type": "integer",
                                              "description": "Number of deferred emails for the campaign",
                                              "format": "int64",
                                              "example": 30
                                            },
                                            "returnBounce": {
                                              "type": "integer",
                                              "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                              "format": "int64",
                                              "example": 5
                                            }
                                          }
                                        }
                                      },
                                      "statsByDevice": {
                                        "type": "object",
                                        "properties": {
                                          "desktop": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "required": [
                                                "clickers",
                                                "uniqueClicks",
                                                "uniqueViews",
                                                "viewed"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "clickers": {
                                                  "type": "integer",
                                                  "description": "Number of total clicks for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 2665
                                                },
                                                "uniqueClicks": {
                                                  "type": "integer",
                                                  "description": "Number of unique clicks for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 2300
                                                },
                                                "viewed": {
                                                  "type": "integer",
                                                  "description": "Number of openings for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 8999
                                                },
                                                "uniqueViews": {
                                                  "type": "integer",
                                                  "description": "Number of unique openings for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 7779
                                                }
                                              }
                                            },
                                            "description": "Statistics of the campaign on the basis of desktop devices"
                                          },
                                          "mobile": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "required": [
                                                "clickers",
                                                "uniqueClicks",
                                                "uniqueViews",
                                                "viewed"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "clickers": {
                                                  "type": "integer",
                                                  "description": "Number of total clicks for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 2665
                                                },
                                                "uniqueClicks": {
                                                  "type": "integer",
                                                  "description": "Number of unique clicks for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 2300
                                                },
                                                "viewed": {
                                                  "type": "integer",
                                                  "description": "Number of openings for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 8999
                                                },
                                                "uniqueViews": {
                                                  "type": "integer",
                                                  "description": "Number of unique openings for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 7779
                                                }
                                              }
                                            },
                                            "description": "Statistics of the campaign on the basis of mobile devices"
                                          },
                                          "tablet": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "required": [
                                                "clickers",
                                                "uniqueClicks",
                                                "uniqueViews",
                                                "viewed"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "clickers": {
                                                  "type": "integer",
                                                  "description": "Number of total clicks for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 2665
                                                },
                                                "uniqueClicks": {
                                                  "type": "integer",
                                                  "description": "Number of unique clicks for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 2300
                                                },
                                                "viewed": {
                                                  "type": "integer",
                                                  "description": "Number of openings for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 8999
                                                },
                                                "uniqueViews": {
                                                  "type": "integer",
                                                  "description": "Number of unique openings for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 7779
                                                }
                                              }
                                            },
                                            "description": "Statistics of the campaign on the basis of tablet devices"
                                          },
                                          "unknown": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "required": [
                                                "clickers",
                                                "uniqueClicks",
                                                "uniqueViews",
                                                "viewed"
                                              ],
                                              "type": "object",
                                              "properties": {
                                                "clickers": {
                                                  "type": "integer",
                                                  "description": "Number of total clicks for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 2665
                                                },
                                                "uniqueClicks": {
                                                  "type": "integer",
                                                  "description": "Number of unique clicks for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 2300
                                                },
                                                "viewed": {
                                                  "type": "integer",
                                                  "description": "Number of openings for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 8999
                                                },
                                                "uniqueViews": {
                                                  "type": "integer",
                                                  "description": "Number of unique openings for the campaign using the particular browser",
                                                  "format": "int64",
                                                  "example": 7779
                                                }
                                              }
                                            },
                                            "description": "Statistics of the campaign on the basis of unknown devices"
                                          }
                                        }
                                      },
                                      "statsByBrowser": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "required": [
                                            "clickers",
                                            "uniqueClicks",
                                            "uniqueViews",
                                            "viewed"
                                          ],
                                          "type": "object",
                                          "properties": {
                                            "clickers": {
                                              "type": "integer",
                                              "description": "Number of total clicks for the campaign using the particular browser",
                                              "format": "int64",
                                              "example": 2665
                                            },
                                            "uniqueClicks": {
                                              "type": "integer",
                                              "description": "Number of unique clicks for the campaign using the particular browser",
                                              "format": "int64",
                                              "example": 2300
                                            },
                                            "viewed": {
                                              "type": "integer",
                                              "description": "Number of openings for the campaign using the particular browser",
                                              "format": "int64",
                                              "example": 8999
                                            },
                                            "uniqueViews": {
                                              "type": "integer",
                                              "description": "Number of unique openings for the campaign using the particular browser",
                                              "format": "int64",
                                              "example": 7779
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "shareLink": {
                                "type": "string",
                                "description": "Link to share the campaign on social medias",
                                "format": "url",
                                "example": "http://dhh.sendinblue.com/fhsgccc.html?t=9865448900"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of Email campaigns retrieved",
                      "format": "int64",
                      "example": 24
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "count": 2,
                      "campaigns": [
                        {
                          "id": 12,
                          "name": "EN - Sales Summer 2017",
                          "subject": "20% OFF for 2017 Summer Sales",
                          "type": "classic",
                          "status": "sent",
                          "scheduledAt": "2017-06-01T12:30:00Z",
                          "testSent": true,
                          "header": "[DEFAULT_HEADER]",
                          "footer": "[DEFAULT_FOOTER]",
                          "sender": {
                            "email": "marketing@mycompany.com",
                            "name": "Marketing",
                            "id": 26
                          },
                          "replyTo": "replyto@domain.com",
                          "toField": "{FNAME} {LNAME}",
                          "htmlContent": "This is my HTML Content",
                          "shareLink": "http://example.com/fhsgccc.html?t=9865448900",
                          "tag": "Newsletter",
                          "createdAt": "2017-05-01T12:30:00Z",
                          "modifiedAt": "2017-05-01T12:30:00Z",
                          "inlineImageActivation": true,
                          "mirrorActive": true,
                          "recurring": false,
                          "recipients": {
                            "lists": [
                              5
                            ],
                            "exclusionLists": [
                              13
                            ]
                          },
                          "statistics": {
                            "globalStats": {
                              "uniqueClicks": 2300,
                              "clickers": 2665,
                              "complaints": 1,
                              "delivered": 19765,
                              "sent": 19887,
                              "softBounces": 100,
                              "hardBounces": 87,
                              "uniqueViews": 7779,
                              "trackableViews": 5661,
                              "unsubscriptions": 2,
                              "viewed": 8999
                            },
                            "campaignStats": [
                              {
                                "listId": 5,
                                "uniqueClicks": 2300,
                                "clickers": 2665,
                                "complaints": 1,
                                "delivered": 19765,
                                "sent": 19887,
                                "softBounces": 100,
                                "hardBounces": 87,
                                "uniqueViews": 7779,
                                "trackableViews": 5661,
                                "unsubscriptions": 2,
                                "viewed": 8999,
                                "deferred": 30
                              }
                            ],
                            "mirrorClick": 120,
                            "remaining": 1000,
                            "linksStats": {
                              "http://myUrl1.domain.com": 80
                            },
                            "statsByDomain": {
                              "yahoo.com": {
                                "uniqueClicks": 298,
                                "clickers": 533,
                                "complaints": 0,
                                "sent": 25601,
                                "softBounces": 5,
                                "hardBounces": 0,
                                "uniqueViews": 3527,
                                "unsubscriptions": 17,
                                "viewed": 5255,
                                "delivered": 25596
                              },
                              "hotmail.co.uk": {
                                "uniqueClicks": 1970,
                                "clickers": 2720,
                                "complaints": 5,
                                "sent": 117055,
                                "softBounces": 111,
                                "hardBounces": 0,
                                "uniqueViews": 21111,
                                "unsubscriptions": 105,
                                "viewed": 35251,
                                "delivered": 117056
                              }
                            }
                          }
                        },
                        {
                          "id": 22,
                          "name": "Weekly - 1",
                          "subject": "Week 1 - Newsletter",
                          "type": "Classic",
                          "status": "draft",
                          "scheduledAt": "",
                          "testSent": false,
                          "header": "[DEFAULT_HEADER]",
                          "footer": "[DEFAULT_FOOTER]",
                          "sender": {
                            "email": "newsletter@mycompany.com",
                            "name": "Newsletter",
                            "id": 26
                          },
                          "replyTo": "replyto@domain.com",
                          "toField": "{FNAME} {LNAME}",
                          "htmlContent": "This is my HTML Content",
                          "shareLink": "http://example.com/fhsgccc.html?t=9865448900",
                          "tag": "Newsletter",
                          "createdAt": "2017-05-01T12:30:00Z",
                          "modifiedAt": "2017-05-01T12:30:00Z",
                          "inlineImageActivation": true,
                          "mirrorActive": true,
                          "recurring": false,
                          "recipients": {
                            "lists": [
                              10
                            ],
                            "exclusionLists": [
                              45
                            ]
                          },
                          "statistics": {
                            "globalStats": {
                              "uniqueClicks": 2300,
                              "clickers": 2665,
                              "complaints": 1,
                              "delivered": 19765,
                              "sent": 19887,
                              "softBounces": 100,
                              "hardBounces": 87,
                              "uniqueViews": 7779,
                              "trackableViews": 5661,
                              "unsubscriptions": 2,
                              "viewed": 8999
                            },
                            "campaignStats": [
                              {
                                "listId": 10,
                                "uniqueClicks": 2300,
                                "clickers": 2665,
                                "complaints": 1,
                                "delivered": 19765,
                                "sent": 19887,
                                "softBounces": 100,
                                "hardBounces": 87,
                                "uniqueViews": 7779,
                                "trackableViews": 5661,
                                "unsubscriptions": 2,
                                "viewed": 8999,
                                "deferred": 30
                              }
                            ],
                            "mirrorClick": 120,
                            "remaining": 1000,
                            "linksStats": {
                              "http://myUrl1.domain.com": {
                                "nbClick": 80
                              },
                              "http://myUrl2.domain.com": {
                                "nbClick": 80
                              },
                              "http://myUrl3.domain.com": {
                                "nbClick": 80
                              }
                            },
                            "statsByDomain": {
                              "gmail": {
                                "uniqueClicks": 2300,
                                "clickers": 2665,
                                "complaints": 1,
                                "delivered": 19765,
                                "sent": 19887,
                                "softBounces": 100,
                                "hardBounces": 87,
                                "uniqueViews": 7779,
                                "unsubscriptions": 2,
                                "viewed": 8999,
                                "deferred": 30
                              },
                              "aol": {
                                "uniqueClicks": 2300,
                                "clickers": 2665,
                                "complaints": 1,
                                "delivered": 19765,
                                "sent": 19887,
                                "softBounces": 100,
                                "hardBounces": 87,
                                "uniqueViews": 7779,
                                "unsubscriptions": 2,
                                "viewed": 8999,
                                "deferred": 30
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Create an email campaign",
        "operationId": "createEmailCampaign",
        "requestBody": {
          "description": "Values to create a campaign",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "sender"
                ],
                "type": "object",
                "properties": {
                  "tag": {
                    "type": "string",
                    "description": "Tag of the campaign",
                    "example": "Newsletter"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Sender Name",
                        "example": "Mary from MyShop"
                      },
                      "email": {
                        "type": "string",
                        "description": "Sender email",
                        "format": "email",
                        "example": "newsletter@myshop.com"
                      },
                      "id": {
                        "type": "integer",
                        "description": "Select the sender for the campaign on the basis of sender id.\n_In order to select a sender with specific pool of IP’s, dedicated ip users shall pass id (instead of email)_.\n",
                        "format": "int64",
                        "example": 3
                      }
                    },
                    "description": "Sender details including id or email and name (_optional_). Only one of either Sender's email or Sender's ID shall be passed in one request at a time. For example:\n**{\"name\":\"xyz\", \"email\":\"example@abc.com\"}**\n**{\"name\":\"xyz\", \"id\":123}**\n"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the campaign",
                    "example": "Newsletter - May 2017"
                  },
                  "htmlContent": {
                    "type": "string",
                    "description": "Mandatory if htmlUrl and templateId are empty. Body of the message (HTML).\n",
                    "example": "<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>"
                  },
                  "htmlUrl": {
                    "type": "string",
                    "description": "**Mandatory if htmlContent and templateId are empty**. Url to the message (HTML). For example:\n**https://html.domain.com**\n",
                    "format": "url",
                    "example": "https://html.domain.com"
                  },
                  "templateId": {
                    "type": "integer",
                    "description": "**Mandatory if htmlContent and htmlUrl are empty**. Id of the transactional\nemail template with status _active_. Used to copy only its content fetched\nfrom htmlContent/htmlUrl to an email campaign for RSS feature.\n",
                    "format": "int64"
                  },
                  "scheduledAt": {
                    "type": "string",
                    "description": "Sending UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result**.\nIf sendAtBestTime is set to true, your campaign will be sent according to the date passed (ignoring the time part). For example:\n**2017-06-01T12:30:00+02:00**\n",
                    "example": "2017-06-01T12:30:00+02:00"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Subject of the campaign. **Mandatory if abTesting is false**.\nIgnored if abTesting is true.\n",
                    "example": "Discover the New Collection !"
                  },
                  "replyTo": {
                    "type": "string",
                    "description": "Email on which the campaign recipients will be able to reply to",
                    "format": "email",
                    "example": "support@myshop.com"
                  },
                  "toField": {
                    "type": "string",
                    "description": "To personalize the **To** Field. If you want to include the first name and last name of your recipient, add **{FNAME} {LNAME}**. These contact attributes must already exist in your SendinBlue account. If input parameter **params** used please use **{{contact.FNAME}} {{contact.LNAME}}** for personalization\n",
                    "example": "{FNAME} {LNAME}"
                  },
                  "recipients": {
                    "type": "object",
                    "properties": {
                      "exclusionListIds": {
                        "type": "array",
                        "description": "List ids to exclude from the campaign",
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 8
                        }
                      },
                      "listIds": {
                        "type": "array",
                        "description": "**Mandatory if scheduledAt is not empty**. List Ids to send the campaign to\n",
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 32
                        }
                      }
                    },
                    "description": "List ids to include/exclude from campaign"
                  },
                  "attachmentUrl": {
                    "type": "string",
                    "description": "Absolute url of the attachment (no local file).\nExtension allowed: \n#### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub and eps\n",
                    "format": "url",
                    "example": "https://attachment.domain.com"
                  },
                  "inlineImageActivation": {
                    "type": "boolean",
                    "description": "Use true to embedded the images in your email. Final size of\nthe email should be less than **4MB**. Campaigns with embedded images can\n_not be sent to more than 5000 contacts_\n",
                    "example": true,
                    "default": false
                  },
                  "mirrorActive": {
                    "type": "boolean",
                    "description": "Use true to enable the mirror link",
                    "example": true
                  },
                  "footer": {
                    "type": "string",
                    "description": "Footer of the email campaign",
                    "example": "[DEFAULT_FOOTER]"
                  },
                  "header": {
                    "type": "string",
                    "description": "Header of the email campaign",
                    "example": "[DEFAULT_HEADER]"
                  },
                  "utmCampaign": {
                    "type": "string",
                    "description": "Customize the utm_campaign value. If this field is empty, the campaign name will be used. Only alphanumeric characters and spaces are allowed",
                    "example": "NL_05_2017"
                  },
                  "params": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Pass the set of attributes to customize the type classic campaign. For example: **{\"FNAME\":\"Joe\", \"LNAME\":\"Doe\"}**. Only available if **type** is **classic**. It's considered only if campaign is in _New Template Language format_. The New Template Language is dependent on the values of **subject, htmlContent/htmlUrl, sender.name & toField**\n",
                    "example": {
                      "FNAME": "Joe",
                      "LNAME": "Doe"
                    }
                  },
                  "sendAtBestTime": {
                    "type": "boolean",
                    "description": "Set this to true if you want to send your campaign at best time.",
                    "example": true,
                    "default": false
                  },
                  "abTesting": {
                    "type": "boolean",
                    "description": "Status of A/B Test. abTesting = false means it is disabled & abTesting = true means it is enabled. **subjectA, subjectB, splitRule, winnerCriteria & winnerDelay** will be considered when abTesting is set to true.\nsubjectA & subjectB are mandatory together & subject if passed is ignored. **Can be set to true only if sendAtBestTime is false**.\nYou will be able to set up two subject lines for your campaign and send them to a random sample of your total recipients. Half of the test group will receive version A, and the other half will receive version B\n",
                    "example": true,
                    "default": false
                  },
                  "subjectA": {
                    "type": "string",
                    "description": "Subject A of the campaign. **Mandatory if abTesting = true**.\nsubjectA & subjectB should have unique value\n",
                    "example": "Discover the New Collection!"
                  },
                  "subjectB": {
                    "type": "string",
                    "description": "Subject B of the campaign. **Mandatory if abTesting = true**.\nsubjectA & subjectB should have unique value\n",
                    "example": "Want to discover the New Collection?"
                  },
                  "splitRule": {
                    "maximum": 50,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Add the size of your test groups. **Mandatory if abTesting = true & 'recipients' is passed**. We'll send version A and B to a random sample of recipients, and then the winning version to everyone else\n",
                    "format": "int64",
                    "example": 50
                  },
                  "winnerCriteria": {
                    "type": "string",
                    "description": "Choose the metrics that will determinate the winning version. **Mandatory if _splitRule_ >= 1 and < 50**. If splitRule = 50, `winnerCriteria` is ignored if passed\n",
                    "example": "open",
                    "enum": [
                      "open",
                      "click"
                    ]
                  },
                  "winnerDelay": {
                    "maximum": 168,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Choose the duration of the test in hours. Maximum is 7 days, pass 24*7 = 168 hours. The winning version will be sent at the end of the test. **Mandatory if _splitRule_ >= 1 and < 50**. If splitRule = 50, `winnerDelay` is ignored if passed\n",
                    "format": "int64",
                    "example": 50
                  },
                  "ipWarmupEnable": {
                    "type": "boolean",
                    "description": "**Available for dedicated ip clients**. Set this to true if you wish to warm up your ip.\n",
                    "example": true,
                    "default": false
                  },
                  "initialQuota": {
                    "type": "integer",
                    "description": "**Mandatory if ipWarmupEnable is set to true**. Set an initial quota greater than 1 for warming up your ip. We recommend you set a value of 3000.\n",
                    "format": "int64",
                    "example": 3000
                  },
                  "increaseRate": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "**Mandatory if ipWarmupEnable is set to true**. Set a percentage increase rate for warming up your ip. We recommend you set the increase rate to 30% per day. If you want to send the same number of emails every day, set the daily increase value to 0%.\n",
                    "format": "int64",
                    "example": 70
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the object created",
                      "format": "int64",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailCampaigns/{campaignId}": {
      "get": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Get an email campaign report",
        "operationId": "getEmailCampaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email campaign informations",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "required": [
                            "id",
                            "name",
                            "status",
                            "type"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "ID of the campaign",
                              "format": "int64",
                              "example": 12
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the campaign",
                              "example": "EN - Sales Summer 2017"
                            },
                            "subject": {
                              "type": "string",
                              "description": "Subject of the campaign. Only available if `abTesting` flag of the campaign is `false`",
                              "example": "20% OFF for 2017 Summer Sales"
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of campaign",
                              "example": "classic",
                              "enum": [
                                "classic",
                                "trigger"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the campaign",
                              "example": "sent",
                              "enum": [
                                "draft",
                                "sent",
                                "archive",
                                "queued",
                                "suspended",
                                "in_process"
                              ]
                            },
                            "scheduledAt": {
                              "type": "string",
                              "description": "UTC date-time on which campaign is scheduled (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                              "example": "2017-06-01T12:30:00Z"
                            },
                            "abTesting": {
                              "type": "boolean",
                              "description": "Status of A/B Test for the campaign. abTesting = false means it is disabled, & abTesting = true means it is enabled.",
                              "example": true
                            },
                            "subjectA": {
                              "type": "string",
                              "description": "Subject A of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
                              "example": "Discover the New Collection!"
                            },
                            "subjectB": {
                              "type": "string",
                              "description": "Subject B of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
                              "example": "Want to discover the New Collection?"
                            },
                            "splitRule": {
                              "type": "integer",
                              "description": "The size of your ab-test groups. Only available if `abTesting` flag of the campaign is `true`",
                              "example": 25
                            },
                            "winnerCriteria": {
                              "type": "string",
                              "description": "Criteria for the winning version. Only available if `abTesting` flag of the campaign is `true`",
                              "example": "open"
                            },
                            "winnerDelay": {
                              "type": "integer",
                              "description": "The duration of the test in hours at the end of which the winning version will be sent. Only available if `abTesting` flag of the campaign is `true`",
                              "example": 50
                            },
                            "sendAtBestTime": {
                              "type": "boolean",
                              "description": "It is true if you have chosen to send your campaign at best time, otherwise it is false",
                              "example": true
                            }
                          }
                        },
                        {
                          "required": [
                            "createdAt",
                            "footer",
                            "header",
                            "htmlContent",
                            "modifiedAt",
                            "replyTo",
                            "sender",
                            "testSent"
                          ],
                          "type": "object",
                          "properties": {
                            "testSent": {
                              "type": "boolean",
                              "description": "Retrieved the status of test email sending. (true=Test email has been sent  false=Test email has not been sent)",
                              "example": true
                            },
                            "header": {
                              "type": "string",
                              "description": "Header of the campaign",
                              "example": "[DEFAULT_HEADER]"
                            },
                            "footer": {
                              "type": "string",
                              "description": "Footer of the campaign",
                              "example": "[DEFAULT_FOOTER]"
                            },
                            "sender": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Sender name of the campaign",
                                  "example": "Marketing"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Sender email of the campaign",
                                  "format": "email",
                                  "example": "marketing@mycompany.com"
                                },
                                "id": {
                                  "type": "string",
                                  "description": "Sender id of the campaign",
                                  "example": "43"
                                }
                              }
                            },
                            "replyTo": {
                              "type": "string",
                              "description": "Email defined as the \"Reply to\" of the campaign",
                              "format": "email",
                              "example": "replyto@domain.com"
                            },
                            "toField": {
                              "type": "string",
                              "description": "Customisation of the \"to\" field of the campaign",
                              "example": "{FNAME} {LNAME}"
                            },
                            "htmlContent": {
                              "type": "string",
                              "description": "HTML content of the campaign",
                              "example": "This is my HTML Content"
                            },
                            "shareLink": {
                              "type": "string",
                              "description": "Link to share the campaign on social medias",
                              "format": "url",
                              "example": "http://dhh.sendinblue.com/fhsgccc.html?t=9865448900"
                            },
                            "tag": {
                              "type": "string",
                              "description": "Tag of the campaign",
                              "example": "Newsletter"
                            },
                            "createdAt": {
                              "type": "string",
                              "description": "Creation UTC date-time of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                              "example": "2017-05-01T12:30:00Z"
                            },
                            "modifiedAt": {
                              "type": "string",
                              "description": "UTC date-time of last modification of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                              "example": "2017-05-01T12:30:00Z"
                            },
                            "inlineImageActivation": {
                              "type": "boolean",
                              "description": "Status of inline image. inlineImageActivation = false means image can’t be embedded, & inlineImageActivation = true means image can be embedded, in the email.",
                              "example": true
                            },
                            "mirrorActive": {
                              "type": "boolean",
                              "description": "Status of mirror links in campaign. mirrorActive = false means mirror links are deactivated, & mirrorActive = true means mirror links are activated, in the campaign",
                              "example": true
                            },
                            "recurring": {
                              "type": "boolean",
                              "description": "FOR TRIGGER ONLY ! Type of trigger campaign.recurring = false means contact can receive the same Trigger campaign only once, & recurring = true means contact can receive the same Trigger campaign several times",
                              "example": true
                            },
                            "sentDate": {
                              "type": "string",
                              "description": "Sent UTC date-time of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ). Only available if 'status' of the campaign is 'sent'",
                              "example": "2018-12-01T16:30:00Z"
                            },
                            "returnBounce": {
                              "type": "integer",
                              "description": "Total number of non-delivered campaigns for a particular campaign id.",
                              "format": "int64",
                              "example": 5
                            }
                          }
                        }
                      ]
                    },
                    {
                      "required": [
                        "recipients",
                        "statistics"
                      ],
                      "type": "object",
                      "properties": {
                        "recipients": {
                          "type": "object",
                          "allOf": [
                            {
                              "required": [
                                "exclusionLists",
                                "lists"
                              ],
                              "type": "object",
                              "properties": {
                                "lists": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "description": "List IDs included in the campaign",
                                    "format": "int64",
                                    "example": 21
                                  }
                                },
                                "exclusionLists": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "description": "List IDs excluded of the campaign",
                                    "format": "int64",
                                    "example": 13
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "statistics": {
                          "type": "object",
                          "allOf": [
                            {
                              "required": [
                                "campaignStats",
                                "globalStats",
                                "linksStats",
                                "mirrorClick",
                                "remaining",
                                "statsByBrowser",
                                "statsByDevice",
                                "statsByDomain"
                              ],
                              "type": "object",
                              "properties": {
                                "globalStats": {
                                  "type": "object",
                                  "description": "Overall statistics of the campaign",
                                  "allOf": [
                                    {
                                      "required": [
                                        "clickers",
                                        "complaints",
                                        "delivered",
                                        "hardBounces",
                                        "sent",
                                        "softBounces",
                                        "uniqueClicks",
                                        "uniqueViews",
                                        "unsubscriptions",
                                        "viewed",
                                        "trackableViews"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "listId": {
                                          "type": "integer",
                                          "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                          "format": "int64",
                                          "example": 2
                                        },
                                        "uniqueClicks": {
                                          "type": "integer",
                                          "description": "Number of unique clicks for the campaign",
                                          "format": "int64",
                                          "example": 2300
                                        },
                                        "clickers": {
                                          "type": "integer",
                                          "description": "Number of total clicks for the campaign",
                                          "format": "int64",
                                          "example": 2665
                                        },
                                        "complaints": {
                                          "type": "integer",
                                          "description": "Number of complaints (Spam reports) for the campaign",
                                          "format": "int64",
                                          "example": 1
                                        },
                                        "delivered": {
                                          "type": "integer",
                                          "description": "Number of delivered emails for the campaign",
                                          "format": "int64",
                                          "example": 19765
                                        },
                                        "sent": {
                                          "type": "integer",
                                          "description": "Number of sent emails for the campaign",
                                          "format": "int64",
                                          "example": 19887
                                        },
                                        "softBounces": {
                                          "type": "integer",
                                          "description": "Number of softbounce for the campaign",
                                          "format": "int64",
                                          "example": 100
                                        },
                                        "hardBounces": {
                                          "type": "integer",
                                          "description": "Number of harbounce for the campaign",
                                          "format": "int64",
                                          "example": 87
                                        },
                                        "uniqueViews": {
                                          "type": "integer",
                                          "description": "Number of unique openings for the campaign",
                                          "format": "int64",
                                          "example": 7779
                                        },
                                        "trackableViews": {
                                          "type": "integer",
                                          "description": "Recipients without any privacy protection option enabled in their email client",
                                          "format": "int64",
                                          "example": 5661
                                        },
                                        "unsubscriptions": {
                                          "type": "integer",
                                          "description": "Number of unsubscription for the campaign",
                                          "format": "int64",
                                          "example": 2
                                        },
                                        "viewed": {
                                          "type": "integer",
                                          "description": "Number of openings for the campaign",
                                          "format": "int64",
                                          "example": 8999
                                        },
                                        "deferred": {
                                          "type": "integer",
                                          "description": "Number of deferred emails for the campaign",
                                          "format": "int64",
                                          "example": 30
                                        },
                                        "returnBounce": {
                                          "type": "integer",
                                          "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                          "format": "int64",
                                          "example": 5
                                        }
                                      }
                                    }
                                  ]
                                },
                                "campaignStats": {
                                  "type": "array",
                                  "description": "List-wise statistics of the campaign.",
                                  "items": {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "required": [
                                          "clickers",
                                          "complaints",
                                          "delivered",
                                          "hardBounces",
                                          "sent",
                                          "softBounces",
                                          "uniqueClicks",
                                          "uniqueViews",
                                          "unsubscriptions",
                                          "viewed",
                                          "trackableViews"
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "listId": {
                                            "type": "integer",
                                            "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                            "format": "int64",
                                            "example": 2
                                          },
                                          "uniqueClicks": {
                                            "type": "integer",
                                            "description": "Number of unique clicks for the campaign",
                                            "format": "int64",
                                            "example": 2300
                                          },
                                          "clickers": {
                                            "type": "integer",
                                            "description": "Number of total clicks for the campaign",
                                            "format": "int64",
                                            "example": 2665
                                          },
                                          "complaints": {
                                            "type": "integer",
                                            "description": "Number of complaints (Spam reports) for the campaign",
                                            "format": "int64",
                                            "example": 1
                                          },
                                          "delivered": {
                                            "type": "integer",
                                            "description": "Number of delivered emails for the campaign",
                                            "format": "int64",
                                            "example": 19765
                                          },
                                          "sent": {
                                            "type": "integer",
                                            "description": "Number of sent emails for the campaign",
                                            "format": "int64",
                                            "example": 19887
                                          },
                                          "softBounces": {
                                            "type": "integer",
                                            "description": "Number of softbounce for the campaign",
                                            "format": "int64",
                                            "example": 100
                                          },
                                          "hardBounces": {
                                            "type": "integer",
                                            "description": "Number of harbounce for the campaign",
                                            "format": "int64",
                                            "example": 87
                                          },
                                          "uniqueViews": {
                                            "type": "integer",
                                            "description": "Number of unique openings for the campaign",
                                            "format": "int64",
                                            "example": 7779
                                          },
                                          "trackableViews": {
                                            "type": "integer",
                                            "description": "Recipients without any privacy protection option enabled in their email client",
                                            "format": "int64",
                                            "example": 5661
                                          },
                                          "unsubscriptions": {
                                            "type": "integer",
                                            "description": "Number of unsubscription for the campaign",
                                            "format": "int64",
                                            "example": 2
                                          },
                                          "viewed": {
                                            "type": "integer",
                                            "description": "Number of openings for the campaign",
                                            "format": "int64",
                                            "example": 8999
                                          },
                                          "deferred": {
                                            "type": "integer",
                                            "description": "Number of deferred emails for the campaign",
                                            "format": "int64",
                                            "example": 30
                                          },
                                          "returnBounce": {
                                            "type": "integer",
                                            "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                            "format": "int64",
                                            "example": 5
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "mirrorClick": {
                                  "type": "integer",
                                  "description": "Number of clicks on mirror link",
                                  "format": "int64",
                                  "example": 120
                                },
                                "remaining": {
                                  "type": "integer",
                                  "description": "Number of remaning emails to send",
                                  "format": "int64",
                                  "example": 1000
                                },
                                "linksStats": {
                                  "type": "object",
                                  "properties": {},
                                  "description": "Statistics about the number of clicks for the links",
                                  "example": {
                                    "example.abc.com": 7,
                                    "example.domain.com": 10
                                  }
                                },
                                "statsByDomain": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "required": [
                                      "clickers",
                                      "complaints",
                                      "delivered",
                                      "hardBounces",
                                      "sent",
                                      "softBounces",
                                      "uniqueClicks",
                                      "uniqueViews",
                                      "unsubscriptions",
                                      "viewed",
                                      "trackableViews"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "listId": {
                                        "type": "integer",
                                        "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                        "format": "int64",
                                        "example": 2
                                      },
                                      "uniqueClicks": {
                                        "type": "integer",
                                        "description": "Number of unique clicks for the campaign",
                                        "format": "int64",
                                        "example": 2300
                                      },
                                      "clickers": {
                                        "type": "integer",
                                        "description": "Number of total clicks for the campaign",
                                        "format": "int64",
                                        "example": 2665
                                      },
                                      "complaints": {
                                        "type": "integer",
                                        "description": "Number of complaints (Spam reports) for the campaign",
                                        "format": "int64",
                                        "example": 1
                                      },
                                      "delivered": {
                                        "type": "integer",
                                        "description": "Number of delivered emails for the campaign",
                                        "format": "int64",
                                        "example": 19765
                                      },
                                      "sent": {
                                        "type": "integer",
                                        "description": "Number of sent emails for the campaign",
                                        "format": "int64",
                                        "example": 19887
                                      },
                                      "softBounces": {
                                        "type": "integer",
                                        "description": "Number of softbounce for the campaign",
                                        "format": "int64",
                                        "example": 100
                                      },
                                      "hardBounces": {
                                        "type": "integer",
                                        "description": "Number of harbounce for the campaign",
                                        "format": "int64",
                                        "example": 87
                                      },
                                      "uniqueViews": {
                                        "type": "integer",
                                        "description": "Number of unique openings for the campaign",
                                        "format": "int64",
                                        "example": 7779
                                      },
                                      "trackableViews": {
                                        "type": "integer",
                                        "description": "Recipients without any privacy protection option enabled in their email client",
                                        "format": "int64",
                                        "example": 5661
                                      },
                                      "unsubscriptions": {
                                        "type": "integer",
                                        "description": "Number of unsubscription for the campaign",
                                        "format": "int64",
                                        "example": 2
                                      },
                                      "viewed": {
                                        "type": "integer",
                                        "description": "Number of openings for the campaign",
                                        "format": "int64",
                                        "example": 8999
                                      },
                                      "deferred": {
                                        "type": "integer",
                                        "description": "Number of deferred emails for the campaign",
                                        "format": "int64",
                                        "example": 30
                                      },
                                      "returnBounce": {
                                        "type": "integer",
                                        "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                        "format": "int64",
                                        "example": 5
                                      }
                                    }
                                  }
                                },
                                "statsByDevice": {
                                  "type": "object",
                                  "properties": {
                                    "desktop": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "required": [
                                          "clickers",
                                          "uniqueClicks",
                                          "uniqueViews",
                                          "viewed"
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "clickers": {
                                            "type": "integer",
                                            "description": "Number of total clicks for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 2665
                                          },
                                          "uniqueClicks": {
                                            "type": "integer",
                                            "description": "Number of unique clicks for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 2300
                                          },
                                          "viewed": {
                                            "type": "integer",
                                            "description": "Number of openings for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 8999
                                          },
                                          "uniqueViews": {
                                            "type": "integer",
                                            "description": "Number of unique openings for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 7779
                                          }
                                        }
                                      },
                                      "description": "Statistics of the campaign on the basis of desktop devices"
                                    },
                                    "mobile": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "required": [
                                          "clickers",
                                          "uniqueClicks",
                                          "uniqueViews",
                                          "viewed"
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "clickers": {
                                            "type": "integer",
                                            "description": "Number of total clicks for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 2665
                                          },
                                          "uniqueClicks": {
                                            "type": "integer",
                                            "description": "Number of unique clicks for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 2300
                                          },
                                          "viewed": {
                                            "type": "integer",
                                            "description": "Number of openings for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 8999
                                          },
                                          "uniqueViews": {
                                            "type": "integer",
                                            "description": "Number of unique openings for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 7779
                                          }
                                        }
                                      },
                                      "description": "Statistics of the campaign on the basis of mobile devices"
                                    },
                                    "tablet": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "required": [
                                          "clickers",
                                          "uniqueClicks",
                                          "uniqueViews",
                                          "viewed"
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "clickers": {
                                            "type": "integer",
                                            "description": "Number of total clicks for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 2665
                                          },
                                          "uniqueClicks": {
                                            "type": "integer",
                                            "description": "Number of unique clicks for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 2300
                                          },
                                          "viewed": {
                                            "type": "integer",
                                            "description": "Number of openings for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 8999
                                          },
                                          "uniqueViews": {
                                            "type": "integer",
                                            "description": "Number of unique openings for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 7779
                                          }
                                        }
                                      },
                                      "description": "Statistics of the campaign on the basis of tablet devices"
                                    },
                                    "unknown": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "required": [
                                          "clickers",
                                          "uniqueClicks",
                                          "uniqueViews",
                                          "viewed"
                                        ],
                                        "type": "object",
                                        "properties": {
                                          "clickers": {
                                            "type": "integer",
                                            "description": "Number of total clicks for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 2665
                                          },
                                          "uniqueClicks": {
                                            "type": "integer",
                                            "description": "Number of unique clicks for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 2300
                                          },
                                          "viewed": {
                                            "type": "integer",
                                            "description": "Number of openings for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 8999
                                          },
                                          "uniqueViews": {
                                            "type": "integer",
                                            "description": "Number of unique openings for the campaign using the particular browser",
                                            "format": "int64",
                                            "example": 7779
                                          }
                                        }
                                      },
                                      "description": "Statistics of the campaign on the basis of unknown devices"
                                    }
                                  }
                                },
                                "statsByBrowser": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "required": [
                                      "clickers",
                                      "uniqueClicks",
                                      "uniqueViews",
                                      "viewed"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "clickers": {
                                        "type": "integer",
                                        "description": "Number of total clicks for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 2665
                                      },
                                      "uniqueClicks": {
                                        "type": "integer",
                                        "description": "Number of unique clicks for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 2300
                                      },
                                      "viewed": {
                                        "type": "integer",
                                        "description": "Number of openings for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 8999
                                      },
                                      "uniqueViews": {
                                        "type": "integer",
                                        "description": "Number of unique openings for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 7779
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 22,
                      "name": "Weekly - 1",
                      "subject": "Week 1 - Newsletter",
                      "type": "classic",
                      "status": "draft",
                      "scheduledAt": "2017-09-22T12:30:00Z",
                      "testSent": false,
                      "header": "[DEFAULT_HEADER]",
                      "footer": "[DEFAULT_FOOTER]",
                      "sender": {
                        "email": "newsletter@mycompany.com",
                        "name": "Newsletter",
                        "id": 26
                      },
                      "replyTo": "replyto@domain.com",
                      "toField": "{FNAME} {LNAME}",
                      "htmlContent": "This is my HTML Content",
                      "shareLink": "http://dhh.sendinblue.com/fhsgccc.html?t=9865448900",
                      "tag": "Newsletter",
                      "createdAt": "2017-05-01T12:30:00Z",
                      "modifiedAt": "2017-05-01T12:30:00Z",
                      "inlineImageActivation": true,
                      "mirrorActive": true,
                      "recurring": false,
                      "recipients": {
                        "lists": [
                          22
                        ],
                        "exclusionLists": [
                          45
                        ]
                      },
                      "statistics": {
                        "globalStats": {
                          "uniqueClicks": 2300,
                          "clickers": 2665,
                          "complaints": 1,
                          "delivered": 19765,
                          "sent": 19887,
                          "softBounces": 100,
                          "hardBounces": 87,
                          "uniqueViews": 7779,
                          "trackableViews": 5661,
                          "unsubscriptions": 2,
                          "viewed": 8999
                        },
                        "campaignStats": [
                          {
                            "listId": 22,
                            "uniqueClicks": 2300,
                            "clickers": 2665,
                            "complaints": 1,
                            "delivered": 19765,
                            "sent": 19887,
                            "softBounces": 100,
                            "hardBounces": 87,
                            "uniqueViews": 7779,
                            "trackableViews": 5661,
                            "unsubscriptions": 2,
                            "viewed": 8999,
                            "deferred": 30
                          }
                        ],
                        "mirrorClick": 120,
                        "remaining": 1000,
                        "linksStats": {
                          "http://myUrl1.domain.com": {
                            "nbClick": 80
                          },
                          "http://myUrl2.domain.com": {
                            "nbClick": 80
                          },
                          "http://myUrl3.domain.com": {
                            "nbClick": 80
                          }
                        },
                        "statsByDomain": {
                          "gmail": {
                            "uniqueClicks": 2300,
                            "clickers": 2665,
                            "complaints": 1,
                            "delivered": 19765,
                            "sent": 19887,
                            "softBounces": 100,
                            "hardBounces": 87,
                            "uniqueViews": 7779,
                            "unsubscriptions": 2,
                            "viewed": 8999,
                            "deferred": 30
                          }
                        },
                        "statsByDevice": {
                          "desktop": {
                            "mac": {
                              "clickers": 1,
                              "uniqueClicks": 0,
                              "viewed": 2,
                              "uniqueViews": 1
                            }
                          },
                          "mobile": {
                            "androidMobile": {
                              "clickers": 1,
                              "uniqueClicks": 0,
                              "viewed": 1,
                              "uniqueViews": 0
                            },
                            "iPhone": {
                              "clickers": 1,
                              "uniqueClicks": 0,
                              "viewed": 2,
                              "uniqueViews": 0
                            }
                          }
                        },
                        "statsByBrowser": {
                          "thunderbird": {
                            "clickers": 1,
                            "uniqueClicks": 0,
                            "viewed": 1,
                            "uniqueViews": 0
                          },
                          "safari": {
                            "clickers": 1,
                            "uniqueClicks": 0,
                            "viewed": 1,
                            "uniqueViews": 0
                          },
                          "internetExplorer": {
                            "clickers": 0,
                            "uniqueClicks": 0,
                            "viewed": 1,
                            "uniqueViews": 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Update an email campaign",
        "operationId": "updateEmailCampaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Values to update a campaign",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag": {
                    "type": "string",
                    "description": "Tag of the campaign",
                    "example": "Newsletter"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Sender Name from which the campaign emails are sent",
                        "example": "Mary from MyShop"
                      },
                      "email": {
                        "type": "string",
                        "description": "Sender email from which the campaign emails are sent",
                        "format": "email",
                        "example": "newsletter@myshop.com"
                      },
                      "id": {
                        "type": "integer",
                        "description": "Select the sender for the campaign on the basis of sender id. **In order to select a sender with specific pool of IP’s, dedicated ip users shall pass id (instead of email)**.\n",
                        "format": "int64",
                        "example": 3
                      }
                    },
                    "description": "Sender details including id or email and name (optional). Only one of either Sender's email or Sender's ID shall be passed in one request at a time. For example:\n**{\"name\":\"xyz\", \"email\":\"example@abc.com\"}**\n**{\"name\":\"xyz\", \"id\":123}**\n"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the campaign",
                    "example": "Newsletter - May 2017"
                  },
                  "htmlContent": {
                    "type": "string",
                    "description": "Body of the message (HTML version). **REQUIRED if htmlUrl is empty**\n",
                    "example": "<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>"
                  },
                  "htmlUrl": {
                    "type": "string",
                    "description": "Url which contents the body of the email message. **REQUIRED if htmlContent is empty**\n",
                    "format": "url",
                    "example": "https://html.domain.com"
                  },
                  "scheduledAt": {
                    "type": "string",
                    "description": "UTC date-time on which the campaign has to run (YYYY-MM-DDTHH:mm:ss.SSSZ).\n**Prefer to pass your timezone in date-time format for accurate result.**\nIf sendAtBestTime is set to true, your campaign will be sent according\nto the date passed (ignoring the time part).\n",
                    "example": "2017-06-01T12:30:00+02:00"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Subject of the campaign",
                    "example": "Discover the New Collection !"
                  },
                  "replyTo": {
                    "type": "string",
                    "description": "Email on which campaign recipients will be able to reply to",
                    "format": "email",
                    "example": "support@myshop.com"
                  },
                  "toField": {
                    "type": "string",
                    "description": "To personalize the **To** Field. If you want to include the first\nname and last name of your recipient, add **{FNAME} {LNAME}**. These contact\nattributes must already exist in your SendinBlue account. If input parameter\n**params** used please use **{{contact.FNAME}} {{contact.LNAME}}** for personalization\n",
                    "example": "{FNAME} {LNAME}"
                  },
                  "recipients": {
                    "type": "object",
                    "properties": {
                      "exclusionListIds": {
                        "type": "array",
                        "description": "List ids which have to be excluded from a campaign",
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 8
                        }
                      },
                      "listIds": {
                        "type": "array",
                        "description": "Lists Ids to send the campaign to. **REQUIRED if already not present in campaign and scheduledAt is not empty**\n",
                        "items": {
                          "type": "integer",
                          "format": "int64",
                          "example": 32
                        }
                      }
                    },
                    "description": "List ids to include/exclude from campaign"
                  },
                  "attachmentUrl": {
                    "type": "string",
                    "description": "Absolute url of the attachment (no local file).\nExtension allowed:\n#### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub and eps'\n",
                    "format": "url",
                    "example": "https://attachment.domain.com"
                  },
                  "inlineImageActivation": {
                    "type": "boolean",
                    "description": "Status of inline image. inlineImageActivation = false means image can’t be embedded, & inlineImageActivation = true means image can be embedded, in the email.\nYou cannot send a campaign of more than **4MB** with images embedded in the email. Campaigns with the images embedded in the email _must be sent to less than 5000 contacts_.\n",
                    "example": true,
                    "default": false
                  },
                  "mirrorActive": {
                    "type": "boolean",
                    "description": "Status of mirror links in campaign. mirrorActive = false means mirror links are deactivated, & mirrorActive = true means mirror links are activated, in the campaign",
                    "example": true
                  },
                  "recurring": {
                    "type": "boolean",
                    "description": "**FOR TRIGGER ONLY !** Type of trigger campaign.recurring = false means contact can receive the same Trigger campaign only once, & recurring = true means contact can receive the same Trigger campaign several times\n",
                    "example": false,
                    "default": false
                  },
                  "footer": {
                    "type": "string",
                    "description": "Footer of the email campaign",
                    "example": "[DEFAULT_FOOTER]"
                  },
                  "header": {
                    "type": "string",
                    "description": "Header of the email campaign",
                    "example": "[DEFAULT_HEADER]"
                  },
                  "utmCampaign": {
                    "type": "string",
                    "description": "Customize the utm_campaign value. If this field is empty, the campaign name will be used. Only alphanumeric characters and spaces are allowed",
                    "example": "NL_05_2017"
                  },
                  "params": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Pass the set of attributes to customize the type classic campaign. For example: **{\"FNAME\":\"Joe\", \"LNAME\":\"Doe\"}**. Only available if **type** is **classic**. It's considered only if campaign is in _New Template Language format_. The New Template Language is dependent on the values of **subject, htmlContent/htmlUrl, sender.name & toField**\n",
                    "example": {
                      "FNAME": "Joe",
                      "LNAME": "Doe"
                    }
                  },
                  "sendAtBestTime": {
                    "type": "boolean",
                    "description": "Set this to true if you want to send your campaign at best time.\nNote:- **if true, warmup ip will be disabled.**\n",
                    "example": true
                  },
                  "abTesting": {
                    "type": "boolean",
                    "description": "Status of A/B Test. abTesting = false means it is disabled & abTesting = true means it is enabled. **subjectA, subjectB, splitRule, winnerCriteria & winnerDelay** will be considered when abTesting is set to true.\nsubjectA & subjectB are mandatory together & subject if passed is ignored. **Can be set to true only if sendAtBestTime is false**.\nYou will be able to set up two subject lines for your campaign and send them to a random sample of your total recipients. Half of the test group will receive version A, and the other half will receive version B\n",
                    "example": true,
                    "default": false
                  },
                  "subjectA": {
                    "type": "string",
                    "description": "Subject A of the campaign. **Mandatory if abTesting = true**.\nsubjectA & subjectB should have unique value\n",
                    "example": "Discover the New Collection!"
                  },
                  "subjectB": {
                    "type": "string",
                    "description": "Subject B of the campaign. **Mandatory if abTesting = true**.\nsubjectA & subjectB should have unique value\n",
                    "example": "Want to discover the New Collection?"
                  },
                  "splitRule": {
                    "maximum": 50,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Add the size of your test groups. **Mandatory if abTesting = true & 'recipients' is passed**. We'll send version A and B to a random sample of recipients, and then the winning version to everyone else\n",
                    "format": "int64",
                    "example": 50
                  },
                  "winnerCriteria": {
                    "type": "string",
                    "description": "Choose the metrics that will determinate the winning version. **Mandatory if _splitRule_ >= 1 and < 50**. If splitRule = 50, `winnerCriteria` is ignored if passed\n",
                    "example": "open",
                    "enum": [
                      "open",
                      "click"
                    ]
                  },
                  "winnerDelay": {
                    "maximum": 168,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Choose the duration of the test in hours. Maximum is 7 days, pass 24*7 = 168 hours. The winning version will be sent at the end of the test. **Mandatory if _splitRule_ >= 1 and < 50**. If splitRule = 50, `winnerDelay` is ignored if passed\n",
                    "format": "int64",
                    "example": 50
                  },
                  "ipWarmupEnable": {
                    "type": "boolean",
                    "description": "**Available for dedicated ip clients**. Set this to true if you wish to warm up your ip.\n",
                    "example": true,
                    "default": false
                  },
                  "initialQuota": {
                    "type": "integer",
                    "description": "Set an initial quota greater than 1 for warming up your ip. We recommend you set a value of 3000.\n",
                    "format": "int64",
                    "example": 3000
                  },
                  "increaseRate": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "integer",
                    "description": "Set a percentage increase rate for warming up your ip. We recommend you set the increase rate to 30% per day. If you want to send the same number of emails every day, set the daily increase value to 0%.\n",
                    "format": "int64",
                    "example": 70
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Email campaign updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Delete an email campaign",
        "operationId": "deleteEmailCampaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Email campaign has been deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailCampaigns/{campaignId}/sendNow": {
      "post": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Send an email campaign immediately, based on campaignId",
        "operationId": "sendEmailCampaignNow",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Email campaign has been scheduled",
            "content": {}
          },
          "400": {
            "description": "Campaign could not be sent",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You don't have enough credit to send your campaign. Please update your plan",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailCampaigns/{campaignId}/sendTest": {
      "post": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Send an email campaign to your test list",
        "operationId": "sendTestEmail",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emailTo": {
                    "type": "array",
                    "description": "List of the email addresses of the recipients whom you wish to send the test mail.\n_If left empty, the test mail will be sent to your entire test list. You can not send more than 50 test emails per day_.\n",
                    "items": {
                      "type": "string",
                      "description": "Email addres of the recipient",
                      "format": "email",
                      "example": "helen.jurger@example.com"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Test email has been sent successfully to all recipients",
            "content": {}
          },
          "400": {
            "description": "Test email could not be sent to the following email addresses",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Response code",
                      "example": "invalid_parameter"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "The email could not be sent to all recipients"
                    },
                    "unexistingEmails": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Email addresses you tried to sent an email to, but not existing in your contacts",
                        "format": "email",
                        "example": "matthew.dow@example.com, elisa.carrely@example.com"
                      }
                    },
                    "withoutListEmails": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Email addresses you sent an email to, without a contact list",
                        "format": "email",
                        "example": "jeff.dean@example.com, jim.sue@example.com"
                      }
                    },
                    "blackListedEmails": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Email addresses which are blacklisted. ONLY FOR email-campign's sendTest OR smtp-template's sendTest api's.",
                        "format": "email",
                        "example": "jeff.dean@example.com, jim.sue@example.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Response code",
                      "example": "invalid_parameter"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "The email could not be sent to all recipients"
                    },
                    "unexistingEmails": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Email addresses you tried to sent an email to, but not existing in your contacts",
                        "format": "email",
                        "example": "matthew.dow@example.com, elisa.carrely@example.com"
                      }
                    },
                    "withoutListEmails": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Email addresses you sent an email to, without a contact list",
                        "format": "email",
                        "example": "jeff.dean@example.com, jim.sue@example.com"
                      }
                    },
                    "blackListedEmails": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Email addresses which are blacklisted. ONLY FOR email-campign's sendTest OR smtp-template's sendTest api's.",
                        "format": "email",
                        "example": "jeff.dean@example.com, jim.sue@example.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailCampaigns/{campaignId}/status": {
      "put": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Update an email campaign status",
        "operationId": "updateCampaignStatus",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Status of the campaign",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Note:- **replicateTemplate** status will be available **only for template type campaigns.**\n",
                    "enum": [
                      "suspended",
                      "archive",
                      "darchive",
                      "sent",
                      "queued",
                      "replicate",
                      "replicateTemplate",
                      "draft"
                    ]
                  }
                },
                "description": "Status of the campaign",
                "example": "draft"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The campaign status has been updated successfully",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailCampaigns/{campaignId}/sendReport": {
      "post": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Send the report of a campaign",
        "description": "A PDF will be sent to the specified email addresses",
        "operationId": "sendReport",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Values for send a report",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email"
                ],
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string",
                    "description": "Language of email content for campaign report sending.",
                    "example": "en",
                    "default": "fr",
                    "enum": [
                      "fr",
                      "es",
                      "pt",
                      "it",
                      "de",
                      "en"
                    ]
                  },
                  "email": {
                    "required": [
                      "body",
                      "to"
                    ],
                    "type": "object",
                    "properties": {
                      "to": {
                        "type": "array",
                        "description": "Email addresses of the recipients",
                        "items": {
                          "type": "string",
                          "description": "Email address of the recipient",
                          "format": "email",
                          "example": "jim.suehan@example.com"
                        }
                      },
                      "body": {
                        "type": "string",
                        "description": "Custom text message to be presented in the report email.",
                        "example": "Please find attached the report of our last email campaign."
                      }
                    },
                    "description": "Custom attributes for the report email."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Report has been successfully sent to the defined recipients",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailCampaigns/{campaignId}/abTestCampaignResult": {
      "get": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Get an A/B test email campaign results",
        "description": "Obtain winning version of an A/B test email campaign",
        "operationId": "getAbTestCampaignResult",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Id of the A/B test campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A/B test email campaign Result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "winningVersion": {
                      "type": "string",
                      "description": "Winning Campaign Info. pending = Campaign has been picked for sending and winning version is yet to be decided, tie = A tie happened between both the versions, notAvailable = Campaign has not yet been picked for sending.",
                      "example": "A",
                      "enum": [
                        "notAvailable",
                        "pending",
                        "tie",
                        "A",
                        "B"
                      ]
                    },
                    "winningCriteria": {
                      "type": "string",
                      "description": "Criteria choosen for winning version (Open/Click)",
                      "example": "Open",
                      "enum": [
                        "Open",
                        "Click"
                      ]
                    },
                    "winningSubjectLine": {
                      "type": "string",
                      "description": "Subject Line of current winning version",
                      "example": "Subject Line A"
                    },
                    "openRate": {
                      "type": "string",
                      "description": "Open rate for current winning version",
                      "example": "70%"
                    },
                    "clickRate": {
                      "type": "string",
                      "description": "Click rate for current winning version",
                      "example": "70%"
                    },
                    "winningVersionRate": {
                      "type": "string",
                      "description": "Open/Click rate for the winner version",
                      "example": "70%"
                    },
                    "statistics": {
                      "required": [
                        "clicks",
                        "complaints",
                        "hardBounces",
                        "openers",
                        "softBounces",
                        "unsubscribed"
                      ],
                      "type": "object",
                      "properties": {
                        "openers": {
                          "required": [
                            "Version A",
                            "Version B"
                          ],
                          "type": "object",
                          "properties": {
                            "Version A": {
                              "type": "string",
                              "description": "percentage of an event for version A",
                              "example": "50%"
                            },
                            "Version B": {
                              "type": "string",
                              "description": "percentage of an event for version B",
                              "example": "50%"
                            }
                          },
                          "description": "Percentage of a particular event for both versions"
                        },
                        "clicks": {
                          "required": [
                            "Version A",
                            "Version B"
                          ],
                          "type": "object",
                          "properties": {
                            "Version A": {
                              "type": "string",
                              "description": "percentage of an event for version A",
                              "example": "50%"
                            },
                            "Version B": {
                              "type": "string",
                              "description": "percentage of an event for version B",
                              "example": "50%"
                            }
                          },
                          "description": "Percentage of a particular event for both versions"
                        },
                        "unsubscribed": {
                          "required": [
                            "Version A",
                            "Version B"
                          ],
                          "type": "object",
                          "properties": {
                            "Version A": {
                              "type": "string",
                              "description": "percentage of an event for version A",
                              "example": "50%"
                            },
                            "Version B": {
                              "type": "string",
                              "description": "percentage of an event for version B",
                              "example": "50%"
                            }
                          },
                          "description": "Percentage of a particular event for both versions"
                        },
                        "hardBounces": {
                          "required": [
                            "Version A",
                            "Version B"
                          ],
                          "type": "object",
                          "properties": {
                            "Version A": {
                              "type": "string",
                              "description": "percentage of an event for version A",
                              "example": "50%"
                            },
                            "Version B": {
                              "type": "string",
                              "description": "percentage of an event for version B",
                              "example": "50%"
                            }
                          },
                          "description": "Percentage of a particular event for both versions"
                        },
                        "softBounces": {
                          "required": [
                            "Version A",
                            "Version B"
                          ],
                          "type": "object",
                          "properties": {
                            "Version A": {
                              "type": "string",
                              "description": "percentage of an event for version A",
                              "example": "50%"
                            },
                            "Version B": {
                              "type": "string",
                              "description": "percentage of an event for version B",
                              "example": "50%"
                            }
                          },
                          "description": "Percentage of a particular event for both versions"
                        },
                        "complaints": {
                          "required": [
                            "Version A",
                            "Version B"
                          ],
                          "type": "object",
                          "properties": {
                            "Version A": {
                              "type": "string",
                              "description": "percentage of an event for version A",
                              "example": "50%"
                            },
                            "Version B": {
                              "type": "string",
                              "description": "percentage of an event for version B",
                              "example": "50%"
                            }
                          },
                          "description": "Percentage of a particular event for both versions"
                        }
                      }
                    },
                    "clickedLinks": {
                      "required": [
                        "Version A",
                        "Version B"
                      ],
                      "type": "object",
                      "properties": {
                        "Version A": {
                          "type": "array",
                          "description": "Information on clicked links for a particular version",
                          "items": {
                            "required": [
                              "clickRate",
                              "clicksCount",
                              "link"
                            ],
                            "type": "object",
                            "properties": {
                              "link": {
                                "type": "string",
                                "description": "URL of the link",
                                "example": "https://facbook.com/versionA"
                              },
                              "clicksCount": {
                                "type": "number",
                                "description": "Number of times a link is clicked",
                                "format": "int64",
                                "example": 3
                              },
                              "clickRate": {
                                "type": "string",
                                "description": "Percentage of clicks of link with respect to total clicks",
                                "example": "40%"
                              }
                            }
                          }
                        },
                        "Version B": {
                          "type": "array",
                          "description": "Information on clicked links for a particular version",
                          "items": {
                            "required": [
                              "clickRate",
                              "clicksCount",
                              "link"
                            ],
                            "type": "object",
                            "properties": {
                              "link": {
                                "type": "string",
                                "description": "URL of the link",
                                "example": "https://facbook.com/versionA"
                              },
                              "clicksCount": {
                                "type": "number",
                                "description": "Number of times a link is clicked",
                                "format": "int64",
                                "example": 3
                              },
                              "clickRate": {
                                "type": "string",
                                "description": "Percentage of clicks of link with respect to total clicks",
                                "example": "40%"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "winningVersion": "B",
                      "winningCriteria": "Click",
                      "openRate": "100%",
                      "clickRate": "50%",
                      "winningVersionRate": "0%",
                      "statistics": {
                        "openers": {
                          "Version A": "20%",
                          "Version B": "100%"
                        },
                        "clicks": {
                          "Version A": "0%",
                          "Version B": "50%"
                        },
                        "unsubscribed": {
                          "Version A": "20%",
                          "Version B": "0%"
                        },
                        "softBounces": {
                          "Version A": "0%",
                          "Version B": "0%"
                        },
                        "hardBounces": {
                          "Version A": "0%",
                          "Version B": "0%"
                        },
                        "complaints": {
                          "Version A": "0%",
                          "Version B": "0%"
                        }
                      },
                      "clickedLinks": {
                        "Version A": [
                          {
                            "link": "https://google.com",
                            "clicksCount": 0,
                            "clickRate": "0%"
                          },
                          {
                            "link": "https://youtube.com",
                            "clicksCount": 0,
                            "clickRate": "0%"
                          }
                        ],
                        "Version B": [
                          {
                            "link": "http://www.github.com",
                            "clicksCount": 2,
                            "clickRate": "40%"
                          },
                          {
                            "link": "http://www.stackoverflow.com",
                            "clicksCount": 3,
                            "clickRate": "60%"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "A/B test Email Campaign not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailCampaigns/{campaignId}/sharedUrl": {
      "get": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Get a shared template url",
        "description": "Get a unique URL to share & import an email template from one Sendinblue account to another.",
        "operationId": "getSharedTemplateUrl",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Id of the campaign or template",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shared template URL information",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "sharedUrl"
                  ],
                  "type": "object",
                  "properties": {
                    "sharedUrl": {
                      "type": "string",
                      "description": "A unique URL for the email campaign or transactional template. This URL can be shared with other Sendinblue users.",
                      "format": "url",
                      "example": "https://my.sendinblue.com/pt2YU7R5W_guXlowgumy_VX4pFsKu._zd0Gjj96x1_GMmzc1Qps5ZIpj6nx-"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "sharedUrl": "https://my.sendinblue.com/pt2YU7R5W_guXlowgumy_VX4pFsKu._zd0Gjj96x1_GMmzc1Qps5ZIpj6nx-"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign/Template ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Only email campaigns or templates are allowed",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailCampaigns/{campaignId}/exportRecipients": {
      "post": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Export the recipients of an email campaign",
        "operationId": "emailExportRecipients",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Values to send for a recipient export request",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "recipientsType"
                ],
                "type": "object",
                "properties": {
                  "notifyURL": {
                    "type": "string",
                    "description": "Webhook called once the export process is finished. For reference, https://help.sendinblue.com/hc/en-us/articles/360007666479",
                    "format": "url",
                    "example": "http://requestb.in/173lyyx1"
                  },
                  "recipientsType": {
                    "type": "string",
                    "description": "Type of recipients to export for a campaign",
                    "example": "openers",
                    "enum": [
                      "all",
                      "nonClickers",
                      "nonOpeners",
                      "clickers",
                      "openers",
                      "softBounces",
                      "hardBounces",
                      "unsubscribed"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "process id created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "processId"
                  ],
                  "type": "object",
                  "properties": {
                    "processId": {
                      "type": "integer",
                      "description": "Id of the process created",
                      "format": "int64",
                      "example": 78
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emailCampaigns/images": {
      "post": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Upload an image to your account's image gallery",
        "operationId": "uploadImageToGallery",
        "requestBody": {
          "description": "Parameters to upload an image",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "imageUrl"
                ],
                "type": "object",
                "properties": {
                  "imageUrl": {
                    "type": "string",
                    "description": "The absolute url of the image (**no local file**). Maximum allowed size for image is **2MB**.\nAllowed extensions for images are:\n#### jpeg, jpg, png, bmp, gif.\n",
                    "example": "https://somedomain.com/image1.jpg"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the image.",
                    "example": "nature.jpg"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Image has been successfully uploaded"
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/email": {
      "post": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Send a transactional email",
        "operationId": "sendTransacEmail",
        "requestBody": {
          "description": "Values to send a transactional email",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sender": {
                    "description": "**Mandatory if `templateId` is not passed**. Pass name (_optional_) and email or id of sender from which emails will be sent. **`name` will be ignored if passed along with sender `id`**. For example,\n**{\"name\":\"Mary from MyShop\", \"email\":\"no-reply@myshop.com\"}**\n**{\"id\":2}**\n",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "description: Name of the sender from which the emails will be sent. **Maximum allowed characters are 70**. Applicable only when email is passed.\n",
                        "example": "Mary from MyShop"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of the sender from which the emails will be sent. Mandatory if sender id is not passed.",
                        "format": "email",
                        "example": "no-reply@myshop.com"
                      },
                      "id": {
                        "type": "integer",
                        "description": "Id of the sender from which the emails will be sent. In order to select a sender with specific pool of IP’s, dedicated ip users shall pass id (instead of email). Mandatory if email is not passed.",
                        "format": "int64",
                        "example": 2
                      }
                    }
                  },
                  "to": {
                    "type": "array",
                    "description": "**Mandatory if messageVersions are not passed, ignored if messageVersions are passed**\nList of email addresses and names (_optional_) of the recipients. For example,\n**[{\"name\":\"Jimmy\", \"email\":\"jimmy98@example.com\"}, {\"name\":\"Joe\", \"email\":\"joe@example.com\"}]**\n",
                    "items": {
                      "required": [
                        "email"
                      ],
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Email address of the recipient",
                          "format": "email",
                          "example": "jimmy98@example.com"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the recipient. **Maximum allowed characters are 70**.\n",
                          "example": "Jimmy"
                        }
                      }
                    }
                  },
                  "bcc": {
                    "type": "array",
                    "description": "List of email addresses and names (_optional_) of the recipients in bcc\n",
                    "items": {
                      "required": [
                        "email"
                      ],
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Email address of the recipient in bcc",
                          "format": "email",
                          "example": "helen9766@example.com"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the recipient in bcc. **Maximum allowed characters are 70**.\n",
                          "example": "Helen"
                        }
                      }
                    }
                  },
                  "cc": {
                    "type": "array",
                    "description": "List of email addresses and names (_optional_) of the recipients in cc\n",
                    "items": {
                      "required": [
                        "email"
                      ],
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Email address of the recipient in cc",
                          "format": "email",
                          "example": "ann6533@example.com"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the recipient in cc. **Maximum allowed characters are 70**.\n",
                          "example": "Ann"
                        }
                      }
                    }
                  },
                  "htmlContent": {
                    "type": "string",
                    "description": "HTML body of the message. **Mandatory if 'templateId' is not passed, ignored if 'templateId' is passed**\n",
                    "example": "<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>"
                  },
                  "textContent": {
                    "type": "string",
                    "description": "Plain Text body of the message. **Ignored if 'templateId' is passed**\n",
                    "example": "Please confirm your email address by clicking on the link https://text.domain.com"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Subject of the message. **Mandatory if 'templateId' is not passed**\n",
                    "example": "Login Email confirmation"
                  },
                  "replyTo": {
                    "required": [
                      "email"
                    ],
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email address in reply to",
                        "format": "email",
                        "example": "ann6533@example.com"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name in reply to. **Maximum allowed characters are 70**.\n",
                        "example": "Ann"
                      }
                    },
                    "description": "Email (**required**), along with name (_optional_), on which transactional mail recipients will be able to reply back. For example,\n**{\"email\":\"ann6533@example.com\", \"name\":\"Ann\"}**\n"
                  },
                  "attachment": {
                    "type": "array",
                    "description": "Pass the _absolute URL_ (**no local file**) or the _base64 content_ of the attachment along with the attachment name. **Mandatory if attachment content is passed**. For example,\n**[{\"url\":\"https://attachment.domain.com/myAttachmentFromUrl.jpg\", \"name\":\"myAttachmentFromUrl.jpg\"}, {\"content\":\"base64 example content\", \"name\":\"myAttachmentFromBase64.jpg\"}]**.\nAllowed extensions for attachment file:\n#### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub, eps, odt, mp3, m4a, m4v, wma, ogg, flac, wav, aif, aifc, aiff, mp4, mov, avi, mkv, mpeg, mpg, wmv and pkpass.\nIf `templateId` is passed and is in New Template Language format then both attachment url and content are accepted. If template is in Old template Language format, then `attachment` is ignored \n",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Absolute url of the attachment (**no local file**).\n",
                          "format": "url",
                          "example": "https://attachment.domain.com/myAttachmentFromUrl.jpg"
                        },
                        "content": {
                          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                          "type": "string",
                          "description": "Base64 encoded chunk data of the attachment generated on the fly",
                          "format": "byte",
                          "example": "b3JkZXIucGRm"
                        },
                        "name": {
                          "type": "string",
                          "description": "**Required if content is passed**. Name of the attachment\n",
                          "example": "myAttachment.png"
                        }
                      }
                    }
                  },
                  "headers": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Pass the set of custom headers (_not the standard headers_) that shall be sent along the mail headers in the original email. **'sender.ip'** header can be set (**only for dedicated ip users**) to mention the IP to be used for sending transactional emails. Headers are allowed in `This-Case-Only` (i.e. words separated by hyphen with first letter of each word in capital letter), they will be converted to such case styling if not in this format in the request payload. For example,\n**{\"sender.ip\":\"1.2.3.4\", \"X-Mailin-custom\":\"some_custom_header\", \"idempotencyKey\":\"abc-123\"}**.\n",
                    "example": {
                      "sender.ip": "1.2.3.4",
                      "X-Mailin-custom": "some_custom_header",
                      "idempotencyKey": "abc-123"
                    }
                  },
                  "templateId": {
                    "type": "integer",
                    "description": "Id of the template. **Mandatory if messageVersions are passed**",
                    "format": "int64",
                    "example": 2
                  },
                  "params": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Pass the set of attributes to customize the template. For example, **{\"FNAME\":\"Joe\", \"LNAME\":\"Doe\"}**. It's **considered only if template is in New Template Language format**.\n",
                    "example": {
                      "FNAME": "Joe",
                      "LNAME": "Doe"
                    }
                  },
                  "messageVersions": {
                    "type": "array",
                    "description": "You can customize and send out multiple versions of a templateId. Some global parameters such as **to(mandatory), bcc, cc, replyTo, subject** can also be customized specific to each version.\nTotal number of recipients in one API request must not exceed 200. However, you can still pass upto 99 recipients maximum in one message version.\nThe size of individual params in all the messageVersions shall not exceed **100 KB** limit and that of cumulative params shall not exceed **1000 KB**.\nThis feature is currently in its **beta version**. You can follow this **step-by-step guide** on how to use **messageVersions** to batch send emails - **https://developers.sendinblue.com/docs/batch-send-transactional-emails**\n",
                    "items": {
                      "type": "object",
                      "required": [
                        "to"
                      ],
                      "properties": {
                        "to": {
                          "type": "array",
                          "description": "List of email addresses and names (_optional_) of the recipients. For example,\n**[{\"name\":\"Jimmy\", \"email\":\"jimmy98@example.com\"}, {\"name\":\"Joe\", \"email\":\"joe@example.com\"}]**\n",
                          "items": {
                            "required": [
                              "email"
                            ],
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "Email address of the recipient",
                                "format": "email",
                                "example": "jimmy98@example.com"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the recipient. **Maximum allowed characters are 70**.\n",
                                "example": "Jimmy"
                              }
                            }
                          }
                        },
                        "params": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Pass the set of attributes to customize the template. For example, **{\"FNAME\":\"Joe\", \"LNAME\":\"Doe\"}**. It's **considered only if template is in New Template Language format**.\n",
                          "example": {
                            "FNAME": "Joe",
                            "LNAME": "Doe"
                          }
                        },
                        "bcc": {
                          "type": "array",
                          "description": "List of email addresses and names (_optional_) of the recipients in bcc\n",
                          "items": {
                            "required": [
                              "email"
                            ],
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "Email address of the recipient in bcc",
                                "format": "email",
                                "example": "helen9766@example.com"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the recipient in bcc. **Maximum allowed characters are 70**.\n",
                                "example": "Helen"
                              }
                            }
                          }
                        },
                        "cc": {
                          "type": "array",
                          "description": "List of email addresses and names (_optional_) of the recipients in cc\n",
                          "items": {
                            "required": [
                              "email"
                            ],
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "Email address of the recipient in cc",
                                "format": "email",
                                "example": "ann6533@example.com"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the recipient in cc. **Maximum allowed characters are 70**.\n",
                                "example": "Ann"
                              }
                            }
                          }
                        },
                        "replyTo": {
                          "required": [
                            "email"
                          ],
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "Email address in reply to",
                              "format": "email",
                              "example": "ann6533@example.com"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name in reply to. **Maximum allowed characters are 70**.\n",
                              "example": "Ann"
                            }
                          },
                          "description": "Email (**required**), along with name (_optional_), on which transactional mail recipients will be able to reply back. For example,\n**{\"email\":\"ann6533@example.com\", \"name\":\"Ann\"}**\n"
                        },
                        "subject": {
                          "type": "string",
                          "description": "Custom subject specific to message version\n",
                          "example": "Login Email confirmation"
                        }
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "Tag your emails to find them more easily",
                    "items": {
                      "type": "string",
                      "example": "tag1"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "transactional email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messageId": {
                      "type": "string",
                      "description": "Message ID of the transactional email sent",
                      "example": "<201798300811.5787683@relay.domain.com>"
                    },
                    "messageIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "version wise message ID's of the transactional emails sent",
                        "example": [
                          "<201798300811.5787683@relay.domain.com>",
                          "<201798300811.5787683@relay.domain.com>"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "messageId": "<201798300811.5787683@relay.domain.com>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/emails": {
      "get": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Get the list of transactional emails on the basis of allowed filters",
        "description": "This endpoint will show the list of emails for past 30 days by default. To retrieve emails before that time, please pass startDate and endDate in query filters.",
        "operationId": "getTransacEmailsList",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "**Mandatory if templateId and messageId are not passed in query filters.** Email address to which transactional email has been sent.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "query",
            "description": "**Mandatory if email and messageId are not passed in query filters.** Id of the template that was used to compose transactional email.\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "**Mandatory if templateId and email are not passed in query filters.** Message ID of the transactional email sent.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) from which you want to fetch the list. **Maximum time period that can be selected is one month**.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) till which you want to fetch the list. **Maximum time period that can be selected is one month.**\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents returned per page",
            "schema": {
              "maximum": 1000,
              "type": "integer",
              "format": "int64",
              "default": 500
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document in the page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactional emails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of transactional emails available on your account according to the passed filter",
                      "format": "int64",
                      "example": 5
                    },
                    "transactionalEmails": {
                      "type": "array",
                      "items": {
                        "required": [
                          "date",
                          "email",
                          "messageId",
                          "subject",
                          "uuid"
                        ],
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email address to which transactional email has been sent",
                            "format": "email",
                            "example": "john.smith@example.com"
                          },
                          "subject": {
                            "type": "string",
                            "description": "Subject of the sent email",
                            "example": "Summer Camp"
                          },
                          "templateId": {
                            "type": "integer",
                            "description": "Id of the template",
                            "format": "int64",
                            "example": 2
                          },
                          "messageId": {
                            "type": "string",
                            "description": "Message Id of the sent email",
                            "example": "<201798300811.5700093@relay.domain.com>"
                          },
                          "uuid": {
                            "type": "string",
                            "description": "Unique id of the email sent to a particular contact",
                            "example": "5a78c-209ok98262910-s99a341"
                          },
                          "date": {
                            "type": "string",
                            "description": "Date on which transactional email was sent",
                            "example": "2017-03-12T12:30:00Z"
                          },
                          "from": {
                            "type": "string",
                            "description": "Email address of the sender from which the email was sent",
                            "format": "email",
                            "example": "diana.doe@example.com"
                          },
                          "tags": {
                            "type": "array",
                            "description": "Tags used for your email",
                            "items": {
                              "type": "string",
                              "example": "tag1"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "count": 120,
                      "transactionalEmails": [
                        {
                          "email": "abc@xyz.com",
                          "subject": "summer camp",
                          "templateId": 15,
                          "messageId": "<201798300811.5787683@relay.domain.com>",
                          "uuid": "5a78c-209ok98262910-std2341",
                          "date": "2019-05-25T11:53:26Z"
                        },
                        {
                          "email": "test@test.com",
                          "subject": "details verification",
                          "templateId": 15,
                          "messageId": "<201798300811.5700093@relay.domain.com>",
                          "uuid": "5a78c-209ok98262910-s99a341",
                          "date": "2019-05-25T07:28:11Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/emails/{uuid}": {
      "get": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Get the personalized content of a sent transactional email",
        "operationId": "getTransacEmailContent",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Unique id of the transactional email that has been sent to a particular contact",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactional email content",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "attachmentCount",
                    "body",
                    "date",
                    "email",
                    "events",
                    "subject"
                  ],
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "Email address to which transactional email has been sent",
                      "format": "email",
                      "example": "abc@example.com"
                    },
                    "subject": {
                      "type": "string",
                      "description": "Subject of the sent email",
                      "example": "Summer Camp"
                    },
                    "templateId": {
                      "type": "integer",
                      "description": "Id of the template",
                      "format": "int64",
                      "example": 2
                    },
                    "date": {
                      "type": "string",
                      "description": "Date on which transactional email was sent",
                      "example": "2017-03-12T12:30:00Z"
                    },
                    "events": {
                      "type": "array",
                      "description": "Series of events which occurred on the transactional email",
                      "items": {
                        "required": [
                          "name",
                          "time"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the event that occurred on the sent email",
                            "example": "delivered"
                          },
                          "time": {
                            "type": "string",
                            "description": "Time at which the event occurred",
                            "example": "2017-03-12T12:30:00Z"
                          }
                        }
                      }
                    },
                    "body": {
                      "type": "string",
                      "description": "Actual content of the transactional email that has been sent",
                      "example": "<!DOCTYPE html> <html> <body> <h1>Greetings from the team</h1> <p>This is the actual html content sent</p> </body> </html>"
                    },
                    "attachmentCount": {
                      "type": "integer",
                      "description": "Count of the attachments that were sent in the email",
                      "format": "int64",
                      "example": 2
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "email": "abc@example.com",
                      "subject": "Summer Camps",
                      "templateId": 12,
                      "date": "2016-02-25T11:53:26Z",
                      "events": [
                        {
                          "name": "sent",
                          "time": "2016-02-25T11:53:26Z"
                        },
                        {
                          "name": "delivered",
                          "time": "2016-02-25T11:55:26Z"
                        },
                        {
                          "name": "opened",
                          "time": "2016-02-26T09:53:26Z"
                        }
                      ],
                      "body": "<!DOCTYPE html> <html> <body> <h1>Greetings from the team</h1> <p>This is the actual html content sent</p> </body> </html>"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/log/{messageId}": {
      "delete": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Delete an SMTP transactional log",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "MessageId of the transactional log to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Transactional Logs deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Message ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/templates": {
      "get": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Get the list of email templates",
        "operationId": "getSmtpTemplates",
        "parameters": [
          {
            "name": "templateStatus",
            "in": "query",
            "description": "Filter on the status of the template. Active = true, inactive = false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents returned per page",
            "schema": {
              "maximum": 1000,
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document in the page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "transactional email templates informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Count of transactional email templates",
                      "format": "int64",
                      "example": 1
                    },
                    "templates": {
                      "type": "array",
                      "items": {
                        "required": [
                          "createdAt",
                          "htmlContent",
                          "id",
                          "isActive",
                          "modifiedAt",
                          "name",
                          "replyTo",
                          "sender",
                          "subject",
                          "tag",
                          "testSent",
                          "toField"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of the template",
                            "format": "int64",
                            "example": 4
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the template",
                            "example": "Order Confirmation - EN"
                          },
                          "subject": {
                            "type": "string",
                            "description": "Subject of the template",
                            "example": "Thanks for your order !"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Status of template (true=active, false=inactive)",
                            "example": true
                          },
                          "testSent": {
                            "type": "boolean",
                            "description": "Status of test sending for the template (true=test email has been sent, false=test email has not been sent)",
                            "example": true
                          },
                          "sender": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "From email for the template",
                                "example": "Mary form MyShop"
                              },
                              "email": {
                                "type": "string",
                                "description": "From email for the template",
                                "format": "email",
                                "example": "contact@myshop.fr"
                              },
                              "id": {
                                "type": "string",
                                "description": "Sender id of the template",
                                "example": "43"
                              }
                            }
                          },
                          "replyTo": {
                            "type": "string",
                            "description": "Email defined as the \"Reply to\" for the template",
                            "format": "email",
                            "example": "replyto@domain.com"
                          },
                          "toField": {
                            "type": "string",
                            "description": "Customisation of the \"to\" field for the template",
                            "example": "{FIRSTNAME} {LASTNAME}"
                          },
                          "tag": {
                            "type": "string",
                            "description": "Tag of the template",
                            "example": "sports"
                          },
                          "htmlContent": {
                            "type": "string",
                            "description": "HTML content of the template",
                            "example": "Your order n°xxxxx has been confirmed. Thanks for your purchase."
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Creation UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                            "example": "2017-05-01T12:30:00Z"
                          },
                          "modifiedAt": {
                            "type": "string",
                            "description": "Last modification UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                            "example": "2017-05-12T12:30:00Z"
                          },
                          "doiTemplate": {
                            "type": "boolean",
                            "description": "It is true if template is a valid Double opt-in (DOI) template, otherwise it is false. This field will be available only in case of single template detail call.",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "count": 2,
                      "templates": [
                        {
                          "id": 5,
                          "name": "ChristomasTimeTemplate",
                          "subject": "Merry Christmas",
                          "isActive": false,
                          "testSent": false,
                          "sender": {
                            "name": "John",
                            "email": "john.smith@example.com",
                            "id": 23
                          },
                          "replyTo": "replyto@domain.com",
                          "toField": "",
                          "tag": "Festival",
                          "htmlContent": "HTML CONTENT 1",
                          "createdAt": "2016-02-24T14:44:24Z",
                          "modifiedAt": "2016-02-24T15:37:11Z"
                        },
                        {
                          "id": 12,
                          "name": "SummerSales2017Template",
                          "subject": "Enjoy our summer Sales !",
                          "isActive": true,
                          "testSent": false,
                          "sender": {
                            "name": "John",
                            "email": "john.smith@example.com",
                            "id": 23
                          },
                          "replyTo": "replyto@domain.com",
                          "toField": "",
                          "tag": "Summer",
                          "htmlContent": "HTML CONTENT 2",
                          "createdAt": "2016-02-25T11:53:26Z",
                          "modifiedAt": "2016-02-25T11:53:26Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Create an email template",
        "operationId": "createSmtpTemplate",
        "requestBody": {
          "description": "values to update in transactional email template",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "sender",
                  "subject",
                  "templateName"
                ],
                "type": "object",
                "properties": {
                  "tag": {
                    "type": "string",
                    "description": "Tag of the template",
                    "example": "OrderConfirmation"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the sender. **If not passed, will be set to default**\n",
                        "example": "Mary from MyShop"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of the sender",
                        "format": "email",
                        "example": "contact@myshop.com"
                      },
                      "id": {
                        "type": "integer",
                        "description": "Select the sender for the template on the basis of sender id.\n_In order to select a sender with specific pool of IP’s, dedicated ip users shall pass id (instead of email)_.\n",
                        "format": "int64",
                        "example": 3
                      }
                    },
                    "description": "Sender details including id or email and name (_optional_). Only one of either Sender's email or Sender's ID shall be passed in one request at a time. For example:\n**{\"name\":\"xyz\", \"email\":\"example@abc.com\"}**\n**{\"name\":\"xyz\", \"id\":123}**\n"
                  },
                  "templateName": {
                    "type": "string",
                    "description": "Name of the template",
                    "example": "Order Confirmation - EN"
                  },
                  "htmlContent": {
                    "type": "string",
                    "description": "Body of the message (HTML version). The field must have more than 10 characters. **REQUIRED if htmlUrl is empty**\n",
                    "example": "The order n°xxxxx has been confirmed. Thanks for your purchase"
                  },
                  "htmlUrl": {
                    "type": "string",
                    "description": "Url which contents the body of the email message. REQUIRED if htmlContent is empty",
                    "format": "url",
                    "example": "https://html.domain.com"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Subject of the template",
                    "example": "Thanks for your purchase !"
                  },
                  "replyTo": {
                    "type": "string",
                    "description": "Email on which campaign recipients will be able to reply to",
                    "format": "email",
                    "example": "support@myshop.com"
                  },
                  "toField": {
                    "type": "string",
                    "description": "To personalize the **To** Field. If you want to include the first name and last name of your recipient, add **{FNAME} {LNAME}**. These contact attributes must already exist in your SendinBlue account. If input parameter **params** used please use **{{contact.FNAME}} {{contact.LNAME}}** for personalization\n",
                    "example": "{FNAME} {LNAME}"
                  },
                  "attachmentUrl": {
                    "type": "string",
                    "description": "Absolute url of the attachment (**no local file**). Extension allowed:\n#### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub and eps'\n",
                    "format": "url",
                    "example": "https://attachment.domain.com"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Status of template. isActive = true means template is active and isActive = false means template is inactive",
                    "example": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the object created",
                      "format": "int64",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/templates/{templateId}": {
      "get": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Returns the template information",
        "operationId": "getSmtpTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "id of the template",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email template informations",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "createdAt",
                    "htmlContent",
                    "id",
                    "isActive",
                    "modifiedAt",
                    "name",
                    "replyTo",
                    "sender",
                    "subject",
                    "tag",
                    "testSent",
                    "toField"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the template",
                      "format": "int64",
                      "example": 4
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the template",
                      "example": "Order Confirmation - EN"
                    },
                    "subject": {
                      "type": "string",
                      "description": "Subject of the template",
                      "example": "Thanks for your order !"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Status of template (true=active, false=inactive)",
                      "example": true
                    },
                    "testSent": {
                      "type": "boolean",
                      "description": "Status of test sending for the template (true=test email has been sent, false=test email has not been sent)",
                      "example": true
                    },
                    "sender": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "From email for the template",
                          "example": "Mary form MyShop"
                        },
                        "email": {
                          "type": "string",
                          "description": "From email for the template",
                          "format": "email",
                          "example": "contact@myshop.fr"
                        },
                        "id": {
                          "type": "string",
                          "description": "Sender id of the template",
                          "example": "43"
                        }
                      }
                    },
                    "replyTo": {
                      "type": "string",
                      "description": "Email defined as the \"Reply to\" for the template",
                      "format": "email",
                      "example": "replyto@domain.com"
                    },
                    "toField": {
                      "type": "string",
                      "description": "Customisation of the \"to\" field for the template",
                      "example": "{FIRSTNAME} {LASTNAME}"
                    },
                    "tag": {
                      "type": "string",
                      "description": "Tag of the template",
                      "example": "sports"
                    },
                    "htmlContent": {
                      "type": "string",
                      "description": "HTML content of the template",
                      "example": "Your order n°xxxxx has been confirmed. Thanks for your purchase."
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Creation UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                      "example": "2017-05-01T12:30:00Z"
                    },
                    "modifiedAt": {
                      "type": "string",
                      "description": "Last modification UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                      "example": "2017-05-12T12:30:00Z"
                    },
                    "doiTemplate": {
                      "type": "boolean",
                      "description": "It is true if template is a valid Double opt-in (DOI) template, otherwise it is false. This field will be available only in case of single template detail call.",
                      "example": false
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 33,
                      "name": "OrderConfirmation",
                      "subject": "Order Confirmation : Thanks for your Purchase !",
                      "isActive": true,
                      "testSent": false,
                      "sender": {
                        "name": "John",
                        "email": "john.smith@example.com",
                        "id": 26
                      },
                      "replyTo": "replyto@domain.com",
                      "toField": "",
                      "tag": "",
                      "htmlContent": "HTML CONTENT 4",
                      "createdAt": "2016-02-25T11:53:26Z",
                      "modifiedAt": "2016-02-25T11:53:26Z",
                      "doiTemplate": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Template ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Update an email template",
        "operationId": "updateSmtpTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "id of the template",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "values to update in transactional email template",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag": {
                    "type": "string",
                    "description": "Tag of the template",
                    "example": "OrderConfirmation"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the sender",
                        "example": "Mary from MyShop"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of the sender",
                        "format": "email",
                        "example": "contact@myshop.com"
                      },
                      "id": {
                        "type": "integer",
                        "description": "Select the sender for the template on the basis of sender id.\n_In order to select a sender with specific pool of IP’s, dedicated ip users shall pass id (instead of email)_.\n",
                        "format": "int64",
                        "example": 3
                      }
                    },
                    "description": "Sender details including id or email and name (_optional_). Only one of either Sender's email or Sender's ID shall be passed in one request at a time. For example:\n**{\"name\":\"xyz\", \"email\":\"example@abc.com\"}**\n**{\"name\":\"xyz\", \"id\":123}**\n"
                  },
                  "templateName": {
                    "type": "string",
                    "description": "Name of the template",
                    "example": "Order Confirmation - EN"
                  },
                  "htmlContent": {
                    "type": "string",
                    "description": "**Required if htmlUrl is empty**. Body of the message (HTML must have more than 10 characters)\n",
                    "example": "The order n°xxxxx has been confirmed. Thanks for your purchase"
                  },
                  "htmlUrl": {
                    "type": "string",
                    "description": "**Required if htmlContent is empty**. URL to the body of the email (HTML)\n",
                    "format": "url",
                    "example": "https://html.domain.com"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Subject of the email",
                    "example": "Thanks for your purchase !"
                  },
                  "replyTo": {
                    "type": "string",
                    "description": "Email on which campaign recipients will be able to reply to",
                    "format": "email",
                    "example": "support@myshop.com"
                  },
                  "toField": {
                    "type": "string",
                    "description": "To personalize the **To** Field. If you want to include the first name and last name of your recipient, add **{FNAME} {LNAME}**. These contact attributes must already exist in your SendinBlue account. If input parameter **params** used please use **{{contact.FNAME}} {{contact.LNAME}}** for personalization\n",
                    "example": "{FNAME} {LNAME}"
                  },
                  "attachmentUrl": {
                    "type": "string",
                    "description": "Absolute url of the attachment (**no local file**). Extensions allowed: \n#### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub and eps\n",
                    "format": "url",
                    "example": "https://attachment.domain.com"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Status of the template. isActive = false means template is inactive, isActive = true means template is active",
                    "example": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "transactional email template updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Template ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Delete an inactive email template",
        "operationId": "deleteSmtpTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "id of the template",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Inactive transactional email template has been deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Template ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/templates/{templateId}/sendTest": {
      "post": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Send a template to your test list",
        "operationId": "sendTestTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "Id of the template",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emailTo": {
                    "type": "array",
                    "description": "List of the email addresses of the recipients whom you wish to send the test mail.\n_If left empty, the test mail will be sent to your entire test list. You can not send more than 50 test emails per day_.\n",
                    "items": {
                      "type": "string",
                      "description": "Email addres of the recipient",
                      "format": "email",
                      "example": "helen.jurger@example.com"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Test email has been sent successfully to all recipients",
            "content": {}
          },
          "400": {
            "description": "Test email could not be sent to the following email addresses",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Response code",
                      "example": "invalid_parameter"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "The email could not be sent to all recipients"
                    },
                    "unexistingEmails": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Email addresses you tried to sent an email to, but not existing in your contacts",
                        "format": "email",
                        "example": "matthew.dow@example.com, elisa.carrely@example.com"
                      }
                    },
                    "withoutListEmails": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Email addresses you sent an email to, without a contact list",
                        "format": "email",
                        "example": "jeff.dean@example.com, jim.sue@example.com"
                      }
                    },
                    "blackListedEmails": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Email addresses which are blacklisted. ONLY FOR email-campign's sendTest OR smtp-template's sendTest api's.",
                        "format": "email",
                        "example": "jeff.dean@example.com, jim.sue@example.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Template ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/statistics/aggregatedReport": {
      "get": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Get your transactional email activity aggregated over a period of time",
        "description": "This endpoint will show the aggregated stats for past 90 days by default if `startDate` and `endDate` OR `days` is not passed. The date range can not exceed 90 days",
        "operationId": "getAggregatedSmtpReport",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD). Must be lower than equal to endDate\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD). Must be greater than equal to startDate\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Tag of the emails",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aggregated report informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "range": {
                      "type": "string",
                      "description": "Time frame of the report",
                      "example": "2016-09-08|2017-04-06"
                    },
                    "requests": {
                      "type": "integer",
                      "description": "Number of requests for the timeframe",
                      "format": "int64",
                      "example": 263
                    },
                    "delivered": {
                      "type": "integer",
                      "description": "Number of delivered emails for the timeframe",
                      "format": "int64",
                      "example": 249
                    },
                    "hardBounces": {
                      "type": "integer",
                      "description": "Number of hardbounces for the timeframe",
                      "format": "int64",
                      "example": 1
                    },
                    "softBounces": {
                      "type": "integer",
                      "description": "Number of softbounces for the timeframe",
                      "format": "int64",
                      "example": 4
                    },
                    "clicks": {
                      "type": "integer",
                      "description": "Number of clicks for the timeframe",
                      "format": "int64",
                      "example": 12
                    },
                    "uniqueClicks": {
                      "type": "integer",
                      "description": "Number of unique clicks for the timeframe",
                      "format": "int64",
                      "example": 8
                    },
                    "opens": {
                      "type": "integer",
                      "description": "Number of openings for the timeframe",
                      "format": "int64",
                      "example": 47
                    },
                    "uniqueOpens": {
                      "type": "integer",
                      "description": "Number of unique openings for the timeframe",
                      "format": "int64",
                      "example": 37
                    },
                    "spamReports": {
                      "type": "integer",
                      "description": "Number of complaint (spam report) for the timeframe",
                      "format": "int64",
                      "example": 0
                    },
                    "blocked": {
                      "type": "integer",
                      "description": "Number of blocked contact emails for the timeframe",
                      "format": "int64",
                      "example": 2
                    },
                    "invalid": {
                      "type": "integer",
                      "description": "Number of invalid emails for the timeframe",
                      "format": "int64",
                      "example": 0
                    },
                    "unsubscribed": {
                      "type": "integer",
                      "description": "Number of unsubscribed emails for the timeframe",
                      "format": "int64",
                      "example": 0
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "range": "2016-09-08|2017-04-28",
                      "requests": 19887,
                      "delivered": 18996,
                      "hardBounces": 234,
                      "softBounces": 1533,
                      "clicks": 9987,
                      "uniqueClicks": 8766,
                      "opens": 17654,
                      "uniqueOpens": 13688,
                      "spamReports": 1,
                      "blocked": 2,
                      "invalid": 0,
                      "unsubscribed": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/statistics/reports": {
      "get": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Get your transactional email activity aggregated per day",
        "operationId": "getSmtpReport",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents returned per page",
            "schema": {
              "maximum": 30,
              "type": "integer",
              "format": "int64",
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document on the page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD)\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Tag of the emails",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aggregated report informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reports": {
                      "type": "array",
                      "items": {
                        "required": [
                          "blocked",
                          "clicks",
                          "date",
                          "delivered",
                          "hardBounces",
                          "invalid",
                          "opens",
                          "requests",
                          "softBounces",
                          "spamReports",
                          "uniqueClicks",
                          "uniqueOpens",
                          "unsubscribed"
                        ],
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "description": "Date of the statistics",
                            "format": "date",
                            "example": "2017-04-06"
                          },
                          "requests": {
                            "type": "integer",
                            "description": "Number of requests for the date",
                            "format": "int64",
                            "example": 65
                          },
                          "delivered": {
                            "type": "integer",
                            "description": "Number of delivered emails for the date",
                            "format": "int64",
                            "example": 63
                          },
                          "hardBounces": {
                            "type": "integer",
                            "description": "Number of hardbounces for the date",
                            "format": "int64",
                            "example": 1
                          },
                          "softBounces": {
                            "type": "integer",
                            "description": "Number of softbounces for the date",
                            "format": "int64",
                            "example": 1
                          },
                          "clicks": {
                            "type": "integer",
                            "description": "Number of clicks for the date",
                            "format": "int64",
                            "example": 6
                          },
                          "uniqueClicks": {
                            "type": "integer",
                            "description": "Number of unique clicks for the date",
                            "format": "int64",
                            "example": 5
                          },
                          "opens": {
                            "type": "integer",
                            "description": "Number of openings for the date",
                            "format": "int64",
                            "example": 58
                          },
                          "uniqueOpens": {
                            "type": "integer",
                            "description": "Number of unique openings for the date",
                            "format": "int64",
                            "example": 52
                          },
                          "spamReports": {
                            "type": "integer",
                            "description": "Number of complaints (spam reports) for the date",
                            "format": "int64",
                            "example": 0
                          },
                          "blocked": {
                            "type": "integer",
                            "description": "Number of blocked emails for the date",
                            "format": "int64",
                            "example": 0
                          },
                          "invalid": {
                            "type": "integer",
                            "description": "Number of invalid emails for the date",
                            "format": "int64",
                            "example": 0
                          },
                          "unsubscribed": {
                            "type": "integer",
                            "description": "Number of unsubscribed emails for the date",
                            "format": "int64",
                            "example": 0
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "reports": [
                        {
                          "date": "2017-04-30",
                          "requests": 10756,
                          "delivered": 10103,
                          "hardBounces": 21,
                          "softBounces": 137,
                          "clicks": 1026,
                          "uniqueClicks": 720,
                          "opens": 5091,
                          "uniqueOpens": 2318,
                          "spamReports": 0,
                          "blocked": 519,
                          "invalid": 1,
                          "unsubscribed": 0
                        },
                        {
                          "date": "2017-05-01",
                          "requests": 18812,
                          "delivered": 17499,
                          "hardBounces": 34,
                          "softBounces": 254,
                          "clicks": 1514,
                          "uniqueClicks": 1090,
                          "opens": 10089,
                          "uniqueOpens": 4393,
                          "spamReports": 0,
                          "blocked": 920,
                          "invalid": 2,
                          "unsubscribed": 3
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/statistics/events": {
      "get": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Get all your transactional email activity (unaggregated events)",
        "description": "This endpoint will show the aggregated stats for past 30 days by default if `startDate` and `endDate` OR `days` is not passed. The date range can not exceed 90 days",
        "operationId": "getEmailEventReport",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number limitation for the result returned",
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Beginning point in the list to retrieve from.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD). Must be lower than equal to endDate\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD). Must be greater than equal to startDate\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filter the report for a specific email addresses",
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "name": "event",
            "in": "query",
            "description": "Filter the report for a specific event type",
            "schema": {
              "type": "string",
              "enum": [
                "bounces",
                "hardBounces",
                "softBounces",
                "delivered",
                "spam",
                "requests",
                "opened",
                "clicks",
                "invalid",
                "deferred",
                "blocked",
                "unsubscribed",
                "error"
              ]
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Filter the report for tags (serialized and urlencoded array)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageId",
            "in": "query",
            "description": "Filter on a specific message id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "query",
            "description": "Filter on a specific template id",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email events report informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "required": [
                          "date",
                          "email",
                          "event",
                          "messageId"
                        ],
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email address which generates the event",
                            "format": "email",
                            "example": "john.smith@example.com"
                          },
                          "date": {
                            "type": "string",
                            "description": "UTC date-time on which the event has been generated",
                            "example": "2017-03-12T12:30:00Z"
                          },
                          "subject": {
                            "type": "string",
                            "description": "Subject of the event",
                            "example": "Sib client test"
                          },
                          "messageId": {
                            "type": "string",
                            "description": "Message ID which generated the event",
                            "example": "<201798300811.5787683@relay.domain.com>"
                          },
                          "event": {
                            "type": "string",
                            "description": "Event which occurred",
                            "example": "delivered",
                            "enum": [
                              "bounces",
                              "hardBounces",
                              "softBounces",
                              "delivered",
                              "spam",
                              "requests",
                              "opened",
                              "clicks",
                              "invalid",
                              "deferred",
                              "blocked",
                              "unsubscribed",
                              "error"
                            ]
                          },
                          "reason": {
                            "type": "string",
                            "description": "Reason of bounce (only available if the event is hardbounce or softbounce)",
                            "example": "Error connection timeout"
                          },
                          "tag": {
                            "type": "string",
                            "description": "Tag of the email which generated the event",
                            "example": "OrderConfirmation"
                          },
                          "ip": {
                            "type": "string",
                            "description": "IP from which the user has opened the email or clicked on the link (only available if the event is opened or clicks)",
                            "example": "165.87.3.15"
                          },
                          "link": {
                            "type": "string",
                            "description": "The link which is sent to the user (only available if the event is requests or opened or clicks)",
                            "example": "https://www.someexamplelink.com"
                          },
                          "from": {
                            "type": "string",
                            "description": "Sender email from which the emails are sent",
                            "format": "email",
                            "example": "john@example.com"
                          },
                          "templateId": {
                            "type": "integer",
                            "description": "ID of the template (only available if the email is template based)",
                            "format": "int64",
                            "example": 4
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "events": [
                        {
                          "email": "john.smith@example.com",
                          "date": "2017-03-12T12:30:00Z",
                          "messageId": "<201798300811.5787683@example.domain.com>",
                          "event": "deferred",
                          "reason": "Error connection timeout",
                          "tag": "OrderConfirmation",
                          "from": "john@example.com",
                          "templateId": 4
                        },
                        {
                          "email": "john.smith@example.com",
                          "date": "2017-03-13T16:30:00Z",
                          "messageId": "<201798300811.5787683@example.domain.com>",
                          "event": "delivered",
                          "tag": "OrderConfirmation",
                          "from": "john@example.com",
                          "templateId": 5
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/blockedContacts/{email}": {
      "delete": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Unblock or resubscribe a transactional contact",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "contact email (urlencoded) to unblock.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact unblocked",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact email not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/blockedContacts": {
      "get": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Get the list of blocked or unsubscribed transactional contacts",
        "operationId": "getTransacBlockedContacts",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) from which you want to fetch the blocked or unsubscribed contacts\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) till which you want to fetch the blocked or unsubscribed contacts\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents returned per page",
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document on the page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "senders",
            "in": "query",
            "description": "Comma separated list of emails of the senders from which contacts are blocked or unsubscribed",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of blocked or unsubscribed transactional contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Count of blocked or unsubscribed contact",
                      "format": "int64",
                      "example": 1
                    },
                    "contacts": {
                      "type": "array",
                      "items": {
                        "required": [
                          "blockedAt",
                          "email",
                          "reason",
                          "senderEmail"
                        ],
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email address of the blocked or unsubscribed contact",
                            "format": "email",
                            "example": "john.smith@example.com"
                          },
                          "senderEmail": {
                            "type": "string",
                            "description": "Sender email address of the blocked or unsubscribed contact",
                            "format": "email",
                            "example": "john.smith@example.com"
                          },
                          "reason": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Reason code for blocking / unsubscribing (This code is safe for comparison)",
                                "example": "AdminBlocked",
                                "enum": [
                                  "unsubscribedViaMA",
                                  "unsubscribedViaEmail",
                                  "adminBlocked",
                                  "unsubscribedViaApi",
                                  "hardBounce",
                                  "contactFlaggedAsSpam"
                                ]
                              },
                              "message": {
                                "type": "string",
                                "description": "Reason for blocking / unsubscribing (This string is not safe for comparison)",
                                "example": "Admin blocked"
                              }
                            },
                            "description": "Reason for blocking / unsubscribing",
                            "example": "Admin blocked"
                          },
                          "blockedAt": {
                            "type": "string",
                            "description": "Date when the contact was blocked or unsubscribed on",
                            "example": "2017-05-01T12:30:00Z"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "count": 1,
                      "contacts": [
                        {
                          "email": "abc@xyz.com",
                          "senderEmail": "ez312@gmal.com",
                          "reason": {
                            "message": "Admin blocked",
                            "code": "adminBlocked"
                          },
                          "blockedAt": "2017-05-01T12:30:00Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/blockedDomains": {
      "get": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Get the list of blocked domains",
        "description": "Get the list of blocked domains",
        "operationId": "getBlockedDomains",
        "responses": {
          "200": {
            "description": "List of blocked domains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "domains"
                  ],
                  "properties": {
                    "domains": {
                      "description": "List of all blocked domains",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "name of blocked domain",
                        "example": "contact.com"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "domains": [
                        "example.com",
                        "testdomain.com"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Add a new domain to the list of blocked domains",
        "description": "Blocks a new domain in order to avoid messages being sent to the same",
        "operationId": "blockNewDomain",
        "requestBody": {
          "description": "Name of the domain to be blocked",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "domain"
                ],
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "name of the domain to be blocked",
                    "example": "example.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Domain is successfully blocked",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/blockedDomains/{domain}": {
      "delete": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Unblock an existing domain from the list of blocked domains",
        "description": "Unblocks an existing domain from the list of blocked domains",
        "operationId": "deleteBlockedDomain",
        "parameters": [
          {
            "name": "domain",
            "description": "The name of the domain to be deleted",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Domain is successfully deleted from the list of blocked domains",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Domain not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smtp/deleteHardbounces": {
      "post": {
        "tags": [
          "Transactional emails"
        ],
        "summary": "Delete hardbounces",
        "description": "Delete hardbounces. To use carefully (e.g. in case of temporary ISP failures)",
        "operationId": "deleteHardbounces",
        "requestBody": {
          "description": "values to delete hardbounces",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string",
                    "description": "Starting date (YYYY-MM-DD) of the time period for deletion. The hardbounces occurred after this date will be deleted. Must be less than or equal to the endDate",
                    "example": "2016-12-31"
                  },
                  "endDate": {
                    "type": "string",
                    "description": "Ending date (YYYY-MM-DD) of the time period for deletion. The hardbounces until this date will be deleted. Must be greater than or equal to the startDate",
                    "example": "2017-01-31"
                  },
                  "contactEmail": {
                    "type": "string",
                    "description": "Target a specific email address",
                    "format": "email",
                    "example": "alex76@example.com"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "Hardbounces deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get all the contacts",
        "operationId": "getContacts",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents per page",
            "schema": {
              "maximum": 1000,
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document of the page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "modifiedSince",
            "in": "query",
            "description": "Filter (urlencoded) the contacts modified after a given UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All contacts listed",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contacts",
                    "count"
                  ],
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "required": [
                              "attributes",
                              "createdAt",
                              "email",
                              "emailBlacklisted",
                              "id",
                              "listIds",
                              "modifiedAt",
                              "smsBlacklisted"
                            ],
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "Email address of the contact for which you requested the details",
                                "format": "email",
                                "example": "john.smith@example.com"
                              },
                              "id": {
                                "type": "integer",
                                "description": "ID of the contact for which you requested the details",
                                "format": "int64",
                                "example": 32
                              },
                              "emailBlacklisted": {
                                "type": "boolean",
                                "description": "Blacklist status for email campaigns (true=blacklisted, false=not blacklisted)",
                                "example": false
                              },
                              "smsBlacklisted": {
                                "type": "boolean",
                                "description": "Blacklist status for SMS campaigns (true=blacklisted, false=not blacklisted)",
                                "example": true
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "Creation UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                                "example": "2017-05-12T12:30:00Z"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "description": "Last modification UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                                "example": "2017-05-12T12:30:00Z"
                              },
                              "listIds": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "description": "List(s) in which the contact is included",
                                  "format": "int64"
                                }
                              },
                              "listUnsubscribed": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "description": "List(s) in which the contact is included (only available if unsubscription per list is activated for the account)",
                                  "format": "int64"
                                }
                              },
                              "attributes": {
                                "type": "object",
                                "properties": {},
                                "description": "Set of attributes of the contact",
                                "example": {
                                  "name": "Joe",
                                  "email": "joe@example.com"
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of contacts",
                      "format": "int64",
                      "example": 17655
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "contacts": [
                        {
                          "email": "contact1@example.com",
                          "id": 247,
                          "emailBlacklisted": true,
                          "smsBlacklisted": true,
                          "createdAt": "2017-05-01T17:05:03Z",
                          "modifiedAt": "2017-05-01T17:05:03Z",
                          "listIds": [
                            43,
                            58
                          ],
                          "attributes": {
                            "SMS": "33058407250",
                            "IDENTIFICATION": "1-3RHQ-259",
                            "CIV": "MS",
                            "LAST_NAME": "Brennon",
                            "FIRST_NAME": "Meg",
                            "DOB": "1986-05-02",
                            "ADDRESS": "1 5th avenue",
                            "ZIP_CODE": "44300",
                            "CITY": "New-York",
                            "ACTION_CODE": "17HH98CH"
                          }
                        },
                        {
                          "email": "33058407248@mailin-sms.com",
                          "id": 245,
                          "emailBlacklisted": true,
                          "smsBlacklisted": false,
                          "createdAt": "2017-05-01T17:05:03Z",
                          "modifiedAt": "2017-05-01T17:05:03Z",
                          "listIds": [
                            43,
                            61,
                            58
                          ],
                          "attributes": {
                            "SMS": "33058407248",
                            "IDENTIFICATION": "1-78JS-432",
                            "CIV": "MS",
                            "LAST_NAME": "Press",
                            "FIRST_NAME": "Sophia",
                            "DOB": "1980-09-11",
                            "ADDRESS": "5 Flower Street",
                            "ZIP_CODE": "44119",
                            "CITY": "Seattle",
                            "ACTION_CODE": "17HU765"
                          }
                        }
                      ],
                      "count": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a contact",
        "operationId": "createContact",
        "requestBody": {
          "description": "Values to create a contact",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email address of the user. **Mandatory if \"SMS\" field is not passed in \"attributes\" parameter**. Mobile Number in **SMS** field should be passed with proper country code. For example:\n**{\"SMS\":\"+91xxxxxxxxxx\"}** or **{\"SMS\":\"0091xxxxxxxxxx\"}**\n",
                    "format": "email",
                    "example": "elly@example.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Pass the set of attributes and their values. **These attributes must be present in your SendinBlue account**. For eg:\n**{\"FNAME\":\"Elly\", \"LNAME\":\"Roger\"}**\n",
                    "example": {
                      "FNAME": "Elly",
                      "LNAME": "Roger"
                    }
                  },
                  "emailBlacklisted": {
                    "type": "boolean",
                    "description": "Set this field to blacklist the contact for emails (emailBlacklisted = true)",
                    "example": false
                  },
                  "smsBlacklisted": {
                    "type": "boolean",
                    "description": "Set this field to blacklist the contact for SMS (smsBlacklisted = true)",
                    "example": false
                  },
                  "listIds": {
                    "type": "array",
                    "description": "Ids of the lists to add the contact to",
                    "items": {
                      "type": "integer",
                      "description": "Id of the list to add the contact to",
                      "format": "int64",
                      "example": 36
                    }
                  },
                  "updateEnabled": {
                    "type": "boolean",
                    "description": "Facilitate to update the existing contact in the same request (updateEnabled = true)",
                    "example": false,
                    "default": false
                  },
                  "smtpBlacklistSender": {
                    "type": "array",
                    "description": "transactional email forbidden sender for contact. Use only for email Contact ( only available if updateEnabled = true )",
                    "items": {
                      "type": "string",
                      "format": "email"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Contact created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the contact when a new contact is created",
                      "format": "int64",
                      "example": 122
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 21
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Contact updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the contact when a new contact is created",
                      "format": "int64",
                      "example": 122
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 21
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/doubleOptinConfirmation": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create Contact via DOI (Double-Opt-In) Flow",
        "operationId": "createDoiContact",
        "requestBody": {
          "description": "Values to create the Double opt-in (DOI) contact",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "includeListIds",
                  "redirectionUrl",
                  "templateId"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email address where the confirmation email will be sent. This email address will be the identifier for all other contact attributes.",
                    "format": "email",
                    "example": "elly@example.com"
                  },
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Pass the set of attributes and their values. **These attributes must be present in your SendinBlue account**. For eg. **{'FNAME':'Elly', 'LNAME':'Roger'}**\n",
                    "example": {
                      "FNAME": "Elly",
                      "LNAME": "Roger"
                    }
                  },
                  "includeListIds": {
                    "type": "array",
                    "description": "Lists under user account where contact should be added",
                    "items": {
                      "type": "integer",
                      "description": "Id of the list",
                      "format": "int64",
                      "example": 36
                    }
                  },
                  "excludeListIds": {
                    "type": "array",
                    "description": "Lists under user account where contact should not be added",
                    "items": {
                      "type": "integer",
                      "description": "Id of the list",
                      "format": "int64",
                      "example": 36
                    }
                  },
                  "templateId": {
                    "type": "integer",
                    "description": "Id of the Double opt-in (DOI) template",
                    "format": "int64",
                    "example": 2
                  },
                  "redirectionUrl": {
                    "type": "string",
                    "description": "URL of the web page that user will be redirected to after clicking on the double opt in URL. When editing your DOI template you can reference this URL by using the tag **{{ params.DOIurl }}**.\n",
                    "format": "url",
                    "example": "http://requestb.in/173lyyx1"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "DOI Contact created",
            "content": {}
          },
          "204": {
            "description": "DOI Contact updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "createDoiContact"
      }
    },
    "/contacts/{identifier}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get a contact's details",
        "description": "Along with the contact details, this endpoint will show the statistics of contact for the recent 90 days by default. To fetch the earlier statistics, please use Get contact campaign stats ``https://developers.sendinblue.com/reference/contacts-7#getcontactstats`` endpoint with the appropriate date ranges.",
        "operationId": "getContactInfo",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Email (urlencoded) OR ID of the contact OR its SMS attribute value",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact informations",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "attributes",
                        "createdAt",
                        "email",
                        "emailBlacklisted",
                        "id",
                        "listIds",
                        "modifiedAt",
                        "smsBlacklisted"
                      ],
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Email address of the contact for which you requested the details",
                          "format": "email",
                          "example": "john.smith@example.com"
                        },
                        "id": {
                          "type": "integer",
                          "description": "ID of the contact for which you requested the details",
                          "format": "int64",
                          "example": 32
                        },
                        "emailBlacklisted": {
                          "type": "boolean",
                          "description": "Blacklist status for email campaigns (true=blacklisted, false=not blacklisted)",
                          "example": false
                        },
                        "smsBlacklisted": {
                          "type": "boolean",
                          "description": "Blacklist status for SMS campaigns (true=blacklisted, false=not blacklisted)",
                          "example": true
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "Creation UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                          "example": "2017-05-12T12:30:00Z"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "description": "Last modification UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                          "example": "2017-05-12T12:30:00Z"
                        },
                        "listIds": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "description": "List(s) in which the contact is included",
                            "format": "int64"
                          }
                        },
                        "listUnsubscribed": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "description": "List(s) in which the contact is included (only available if unsubscription per list is activated for the account)",
                            "format": "int64"
                          }
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {},
                          "description": "Set of attributes of the contact",
                          "example": {
                            "name": "Joe",
                            "email": "joe@example.com"
                          }
                        }
                      }
                    },
                    {
                      "required": [
                        "statistics"
                      ],
                      "type": "object",
                      "properties": {
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "messagesSent": {
                              "type": "array",
                              "description": "Listing of the sent campaign for the contact",
                              "items": {
                                "required": [
                                  "campaignId",
                                  "eventTime"
                                ],
                                "type": "object",
                                "properties": {
                                  "campaignId": {
                                    "type": "integer",
                                    "description": "ID of the campaign which generated the event",
                                    "format": "int64",
                                    "example": 3
                                  },
                                  "eventTime": {
                                    "type": "string",
                                    "description": "UTC date-time of the event",
                                    "example": "2017-03-12T20:15:13Z"
                                  }
                                }
                              }
                            },
                            "hardBounces": {
                              "type": "array",
                              "description": "Listing of the hardbounes generated by the contact",
                              "items": {
                                "required": [
                                  "campaignId",
                                  "eventTime"
                                ],
                                "type": "object",
                                "properties": {
                                  "campaignId": {
                                    "type": "integer",
                                    "description": "ID of the campaign which generated the event",
                                    "format": "int64",
                                    "example": 3
                                  },
                                  "eventTime": {
                                    "type": "string",
                                    "description": "UTC date-time of the event",
                                    "example": "2017-03-12T20:15:13Z"
                                  }
                                }
                              }
                            },
                            "softBounces": {
                              "type": "array",
                              "description": "Listing of the softbounes generated by the contact",
                              "items": {
                                "required": [
                                  "campaignId",
                                  "eventTime"
                                ],
                                "type": "object",
                                "properties": {
                                  "campaignId": {
                                    "type": "integer",
                                    "description": "ID of the campaign which generated the event",
                                    "format": "int64",
                                    "example": 3
                                  },
                                  "eventTime": {
                                    "type": "string",
                                    "description": "UTC date-time of the event",
                                    "example": "2017-03-12T20:15:13Z"
                                  }
                                }
                              }
                            },
                            "complaints": {
                              "type": "array",
                              "description": "Listing of the complaints generated by the contact",
                              "items": {
                                "required": [
                                  "campaignId",
                                  "eventTime"
                                ],
                                "type": "object",
                                "properties": {
                                  "campaignId": {
                                    "type": "integer",
                                    "description": "ID of the campaign which generated the event",
                                    "format": "int64",
                                    "example": 3
                                  },
                                  "eventTime": {
                                    "type": "string",
                                    "description": "UTC date-time of the event",
                                    "example": "2017-03-12T20:15:13Z"
                                  }
                                }
                              }
                            },
                            "unsubscriptions": {
                              "required": [
                                "adminUnsubscription",
                                "userUnsubscription"
                              ],
                              "type": "object",
                              "properties": {
                                "userUnsubscription": {
                                  "type": "array",
                                  "description": "Contact unsubscribe via unsubscription link in a campaign",
                                  "items": {
                                    "required": [
                                      "campaignId",
                                      "eventTime"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "campaignId": {
                                        "type": "integer",
                                        "description": "ID of the campaign which generated the event",
                                        "format": "int64",
                                        "example": 3
                                      },
                                      "eventTime": {
                                        "type": "string",
                                        "description": "UTC date-time of the event",
                                        "example": "2017-03-12T20:15:13Z"
                                      },
                                      "ip": {
                                        "type": "string",
                                        "description": "IP from which the user has unsubscribed",
                                        "example": "165.87.3.15"
                                      }
                                    }
                                  }
                                },
                                "adminUnsubscription": {
                                  "type": "array",
                                  "description": "Contact has been unsubscribed from the administrator",
                                  "items": {
                                    "required": [
                                      "eventTime"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "eventTime": {
                                        "type": "string",
                                        "description": "UTC date-time of the event",
                                        "example": "2017-03-12T20:15:13Z"
                                      },
                                      "ip": {
                                        "type": "string",
                                        "description": "IP from which the user has been unsubscribed",
                                        "example": "165.87.3.15"
                                      }
                                    }
                                  }
                                }
                              },
                              "description": "Listing of the unsubscription for the contact"
                            },
                            "opened": {
                              "type": "array",
                              "description": "Listing of the openings generated by the contact",
                              "items": {
                                "required": [
                                  "campaignId",
                                  "count",
                                  "eventTime",
                                  "ip"
                                ],
                                "type": "object",
                                "properties": {
                                  "campaignId": {
                                    "type": "integer",
                                    "description": "ID of the campaign which generated the event",
                                    "format": "int64",
                                    "example": 3
                                  },
                                  "count": {
                                    "type": "integer",
                                    "description": "Number of openings for the campaign",
                                    "format": "int64",
                                    "example": 1
                                  },
                                  "eventTime": {
                                    "type": "string",
                                    "description": "UTC date-time of the event",
                                    "example": "2017-03-12T20:15:13Z"
                                  },
                                  "ip": {
                                    "type": "string",
                                    "description": "IP from which the user has opened the email",
                                    "example": "165.87.3.15"
                                  }
                                }
                              }
                            },
                            "clicked": {
                              "type": "array",
                              "description": "Listing of the clicks generated by the contact",
                              "items": {
                                "required": [
                                  "campaignId",
                                  "links"
                                ],
                                "type": "object",
                                "properties": {
                                  "campaignId": {
                                    "type": "integer",
                                    "description": "ID of the campaign which generated the event",
                                    "format": "int64",
                                    "example": 3
                                  },
                                  "links": {
                                    "type": "array",
                                    "description": "Listing of the clicked links for the campaign",
                                    "items": {
                                      "required": [
                                        "count",
                                        "eventTime",
                                        "ip",
                                        "url"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "count": {
                                          "type": "integer",
                                          "description": "Number of clicks on this link for the campaign",
                                          "format": "int64",
                                          "example": 1
                                        },
                                        "eventTime": {
                                          "type": "string",
                                          "description": "UTC date-time of the event",
                                          "example": "2017-03-12T20:15:13Z"
                                        },
                                        "ip": {
                                          "type": "string",
                                          "description": "IP from which the user has clicked on the link",
                                          "example": "165.87.3.15"
                                        },
                                        "url": {
                                          "type": "string",
                                          "description": "URL of the clicked link",
                                          "example": "www.myshop.com"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "transacAttributes": {
                              "type": "array",
                              "description": "Listing of the transactional attributes for the contact",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "delivered": {
                              "type": "array",
                              "description": "Listing of the delivered campaign for the contact",
                              "items": {
                                "required": [
                                  "campaignId",
                                  "eventTime"
                                ],
                                "type": "object",
                                "properties": {
                                  "campaignId": {
                                    "type": "integer",
                                    "description": "ID of the campaign which generated the event",
                                    "format": "int64",
                                    "example": 3
                                  },
                                  "eventTime": {
                                    "type": "string",
                                    "description": "UTC date-time of the event",
                                    "example": "2017-03-12T20:15:13Z"
                                  }
                                }
                              }
                            }
                          },
                          "description": "Campaign statistics of the contact"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "email": "peggy.rain@example.com",
                      "id": 42,
                      "emailBlacklisted": false,
                      "smsBlacklisted": false,
                      "createdAt": "2017-05-02T16:40:31Z",
                      "modifiedAt": "2017-05-02T16:40:31Z",
                      "attributes": {
                        "FIRST_NAME": "Peggy",
                        "LAST_NAME": "Rain",
                        "SMS": "3087433387669",
                        "CIV": "1",
                        "DOB": "1986-04-13",
                        "ADDRESS": "987 5th avenue",
                        "ZIP_CODE": "87544",
                        "CITY": "New-York",
                        "AREA": "NY"
                      },
                      "listIds": [
                        40
                      ],
                      "statistics": {
                        "messagesSent": [
                          {
                            "campaignId": 21,
                            "eventTime": "2016-05-03T20:15:13Z"
                          },
                          {
                            "campaignId": 42,
                            "eventTime": "2016-10-17T10:30:01Z"
                          }
                        ],
                        "opened": [
                          {
                            "campaignId": 21,
                            "count": 2,
                            "eventTime": "2016-05-03T21:24:56Z",
                            "ip": "66.249.93.118"
                          },
                          {
                            "campaignId": 68,
                            "count": 1,
                            "eventTime": "2017-01-30T13:56:40Z",
                            "ip": "66.249.93.217"
                          }
                        ],
                        "clicked": [
                          {
                            "campaignId": 21,
                            "links": [
                              {
                                "count": 2,
                                "eventTime": "2016-05-03T21:25:01Z",
                                "ip": "66.249.93.118",
                                "url": "https://url.domain.com/fbe5387ec717e333628380454f68670010b205ff/1/go?uid={EMAIL}&utm_source=sendinblue&utm_campaign=test_camp&utm_medium=email"
                              }
                            ]
                          }
                        ],
                        "delivered": [
                          {
                            "campaignId": 21,
                            "count": 2,
                            "eventTime": "2016-05-03T21:24:56Z",
                            "ip": "66.249.93.118"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact's email not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact",
        "operationId": "deleteContact",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Email (urlencoded) OR ID of the contact",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "You're not allowed to delete registered email contact with SendinBlue",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a contact",
        "operationId": "updateContact",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Email (urlencoded) OR ID of the contact",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Values to update a contact",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "attributes": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "Pass the set of attributes to be updated. **These attributes must be present in your account**. To update existing email address of a contact with the new one please pass EMAIL in attribtes. For example, **{ \"EMAIL\":\"newemail@domain.com\", \"FNAME\":\"Ellie\", \"LNAME\":\"Roger\"}**.\nKeep in mind transactional attributes can be updated the same way as normal attributes. Mobile Number in **SMS** field should be passed with proper country code. For example: **{\"SMS\":\"+91xxxxxxxxxx\"} or {\"SMS\":\"0091xxxxxxxxxx\"}**\n",
                    "example": {
                      "EMAIL": "newemail@domain.com",
                      "FNAME": "Ellie",
                      "LNAME": "Roger"
                    }
                  },
                  "emailBlacklisted": {
                    "type": "boolean",
                    "description": "Set/unset this field to blacklist/allow the contact for emails (emailBlacklisted = true)",
                    "example": false
                  },
                  "smsBlacklisted": {
                    "type": "boolean",
                    "description": "Set/unset this field to blacklist/allow the contact for SMS (smsBlacklisted = true)",
                    "example": true
                  },
                  "listIds": {
                    "type": "array",
                    "description": "Ids of the lists to add the contact to",
                    "items": {
                      "type": "integer",
                      "description": "Id of the list to add the contact to",
                      "format": "int64",
                      "example": 65
                    }
                  },
                  "unlinkListIds": {
                    "type": "array",
                    "description": "Ids of the lists to remove the contact from",
                    "items": {
                      "type": "integer",
                      "description": "Id of the list to remove the contact from",
                      "format": "int64",
                      "example": 36
                    }
                  },
                  "smtpBlacklistSender": {
                    "type": "array",
                    "description": "transactional email forbidden sender for contact. Use only for email Contact",
                    "items": {
                      "type": "string",
                      "format": "email"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Contact updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact's email not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "updateContact"
      }
    },
    "/contacts/batch": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update multiple contacts",
        "operationId": "updateBatchContacts",
        "requestBody": {
          "description": "Values to update multiple contacts",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contacts": {
                    "type": "array",
                    "description": "List of contacts to be updated",
                    "items": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Email address of the user to be updated (For each operation only pass one of the supported contact identifiers. Email, id or sms)",
                          "format": "email",
                          "example": "elly@example.com"
                        },
                        "id": {
                          "type": "integer",
                          "description": "id of the user to be updated (For each operation only pass one of the supported contact identifiers. Email, id or sms)",
                          "format": "int64",
                          "example": 31
                        },
                        "sms": {
                          "type": "string",
                          "description": "SMS of the user to be updated (For each operation only pass one of the supported contact identifiers. Email, id or sms)",
                          "example": "+91xxxxxxxxxx"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Pass the set of attributes to be updated. **These attributes must be present in your account**. To update existing email address of a contact with the new one please pass EMAIL in attribtes. For example, **{ \"EMAIL\":\"newemail@domain.com\", \"FNAME\":\"Ellie\", \"LNAME\":\"Roger\"}**.\nKeep in mind transactional attributes can be updated the same way as normal attributes. Mobile Number in **SMS** field should be passed with proper country code. For example: **{\"SMS\":\"+91xxxxxxxxxx\"} or {\"SMS\":\"0091xxxxxxxxxx\"}**\n",
                          "example": {
                            "EMAIL": "newemail@domain.com",
                            "FNAME": "Ellie",
                            "LNAME": "Roger"
                          }
                        },
                        "emailBlacklisted": {
                          "type": "boolean",
                          "description": "Set/unset this field to blacklist/allow the contact for emails (emailBlacklisted = true)",
                          "example": false
                        },
                        "smsBlacklisted": {
                          "type": "boolean",
                          "description": "Set/unset this field to blacklist/allow the contact for SMS (smsBlacklisted = true)",
                          "example": true
                        },
                        "listIds": {
                          "type": "array",
                          "description": "Ids of the lists to add the contact to",
                          "items": {
                            "type": "integer",
                            "description": "Id of the list to add the contact to",
                            "format": "int64",
                            "example": 65
                          }
                        },
                        "unlinkListIds": {
                          "type": "array",
                          "description": "Ids of the lists to remove the contact from",
                          "items": {
                            "type": "integer",
                            "description": "Id of the list to remove the contact from",
                            "format": "int64",
                            "example": 36
                          }
                        },
                        "smtpBlacklistSender": {
                          "type": "array",
                          "description": "transactional email forbidden sender for contact. Use only for email Contact",
                          "items": {
                            "type": "string",
                            "format": "email"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "All contacts updated",
            "content": {}
          },
          "207": {
            "description": "Few contacts updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "successIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "description": "IDs which are successfully updated",
                        "format": "int64"
                      },
                      "example": "1,2"
                    },
                    "failureIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "description": "IDs which are not updated",
                        "format": "int64"
                      },
                      "example": "3,4"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{identifier}/campaignStats": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get email campaigns' statistics for a contact",
        "operationId": "getContactStats",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Email (urlencoded) OR ID of the contact",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be lower than equal to endDate\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be greater than equal to startDate. Maximum difference between startDate and endDate should not be greater than 90 days\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact campaign statistics informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messagesSent": {
                      "type": "array",
                      "items": {
                        "required": [
                          "campaignId",
                          "eventTime"
                        ],
                        "type": "object",
                        "properties": {
                          "campaignId": {
                            "type": "integer",
                            "description": "ID of the campaign which generated the event",
                            "format": "int64",
                            "example": 3
                          },
                          "eventTime": {
                            "type": "string",
                            "description": "UTC date-time of the event",
                            "example": "2017-03-12T20:15:13Z"
                          }
                        }
                      }
                    },
                    "hardBounces": {
                      "type": "array",
                      "items": {
                        "required": [
                          "campaignId",
                          "eventTime"
                        ],
                        "type": "object",
                        "properties": {
                          "campaignId": {
                            "type": "integer",
                            "description": "ID of the campaign which generated the event",
                            "format": "int64",
                            "example": 3
                          },
                          "eventTime": {
                            "type": "string",
                            "description": "UTC date-time of the event",
                            "example": "2017-03-12T20:15:13Z"
                          }
                        }
                      }
                    },
                    "softBounces": {
                      "type": "array",
                      "items": {
                        "required": [
                          "campaignId",
                          "eventTime"
                        ],
                        "type": "object",
                        "properties": {
                          "campaignId": {
                            "type": "integer",
                            "description": "ID of the campaign which generated the event",
                            "format": "int64",
                            "example": 3
                          },
                          "eventTime": {
                            "type": "string",
                            "description": "UTC date-time of the event",
                            "example": "2017-03-12T20:15:13Z"
                          }
                        }
                      }
                    },
                    "complaints": {
                      "type": "array",
                      "items": {
                        "required": [
                          "campaignId",
                          "eventTime"
                        ],
                        "type": "object",
                        "properties": {
                          "campaignId": {
                            "type": "integer",
                            "description": "ID of the campaign which generated the event",
                            "format": "int64",
                            "example": 3
                          },
                          "eventTime": {
                            "type": "string",
                            "description": "UTC date-time of the event",
                            "example": "2017-03-12T20:15:13Z"
                          }
                        }
                      }
                    },
                    "unsubscriptions": {
                      "required": [
                        "adminUnsubscription",
                        "userUnsubscription"
                      ],
                      "type": "object",
                      "properties": {
                        "userUnsubscription": {
                          "type": "array",
                          "description": "Contact has unsubscribed via the unsubscription link in the email",
                          "items": {
                            "required": [
                              "campaignId",
                              "eventTime"
                            ],
                            "type": "object",
                            "properties": {
                              "campaignId": {
                                "type": "integer",
                                "description": "ID of the campaign which generated the event",
                                "format": "int64",
                                "example": 3
                              },
                              "eventTime": {
                                "type": "string",
                                "description": "UTC date-time of the event",
                                "example": "2017-03-12T20:15:13Z"
                              },
                              "ip": {
                                "type": "string",
                                "description": "IP from which the user has unsubscribed",
                                "example": "165.87.3.15"
                              }
                            }
                          }
                        },
                        "adminUnsubscription": {
                          "type": "array",
                          "description": "Contact has been unsubscribed from the administrator",
                          "items": {
                            "required": [
                              "eventTime"
                            ],
                            "type": "object",
                            "properties": {
                              "eventTime": {
                                "type": "string",
                                "description": "UTC date-time of the event",
                                "example": "2017-03-12T20:15:13Z"
                              },
                              "ip": {
                                "type": "string",
                                "description": "IP from which the user has been unsubscribed",
                                "example": "165.87.3.15"
                              }
                            }
                          }
                        }
                      }
                    },
                    "opened": {
                      "type": "array",
                      "items": {
                        "required": [
                          "campaignId",
                          "count",
                          "eventTime",
                          "ip"
                        ],
                        "type": "object",
                        "properties": {
                          "campaignId": {
                            "type": "integer",
                            "description": "ID of the campaign which generated the event",
                            "format": "int64",
                            "example": 3
                          },
                          "count": {
                            "type": "integer",
                            "description": "Number of openings of the campaign",
                            "format": "int64",
                            "example": 3
                          },
                          "eventTime": {
                            "type": "string",
                            "description": "UTC date-time of the event",
                            "example": "2017-03-12T20:15:13Z"
                          },
                          "ip": {
                            "type": "string",
                            "description": "IP from which the user has opened the campaign",
                            "example": "165.87.3.15"
                          }
                        }
                      }
                    },
                    "clicked": {
                      "type": "array",
                      "items": {
                        "required": [
                          "campaignId",
                          "links"
                        ],
                        "type": "object",
                        "properties": {
                          "campaignId": {
                            "type": "integer",
                            "description": "ID of the campaign which generated the event",
                            "format": "int64",
                            "example": 3
                          },
                          "links": {
                            "type": "array",
                            "items": {
                              "required": [
                                "count",
                                "eventTime",
                                "ip",
                                "url"
                              ],
                              "type": "object",
                              "properties": {
                                "count": {
                                  "type": "integer",
                                  "description": "Number of clicks on this link for the campaign",
                                  "format": "int64",
                                  "example": 1
                                },
                                "eventTime": {
                                  "type": "string",
                                  "description": "UTC date-time of the event",
                                  "example": "2017-03-12T20:15:13Z"
                                },
                                "ip": {
                                  "type": "string",
                                  "description": "IP from which the user has clicked on the link",
                                  "example": "165.87.3.15"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "URL of the clicked link",
                                  "example": "www.myshop.com"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "transacAttributes": {
                      "type": "array",
                      "items": {
                        "required": [
                          "orderDate",
                          "orderId",
                          "orderPrice"
                        ],
                        "type": "object",
                        "properties": {
                          "orderDate": {
                            "type": "string",
                            "description": "Date of the order",
                            "format": "date",
                            "example": "2017-03-12"
                          },
                          "orderPrice": {
                            "type": "number",
                            "description": "Price of the order",
                            "format": "float",
                            "example": 24.99
                          },
                          "orderId": {
                            "type": "integer",
                            "description": "ID of the order",
                            "format": "int64",
                            "example": 248
                          }
                        }
                      }
                    },
                    "delivered": {
                      "type": "array",
                      "items": {
                        "required": [
                          "campaignId",
                          "eventTime"
                        ],
                        "type": "object",
                        "properties": {
                          "campaignId": {
                            "type": "integer",
                            "description": "ID of the campaign which generated the event",
                            "format": "int64",
                            "example": 3
                          },
                          "eventTime": {
                            "type": "string",
                            "description": "UTC date-time of the event",
                            "example": "2017-03-12T20:15:13Z"
                          }
                        }
                      }
                    }
                  },
                  "description": "Campaign Statistics for the contact"
                },
                "examples": {
                  "response": {
                    "value": {
                      "from": "sendermail@example.com",
                      "tags": [
                        "tag1",
                        "tag2"
                      ],
                      "messagesSent": [
                        {
                          "campaignId": 21,
                          "eventTime": "2016-05-03T20:15:13Z"
                        },
                        {
                          "campaignId": 42,
                          "eventTime": "2016-10-17T10:30:01Z"
                        },
                        {
                          "campaignId": 45,
                          "eventTime": "2016-11-09T11:45:02Z"
                        }
                      ],
                      "opened": [
                        {
                          "campaignId": 21,
                          "count": 2,
                          "eventTime": "2016-05-03T21:24:56Z",
                          "ip": "66.249.93.118"
                        },
                        {
                          "campaignId": 45,
                          "count": 1,
                          "eventTime": "2017-01-30T13:56:40Z",
                          "ip": "66.249.93.217"
                        }
                      ],
                      "clicked": [
                        {
                          "campaignId": 21,
                          "links": [
                            {
                              "count": 2,
                              "eventTime": "2016-05-03T21:25:01Z",
                              "ip": "66.249.93.118",
                              "url": "https://url.domain.com/fbe5387ec717e333628380454f68670010b205ff/1/go?uid={EMAIL}&utm_source=sendinblue&utm_campaign=test_camp&utm_medium=email"
                            }
                          ]
                        }
                      ],
                      "delivered": [
                        {
                          "campaignId": 21,
                          "count": 2,
                          "eventTime": "2016-05-03T21:24:56Z",
                          "ip": "66.249.93.118"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact's email not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/attributes": {
      "get": {
        "tags": [
          "Contacts",
          "Attributes"
        ],
        "summary": "List all attributes",
        "operationId": "getAttributes",
        "responses": {
          "200": {
            "description": "Attributes listed",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "attributes"
                  ],
                  "type": "object",
                  "properties": {
                    "attributes": {
                      "type": "array",
                      "description": "Listing of available contact attributes in your account",
                      "items": {
                        "required": [
                          "category",
                          "name"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the attribute",
                            "example": "LASTNAME"
                          },
                          "category": {
                            "type": "string",
                            "description": "Category of the attribute",
                            "example": "category",
                            "enum": [
                              "normal",
                              "transactional",
                              "category",
                              "calculated",
                              "global"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the attribute",
                            "example": "text",
                            "enum": [
                              "text",
                              "date",
                              "float",
                              "id",
                              "boolean"
                            ]
                          },
                          "enumeration": {
                            "type": "array",
                            "description": "Parameter only available for \"category\" type attributes.",
                            "items": {
                              "required": [
                                "label",
                                "value"
                              ],
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "integer",
                                  "description": "ID of Value of the \"category\" type attribute",
                                  "format": "int64",
                                  "example": 1
                                },
                                "label": {
                                  "type": "string",
                                  "description": "Label of the \"category\" type attribute",
                                  "example": "Women"
                                }
                              }
                            }
                          },
                          "calculatedValue": {
                            "type": "string",
                            "description": "Calculated value formula",
                            "example": "COUNT[ORDER_ID,ORDER_DATE,==,NOW(-1)]"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "attributes": [
                        {
                          "name": "LASTNAME",
                          "category": "normal",
                          "type": "text"
                        },
                        {
                          "name": "FIRSTNAME",
                          "category": "normal",
                          "type": "text"
                        },
                        {
                          "name": "DOB",
                          "category": "normal",
                          "type": "date"
                        },
                        {
                          "name": "GENDER",
                          "category": "category",
                          "type": "text",
                          "enumeration": [
                            {
                              "value": 1,
                              "label": "Men"
                            },
                            {
                              "value": 2,
                              "label": "Women"
                            },
                            {
                              "value": 3,
                              "label": "Kid"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/attributes/{attributeCategory}/{attributeName}": {
      "put": {
        "tags": [
          "Contacts",
          "Attributes"
        ],
        "summary": "Update contact attribute",
        "operationId": "updateAttribute",
        "parameters": [
          {
            "name": "attributeCategory",
            "in": "path",
            "description": "Category of the attribute",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "category",
                "calculated",
                "global"
              ]
            }
          },
          {
            "name": "attributeName",
            "in": "path",
            "description": "Name of the existing attribute",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Values to update an attribute",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute to update. **Use only if the attribute's category is 'calculated' or 'global'**\n",
                    "example": "COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]"
                  },
                  "enumeration": {
                    "type": "array",
                    "description": "List of the values and labels that the attribute can take. **Use only if the attribute's category is \"category\"**. For example,\n**[{\"value\":1, \"label\":\"male\"}, {\"value\":2, \"label\":\"female\"}]**\n",
                    "items": {
                      "required": [
                        "label",
                        "value"
                      ],
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "description": "Id of the value",
                          "example": 1
                        },
                        "label": {
                          "type": "string",
                          "description": "Label of the value",
                          "example": "Men"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Attribute updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Attribute not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "updateAttribute"
      },
      "post": {
        "tags": [
          "Contacts",
          "Attributes"
        ],
        "summary": "Create contact attribute",
        "operationId": "createAttribute",
        "parameters": [
          {
            "name": "attributeCategory",
            "in": "path",
            "description": "Category of the attribute",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "normal",
                "transactional",
                "category",
                "calculated",
                "global"
              ]
            }
          },
          {
            "name": "attributeName",
            "in": "path",
            "description": "Name of the attribute",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Values to create an attribute",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute. **Use only if the attribute's category is 'calculated' or 'global'**\n",
                    "example": "COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]"
                  },
                  "enumeration": {
                    "type": "array",
                    "description": "List of values and labels that the attribute can take. **Use only if the attribute's category is \"category\"**. For example:\n**[{\"value\":1, \"label\":\"male\"}, {\"value\":2, \"label\":\"female\"}]**\n",
                    "items": {
                      "required": [
                        "label",
                        "value"
                      ],
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "description": "Id of the value",
                          "example": 1
                        },
                        "label": {
                          "type": "string",
                          "description": "Label of the value",
                          "example": "Women"
                        }
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the attribute. **Use only if the attribute's category is 'normal', 'category' or 'transactional'**\nType **boolean** is only available if the category is **normal** attribute\nType **id** is only available if the category is **transactional** attribute\nType **category** is only available if the category is **category** attribute\n",
                    "example": "text",
                    "enum": [
                      "text",
                      "date",
                      "float",
                      "boolean",
                      "id",
                      "category"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Attribute created",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts",
          "Attributes"
        ],
        "summary": "Delete an attribute",
        "operationId": "deleteAttribute",
        "parameters": [
          {
            "name": "attributeCategory",
            "in": "path",
            "description": "Category of the attribute",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "normal",
                "transactional",
                "category",
                "calculated",
                "global"
              ]
            }
          },
          {
            "name": "attributeName",
            "in": "path",
            "description": "Name of the existing attribute",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Attribute deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Attribute not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/folders": {
      "get": {
        "tags": [
          "Contacts",
          "Folders"
        ],
        "summary": "Get all folders",
        "operationId": "getFolders",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents per page",
            "required": true,
            "schema": {
              "maximum": 50,
              "type": "integer",
              "format": "int64",
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document of the page",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folders informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "required": [
                              "id",
                              "name",
                              "totalBlacklisted",
                              "totalSubscribers",
                              "uniqueSubscribers"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of the folder",
                                "format": "int64",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the folder",
                                "example": "Magento Customers"
                              },
                              "totalBlacklisted": {
                                "type": "integer",
                                "description": "Number of blacklisted contacts in the folder",
                                "format": "int64",
                                "example": 32
                              },
                              "totalSubscribers": {
                                "type": "integer",
                                "description": "Number of contacts in the folder",
                                "format": "int64",
                                "example": 19777
                              },
                              "uniqueSubscribers": {
                                "type": "integer",
                                "description": "Number of unique contacts in the folder",
                                "format": "int64",
                                "example": 16222
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of folders available in your account",
                      "format": "int64",
                      "example": 10
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "folders": [
                        {
                          "id": 42,
                          "name": "Ninja_Form",
                          "totalBlacklisted": 98,
                          "totalSubscribers": 4567,
                          "uniqueSubscribers": 4665
                        },
                        {
                          "id": 29,
                          "name": "Prestashop",
                          "totalBlacklisted": 10,
                          "totalSubscribers": 6543,
                          "uniqueSubscribers": 6553
                        }
                      ],
                      "count": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts",
          "Folders"
        ],
        "summary": "Create a folder",
        "operationId": "createFolder",
        "requestBody": {
          "description": "Name of the folder",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the folder",
                    "example": "Wordpress Contacts"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the object created",
                      "format": "int64",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "createFolder"
      }
    },
    "/contacts/folders/{folderId}": {
      "get": {
        "tags": [
          "Contacts",
          "Folders"
        ],
        "summary": "Returns a folder's details",
        "operationId": "getFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "id of the folder",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder details",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id",
                    "name",
                    "totalBlacklisted",
                    "totalSubscribers",
                    "uniqueSubscribers"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the folder",
                      "format": "int64",
                      "example": 2
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the folder",
                      "example": "Magento Customers"
                    },
                    "totalBlacklisted": {
                      "type": "integer",
                      "description": "Number of blacklisted contacts in the folder",
                      "format": "int64",
                      "example": 32
                    },
                    "totalSubscribers": {
                      "type": "integer",
                      "description": "Number of contacts in the folder",
                      "format": "int64",
                      "example": 19777
                    },
                    "uniqueSubscribers": {
                      "type": "integer",
                      "description": "Number of unique contacts in the folder",
                      "format": "int64",
                      "example": 16222
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 1,
                      "name": "Client_Folder",
                      "totalBlacklisted": 987,
                      "totalSubscribers": 16778,
                      "uniqueSubscribers": 17765
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Folder ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contacts",
          "Folders"
        ],
        "summary": "Update a folder",
        "operationId": "updateFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Id of the folder",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Name of the folder",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the folder",
                    "example": "Wordpress Contacts"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Folder updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Folder ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "updateFolder"
      },
      "delete": {
        "tags": [
          "Contacts",
          "Folders"
        ],
        "summary": "Delete a folder (and all its lists)",
        "operationId": "deleteFolder",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Id of the folder",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Folder deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Folder ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/folders/{folderId}/lists": {
      "get": {
        "tags": [
          "Contacts",
          "Folders",
          "Lists"
        ],
        "summary": "Get lists in a folder",
        "operationId": "getFolderLists",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "Id of the folder",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents per page",
            "schema": {
              "maximum": 50,
              "type": "integer",
              "format": "int64",
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document of the page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder's Lists details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lists": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "required": [
                              "id",
                              "name",
                              "totalBlacklisted",
                              "totalSubscribers",
                              "uniqueSubscribers"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of the list",
                                "format": "int64",
                                "example": 23
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the list",
                                "example": "Magento Customers - EN"
                              },
                              "totalBlacklisted": {
                                "type": "integer",
                                "description": "Number of blacklisted contacts in the list",
                                "format": "int64",
                                "example": 13
                              },
                              "totalSubscribers": {
                                "type": "integer",
                                "description": "Number of contacts in the list",
                                "format": "int64",
                                "example": 1776
                              },
                              "uniqueSubscribers": {
                                "type": "integer",
                                "description": "Number of unique contacts in the list",
                                "format": "int64",
                                "example": 1789
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of lists in the folder",
                      "format": "int64",
                      "example": 6
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "lists": [
                        {
                          "id": 46,
                          "name": "Reactiv",
                          "totalSubscribers": 7655,
                          "totalBlacklisted": 0,
                          "uniqueSubscribers": 7655
                        },
                        {
                          "id": 41,
                          "name": "NY_Area",
                          "totalSubscribers": 3654,
                          "totalBlacklisted": 23,
                          "uniqueSubscribers": 3677
                        },
                        {
                          "id": 22,
                          "name": "VIP_Customer",
                          "totalSubscribers": 8753,
                          "totalBlacklisted": 72,
                          "uniqueSubscribers": 8825
                        }
                      ],
                      "count": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Folder ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/lists": {
      "get": {
        "tags": [
          "Contacts",
          "Lists"
        ],
        "summary": "Get all the lists",
        "operationId": "getLists",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents per page",
            "schema": {
              "maximum": 50,
              "type": "integer",
              "format": "int64",
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document of the page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lists informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lists": {
                      "type": "array",
                      "description": "Listing of all the lists available in your account",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "required": [
                              "id",
                              "name",
                              "totalBlacklisted",
                              "totalSubscribers",
                              "uniqueSubscribers"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of the list",
                                "format": "int64",
                                "example": 23
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the list",
                                "example": "Magento Customers - EN"
                              },
                              "totalBlacklisted": {
                                "type": "integer",
                                "description": "Number of blacklisted contacts in the list",
                                "format": "int64",
                                "example": 13
                              },
                              "totalSubscribers": {
                                "type": "integer",
                                "description": "Number of contacts in the list",
                                "format": "int64",
                                "example": 1776
                              },
                              "uniqueSubscribers": {
                                "type": "integer",
                                "description": "Number of unique contacts in the list",
                                "format": "int64",
                                "example": 1789
                              }
                            }
                          },
                          {
                            "required": [
                              "folderId"
                            ],
                            "type": "object",
                            "properties": {
                              "folderId": {
                                "type": "integer",
                                "description": "ID of the folder",
                                "format": "int64",
                                "example": 2
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of lists in your account",
                      "format": "int64",
                      "example": 150
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "lists": [
                        {
                          "id": 53,
                          "name": "Spanish_Speakers",
                          "totalSubscribers": 5432,
                          "totalBlacklisted": 65,
                          "uniqueSubscribers": 5497,
                          "folderId": 1
                        },
                        {
                          "id": 50,
                          "name": "Other",
                          "totalSubscribers": 10976,
                          "totalBlacklisted": 765,
                          "uniqueSubscribers": 11741,
                          "folderId": 2
                        }
                      ],
                      "count": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts",
          "Lists"
        ],
        "summary": "Create a list",
        "operationId": "createList",
        "requestBody": {
          "description": "Values to create a list",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "folderId",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the list",
                    "example": "Magento Customer - ES"
                  },
                  "folderId": {
                    "type": "integer",
                    "description": "Id of the parent folder in which this list is to be created",
                    "format": "int64",
                    "example": 2
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the object created",
                      "format": "int64",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/lists/{listId}": {
      "get": {
        "tags": [
          "Contacts",
          "Lists"
        ],
        "summary": "Get a list's details",
        "operationId": "getList",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "description": "Id of the list",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List informations",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "id",
                        "name",
                        "totalBlacklisted",
                        "totalSubscribers",
                        "uniqueSubscribers"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of the list",
                          "format": "int64",
                          "example": 23
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the list",
                          "example": "Magento Customers - EN"
                        },
                        "totalBlacklisted": {
                          "type": "integer",
                          "description": "Number of blacklisted contacts in the list",
                          "format": "int64",
                          "example": 13
                        },
                        "totalSubscribers": {
                          "type": "integer",
                          "description": "Number of contacts in the list",
                          "format": "int64",
                          "example": 1776
                        },
                        "uniqueSubscribers": {
                          "type": "integer",
                          "description": "Number of unique contacts in the list",
                          "format": "int64",
                          "example": 1789
                        }
                      }
                    },
                    {
                      "required": [
                        "createdAt",
                        "folderId"
                      ],
                      "type": "object",
                      "properties": {
                        "folderId": {
                          "type": "integer",
                          "description": "ID of the folder",
                          "format": "int64",
                          "example": 2
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "Creation UTC date-time of the list (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                          "example": "2017-03-13T17:05:09Z"
                        },
                        "campaignStats": {
                          "type": "array",
                          "items": {
                            "required": [
                              "campaignId",
                              "stats"
                            ],
                            "type": "object",
                            "properties": {
                              "campaignId": {
                                "type": "integer",
                                "description": "ID of the campaign",
                                "format": "int64",
                                "example": 143
                              },
                              "stats": {
                                "required": [
                                  "clickers",
                                  "complaints",
                                  "delivered",
                                  "hardBounces",
                                  "sent",
                                  "softBounces",
                                  "uniqueClicks",
                                  "uniqueViews",
                                  "unsubscriptions",
                                  "viewed",
                                  "trackableViews"
                                ],
                                "type": "object",
                                "properties": {
                                  "listId": {
                                    "type": "integer",
                                    "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                    "format": "int64",
                                    "example": 2
                                  },
                                  "uniqueClicks": {
                                    "type": "integer",
                                    "description": "Number of unique clicks for the campaign",
                                    "format": "int64",
                                    "example": 2300
                                  },
                                  "clickers": {
                                    "type": "integer",
                                    "description": "Number of total clicks for the campaign",
                                    "format": "int64",
                                    "example": 2665
                                  },
                                  "complaints": {
                                    "type": "integer",
                                    "description": "Number of complaints (Spam reports) for the campaign",
                                    "format": "int64",
                                    "example": 1
                                  },
                                  "delivered": {
                                    "type": "integer",
                                    "description": "Number of delivered emails for the campaign",
                                    "format": "int64",
                                    "example": 19765
                                  },
                                  "sent": {
                                    "type": "integer",
                                    "description": "Number of sent emails for the campaign",
                                    "format": "int64",
                                    "example": 19887
                                  },
                                  "softBounces": {
                                    "type": "integer",
                                    "description": "Number of softbounce for the campaign",
                                    "format": "int64",
                                    "example": 100
                                  },
                                  "hardBounces": {
                                    "type": "integer",
                                    "description": "Number of harbounce for the campaign",
                                    "format": "int64",
                                    "example": 87
                                  },
                                  "uniqueViews": {
                                    "type": "integer",
                                    "description": "Number of unique openings for the campaign",
                                    "format": "int64",
                                    "example": 7779
                                  },
                                  "trackableViews": {
                                    "type": "integer",
                                    "description": "Recipients without any privacy protection option enabled in their email client",
                                    "format": "int64",
                                    "example": 5661
                                  },
                                  "unsubscriptions": {
                                    "type": "integer",
                                    "description": "Number of unsubscription for the campaign",
                                    "format": "int64",
                                    "example": 2
                                  },
                                  "viewed": {
                                    "type": "integer",
                                    "description": "Number of openings for the campaign",
                                    "format": "int64",
                                    "example": 8999
                                  },
                                  "deferred": {
                                    "type": "integer",
                                    "description": "Number of deferred emails for the campaign",
                                    "format": "int64",
                                    "example": 30
                                  },
                                  "returnBounce": {
                                    "type": "integer",
                                    "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                    "format": "int64",
                                    "example": 5
                                  }
                                }
                              }
                            }
                          }
                        },
                        "dynamicList": {
                          "type": "boolean",
                          "description": "Status telling if the list is dynamic or not (true=dynamic, false=not dynamic)",
                          "example": false
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 12,
                      "name": "Newsletter_Weekly",
                      "totalSubscribers": 6533,
                      "totalBlacklisted": 63,
                      "uniqueSubscribers": 6596,
                      "folderId": 1,
                      "createdAt": "2016-02-26T11:56:08Z",
                      "campaignStats": [
                        {
                          "campaignId": 15,
                          "stats": {
                            "uniqueClicks": 701,
                            "clickers": 789,
                            "complaints": 0,
                            "delivered": 6632,
                            "sent": 6645,
                            "softBounces": 34,
                            "hardBounces": 4,
                            "uniqueViews": 3442,
                            "unsubscriptions": 4,
                            "viewed": 4322,
                            "deferred": 0
                          }
                        },
                        {
                          "campaignId": 45,
                          "stats": {
                            "uniqueClicks": 654,
                            "clickers": 788,
                            "complaints": 1,
                            "delivered": 4078,
                            "sent": 4334,
                            "softBounces": 18,
                            "hardBounces": 2,
                            "uniqueViews": 987,
                            "unsubscriptions": 4,
                            "viewed": 1555,
                            "deferred": 0
                          }
                        }
                      ],
                      "dynamicList": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "List ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contacts",
          "Lists"
        ],
        "summary": "Update a list",
        "operationId": "updateList",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "description": "Id of the list",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Values to update a list",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the list. Either of the two parameters (name, folderId) can be updated at a time.",
                    "example": "Magento Customer - ES"
                  },
                  "folderId": {
                    "type": "integer",
                    "description": "Id of the folder in which the list is to be moved. Either of the two parameters (name, folderId) can be updated at a time.",
                    "format": "int64",
                    "example": 2
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "List updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "List ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts",
          "Lists"
        ],
        "summary": "Delete a list",
        "operationId": "deleteList",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "description": "Id of the list",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "List deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "List ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/lists/{listId}/contacts": {
      "get": {
        "tags": [
          "Contacts",
          "Lists"
        ],
        "summary": "Get contacts in a list",
        "operationId": "getContactsFromList",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "description": "Id of the list",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "modifiedSince",
            "in": "query",
            "description": "Filter (urlencoded) the contacts modified after a given UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents per page",
            "schema": {
              "maximum": 500,
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document of the page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact informations",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contacts",
                    "count"
                  ],
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "required": [
                              "attributes",
                              "createdAt",
                              "email",
                              "emailBlacklisted",
                              "id",
                              "listIds",
                              "modifiedAt",
                              "smsBlacklisted"
                            ],
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "Email address of the contact for which you requested the details",
                                "format": "email",
                                "example": "john.smith@example.com"
                              },
                              "id": {
                                "type": "integer",
                                "description": "ID of the contact for which you requested the details",
                                "format": "int64",
                                "example": 32
                              },
                              "emailBlacklisted": {
                                "type": "boolean",
                                "description": "Blacklist status for email campaigns (true=blacklisted, false=not blacklisted)",
                                "example": false
                              },
                              "smsBlacklisted": {
                                "type": "boolean",
                                "description": "Blacklist status for SMS campaigns (true=blacklisted, false=not blacklisted)",
                                "example": true
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "Creation UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                                "example": "2017-05-12T12:30:00Z"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "description": "Last modification UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                                "example": "2017-05-12T12:30:00Z"
                              },
                              "listIds": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "description": "List(s) in which the contact is included",
                                  "format": "int64"
                                }
                              },
                              "listUnsubscribed": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "description": "List(s) in which the contact is included (only available if unsubscription per list is activated for the account)",
                                  "format": "int64"
                                }
                              },
                              "attributes": {
                                "type": "object",
                                "properties": {},
                                "description": "Set of attributes of the contact",
                                "example": {
                                  "name": "Joe",
                                  "email": "joe@example.com"
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of contacts",
                      "format": "int64",
                      "example": 17655
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "contacts": [
                        {
                          "email": "alex.pain@example.com",
                          "id": 45,
                          "emailBlacklisted": false,
                          "smsBlacklisted": true,
                          "createdAt": "2017-05-12T12:30:00Z",
                          "modifiedAt": "2017-05-12T12:30:00Z",
                          "listIds": [
                            12,
                            9,
                            20
                          ],
                          "listUnsubscribed": [
                            1,
                            2
                          ],
                          "attributes": {
                            "LASTNAME": "Pain",
                            "FIRSTNAME": "Alex",
                            "DOB": "2010-12-31",
                            "GENDER": "Kid"
                          }
                        },
                        {
                          "email": "john.smith@example.com",
                          "id": 32,
                          "emailBlacklisted": true,
                          "smsBlacklisted": false,
                          "createdAt": "2017-05-12T12:30:00Z",
                          "modifiedAt": "2017-05-12T12:30:00Z",
                          "listIds": [
                            12
                          ],
                          "listUnsubscribed": [
                            1
                          ],
                          "attributes": {
                            "LASTNAME": "Smith",
                            "FIRSTNAME": "John",
                            "DOB": "1986-06-21",
                            "GENDER": "Men"
                          }
                        },
                        {
                          "email": "helen.rose@example.com",
                          "id": 65,
                          "emailBlacklisted": true,
                          "smsBlacklisted": false,
                          "createdAt": "2017-05-12T12:30:00Z",
                          "modifiedAt": "2017-05-12T12:30:00Z",
                          "listIds": [
                            12,
                            9,
                            20
                          ],
                          "listUnsubscribed": [
                            1
                          ],
                          "attributes": {
                            "LASTNAME": "Rose",
                            "FIRSTNAME": "Helen",
                            "DOB": "1988-11-02",
                            "GENDER": "Women",
                            "SMS": "3375599887766"
                          }
                        }
                      ],
                      "count": 17655
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "List ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/lists/{listId}/contacts/add": {
      "post": {
        "tags": [
          "Contacts",
          "Lists"
        ],
        "summary": "Add existing contacts to a list",
        "operationId": "addContactToList",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "description": "Id of the list",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Emails addresses OR IDs of the contacts",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "emails": {
                        "maxItems": 150,
                        "minItems": 1,
                        "type": "array",
                        "description": "Emails to add to a list. You can pass a **maximum of 150 emails** for addition in one request. **_If you need to add the emails in bulk, please prefer /contacts/import api._**\n",
                        "items": {
                          "type": "string",
                          "description": "Email to add to a list",
                          "format": "email",
                          "example": "john.smith@contact.com"
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "ids": {
                        "maxItems": 150,
                        "minItems": 1,
                        "type": "array",
                        "description": "IDs to add to a list. You can pass a **maximum of 150 IDs** for addition in one request. **_If you need to add the emails in bulk, please prefer /contacts/import api._**\n",
                        "items": {
                          "type": "integer",
                          "description": "ID to add to a list",
                          "format": "int64",
                          "example": 10
                        }
                      }
                    }
                  }
                ]
              },
              "examples": {
                "emailsArray": {
                  "summary": "Passing emails array",
                  "value": {
                    "emails": [
                      "jeff32@example.com",
                      "jim56@example.com"
                    ]
                  }
                },
                "idsArray": {
                  "summary": "Passing ids array",
                  "value": {
                    "ids": [
                      1,
                      2
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "All contacts have been added successfully to the list with details of failed ones",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contacts"
                  ],
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "oneOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Email addresses which are successfully imported/removed",
                                "format": "email"
                              },
                              "example": "jeff32@example.com, jim56@example.com"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "description": "IDs which are successfully imported/removed",
                                "format": "int64"
                              },
                              "example": "1, 2"
                            }
                          ]
                        },
                        "failure": {
                          "oneOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Email addresses which can not be imported/removed, could be already in/out list and/or doesn't exist",
                                "format": "email",
                                "example": "jeff32@example.com, jim56@example.com"
                              }
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "description": "IDs which can not be imported/removed, could be already in/out list and/or doesn't exist",
                                "format": "int64",
                                "example": "5, 6"
                              }
                            }
                          ]
                        },
                        "total": {
                          "type": "integer",
                          "description": "Displays the count of total number of contacts removed from list when user opts for \"all\" option.",
                          "format": "int64",
                          "example": 27
                        },
                        "processId": {
                          "type": "integer",
                          "description": "Id of the process created to remove contacts from list when user opts for \"all\" option.",
                          "format": "int64",
                          "example": 78
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "emailsArray": {
                    "summary": "Response example when emails array is passed",
                    "value": {
                      "success": [
                        "jeff32@example.com",
                        "jim56@example.com"
                      ],
                      "failure": [
                        "david@example.com"
                      ]
                    }
                  },
                  "idsArray": {
                    "summary": "Response example when ids array is paased",
                    "value": {
                      "success": [
                        1,
                        2
                      ],
                      "failure": [
                        5
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "List ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/lists/{listId}/contacts/remove": {
      "post": {
        "tags": [
          "Contacts",
          "Lists"
        ],
        "summary": "Delete a contact from a list",
        "operationId": "removeContactFromList",
        "parameters": [
          {
            "name": "listId",
            "in": "path",
            "description": "Id of the list",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Emails adresses OR IDs of the contacts OR 'all' true",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "emails": {
                        "maxItems": 150,
                        "minItems": 1,
                        "type": "array",
                        "description": "**Required if 'all' is false and 'ids' is empty.** Emails to remove from a list. You can pass a **maximum of 150 emails** for removal in one request.\n",
                        "items": {
                          "type": "string",
                          "description": "Email to remove from a list",
                          "format": "email",
                          "example": "john.smith@contact.com"
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "ids": {
                        "maxItems": 150,
                        "minItems": 1,
                        "type": "array",
                        "description": "**Required if 'all' is false and 'emails' is empty.** IDs to remove from a list. You can pass a **maximum of 150 IDs** for removal in one request.\n",
                        "items": {
                          "type": "integer",
                          "description": "ID to remove from a list",
                          "format": "int64",
                          "example": 10
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "all": {
                        "type": "boolean",
                        "description": "**Required if 'emails' and 'ids' are empty.** Remove all existing contacts from a list. A process will be created in this scenario. You can fetch the process details to know about the progress\n",
                        "example": true
                      }
                    }
                  }
                ]
              },
              "examples": {
                "emailsArray": {
                  "summary": "Passing emails array",
                  "value": {
                    "emails": [
                      "jeff32@example.com",
                      "jim56@example.com"
                    ]
                  }
                },
                "idsArray": {
                  "summary": "Passing ids array",
                  "value": {
                    "ids": [
                      1,
                      2
                    ]
                  }
                },
                "allTrue": {
                  "summary": "Passing 'all' true",
                  "value": {
                    "all": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "All contacts have been removed successfully from the list with details of failed ones",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "contacts"
                  ],
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "oneOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Email addresses which are successfully imported/removed",
                                "format": "email"
                              },
                              "example": "jeff32@example.com, jim56@example.com"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "description": "IDs which are successfully imported/removed",
                                "format": "int64"
                              },
                              "example": "1, 2"
                            }
                          ]
                        },
                        "failure": {
                          "oneOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Email addresses which can not be imported/removed, could be already in/out list and/or doesn't exist",
                                "format": "email",
                                "example": "jeff32@example.com, jim56@example.com"
                              }
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "description": "IDs which can not be imported/removed, could be already in/out list and/or doesn't exist",
                                "format": "int64",
                                "example": "5, 6"
                              }
                            }
                          ]
                        },
                        "total": {
                          "type": "integer",
                          "description": "Displays the count of total number of contacts removed from list when user opts for \"all\" option.",
                          "format": "int64",
                          "example": 27
                        },
                        "processId": {
                          "type": "integer",
                          "description": "Id of the process created to remove contacts from list when user opts for \"all\" option.",
                          "format": "int64",
                          "example": 78
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "emailsArray": {
                    "summary": "Response example when emails array is passed",
                    "value": {
                      "success": [
                        "jeff32@example.com",
                        "jim56@example.com"
                      ],
                      "failure": [
                        "david@example.com"
                      ]
                    }
                  },
                  "idsArray": {
                    "summary": "Response example when ids array is paased",
                    "value": {
                      "success": [
                        1,
                        2
                      ],
                      "failure": [
                        5
                      ]
                    }
                  },
                  "allTrue": {
                    "summary": "Response example when 'all' is passed as true",
                    "value": {
                      "total": 23,
                      "processId": 5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "List ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "contactEmails"
      }
    },
    "/contacts/export": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Export contacts",
        "description": "It returns the background process ID which on completion calls the notify URL that you have set in the input. File will be available in csv.",
        "operationId": "requestContactExport",
        "requestBody": {
          "description": "Values to request a contact export",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "customContactFilter"
                ],
                "properties": {
                  "exportAttributes": {
                    "type": "array",
                    "description": "List of all the attributes that you want to export. **These attributes must be present in your contact database.** For example:\n**['fname', 'lname', 'email']**\n",
                    "items": {
                      "type": "string",
                      "example": "NAME"
                    }
                  },
                  "customContactFilter": {
                    "type": "object",
                    "properties": {
                      "actionForContacts": {
                        "type": "string",
                        "description": "**Mandatory if neither actionForEmailCampaigns nor actionForSmsCampaigns is passed.** This will export the contacts on the basis of provided action applied on contacts as per the list id.\n* **allContacts** - Fetch the list of all contacts for a particular list.\n* **subscribed & unsubscribed** - Fetch the list of subscribed / unsubscribed (blacklisted via any means) contacts for a particular list. \n* **unsubscribedPerList** - Fetch the list of contacts that are unsubscribed from a particular list only.\n",
                        "enum": [
                          "allContacts",
                          "subscribed",
                          "unsubscribed",
                          "unsubscribedPerList"
                        ]
                      },
                      "actionForEmailCampaigns": {
                        "type": "string",
                        "description": "**Mandatory if neither actionForContacts nor actionForSmsCampaigns is passed.** This will export the contacts on the basis of provided action applied on email campaigns.\n* **openers & nonOpeners** - emailCampaignId is mandatory. Fetch the list of readers / non-readers for a particular email campaign.\n* **clickers & nonClickers** - emailCampaignId is mandatory. Fetch the list of clickers / non-clickers for a particular email campaign.\n* **unsubscribed** - emailCampaignId is mandatory. Fetch the list of all unsubscribed (blacklisted via any means) contacts for a particular email campaign.\n* **hardBounces & softBounces** - emailCampaignId is optional. Fetch the list of hard bounces / soft bounces for a particular / all email campaign(s).\n",
                        "enum": [
                          "openers",
                          "nonOpeners",
                          "clickers",
                          "nonClickers",
                          "unsubscribed",
                          "hardBounces",
                          "softBounces"
                        ]
                      },
                      "actionForSmsCampaigns": {
                        "type": "string",
                        "description": "**Mandatory if neither actionForContacts nor actionForEmailCampaigns is passed.** This will export the contacts on the basis of provided action applied on sms campaigns.\n* **unsubscribed** - Fetch the list of all unsubscribed (blacklisted via any means) contacts for all / particular sms campaigns.\n* **hardBounces & softBounces** - Fetch the list of hard bounces / soft bounces for all / particular sms campaigns.\n",
                        "enum": [
                          "hardBounces",
                          "softBounces",
                          "unsubscribed"
                        ]
                      },
                      "listId": {
                        "type": "integer",
                        "description": "**Mandatory if actionForContacts is passed, ignored otherwise.** Id of the list for which the corresponding action shall be applied in the filter.\n",
                        "format": "int64",
                        "example": 2
                      },
                      "emailCampaignId": {
                        "type": "integer",
                        "description": "Considered only if **actionForEmailCampaigns** is passed, ignored otherwise. **Mandatory if action is one of the following - openers, nonOpeners, clickers, nonClickers, unsubscribed.**\nThe id of the email campaign for which the corresponding action shall be applied in the filter.\n",
                        "format": "int64",
                        "example": 12
                      },
                      "smsCampaignId": {
                        "type": "integer",
                        "description": "Considered only if **actionForSmsCampaigns** is passed, ignored otherwise. The id of sms campaign for which the corresponding action shall be applied in the filter.\n",
                        "format": "int64",
                        "example": 12
                      }
                    },
                    "description": "Set the filter for the contacts to be exported.\n"
                  },
                  "notifyUrl": {
                    "type": "string",
                    "description": "Webhook that will be called once the export process is finished. For reference, https://help.sendinblue.com/hc/en-us/articles/360007666479",
                    "format": "url",
                    "example": "http://requestb.in/173lyyx1"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "process id created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "processId"
                  ],
                  "type": "object",
                  "properties": {
                    "processId": {
                      "type": "integer",
                      "description": "Id of the process created",
                      "format": "int64",
                      "example": 78
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/import": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Import contacts",
        "description": "It returns the background process ID which on completion calls the notify URL that you have set in the input.",
        "operationId": "importContacts",
        "requestBody": {
          "description": "Values to import contacts in Sendinblue. To know more about the expected format, please have a look at ``https://help.sendinblue.com/hc/en-us/articles/209499265-Build-contacts-lists-for-your-email-marketing-campaigns``",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileUrl": {
                    "type": "string",
                    "description": "**Mandatory if fileBody is not defined.** URL of the file to be imported (**no local file**). Possible file formats:\n#### .txt, .csv\n",
                    "format": "url",
                    "example": "https://importfile.domain.com"
                  },
                  "fileBody": {
                    "type": "string",
                    "description": "**Mandatory if fileUrl is not defined.** CSV content to be imported. Use semicolon to separate multiple attributes. **Maximum allowed file body size is 10MB** . However we recommend a safe limit of around 8 MB to avoid the issues caused due to increase of file body size while parsing. Please use fileUrl instead to import bigger files.\n",
                    "example": "NAME;SURNAME;EMAIL\\n\"Smith\";\"John\";\"john.smith@example.com\"\\n\"Roger\";\"Ellie\";\"ellie36@example.com"
                  },
                  "listIds": {
                    "type": "array",
                    "description": "**Mandatory if newList is not defined.** Ids of the lists in which the contacts shall be imported. For example, **[2, 4, 7]**.\n",
                    "items": {
                      "type": "integer",
                      "description": "List Id in which the contacts shall be imported",
                      "format": "int64",
                      "example": 76
                    }
                  },
                  "notifyUrl": {
                    "type": "string",
                    "description": "URL that will be called once the import process is finished. For reference, https://help.sendinblue.com/hc/en-us/articles/360007666479",
                    "format": "url",
                    "example": "http://requestb.in/173lyyx1"
                  },
                  "newList": {
                    "type": "object",
                    "properties": {
                      "listName": {
                        "type": "string",
                        "description": "List with listName will be created first and users will be imported in it. **Mandatory if listIds is empty**.\n",
                        "example": "ContactImport - 2017-05"
                      },
                      "folderId": {
                        "type": "integer",
                        "description": "Id of the folder where this new list shall be created. **Mandatory if listName is not empty**\n",
                        "format": "int64",
                        "example": 2
                      }
                    },
                    "description": "To create a new list and import the contacts into it, pass the listName and an optional folderId."
                  },
                  "emailBlacklist": {
                    "type": "boolean",
                    "description": "To blacklist all the contacts for email",
                    "example": false,
                    "default": false
                  },
                  "smsBlacklist": {
                    "type": "boolean",
                    "description": "To blacklist all the contacts for sms",
                    "example": false,
                    "default": false
                  },
                  "updateExistingContacts": {
                    "type": "boolean",
                    "description": "To facilitate the choice to update the existing contacts",
                    "example": true,
                    "default": true
                  },
                  "emptyContactsAttributes": {
                    "type": "boolean",
                    "description": "To facilitate the choice to erase any attribute of the existing contacts with empty value. emptyContactsAttributes = true means the empty fields in your import will erase any attribute that currently contain data in SendinBlue, & emptyContactsAttributes = false means the empty fields will not affect your existing data ( **only available if `updateExistingContacts` set to true **)\n",
                    "example": true,
                    "default": false
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "process id created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "processId"
                  ],
                  "type": "object",
                  "properties": {
                    "processId": {
                      "type": "integer",
                      "description": "Id of the process created",
                      "format": "int64",
                      "example": 78
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smsCampaigns": {
      "get": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Returns the information for all your created SMS campaigns",
        "operationId": "getSmsCampaigns",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status of campaign.",
            "schema": {
              "type": "string",
              "enum": [
                "suspended",
                "archive",
                "sent",
                "queued",
                "draft",
                "inProcess"
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "**Mandatory if endDate is used.** Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent sms campaigns. **Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "**Mandatory if startDate is used.** Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent sms campaigns. **Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number limitation for the result returned",
            "schema": {
              "maximum": 1000,
              "type": "integer",
              "format": "int64",
              "default": 500
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Beginning point in the list to retrieve from.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SMS campaigns informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "campaigns": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "required": [
                              "content",
                              "createdAt",
                              "id",
                              "modifiedAt",
                              "name",
                              "sender",
                              "status"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of the SMS Campaign",
                                "format": "int64",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the SMS Campaign",
                                "example": "PROMO CODE"
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of the SMS Campaign",
                                "example": "draft",
                                "enum": [
                                  "draft",
                                  "sent",
                                  "archive",
                                  "queued",
                                  "suspended",
                                  "inProcess"
                                ]
                              },
                              "content": {
                                "type": "string",
                                "description": "Content of the SMS Campaign",
                                "example": "Visit our Store and get some discount !"
                              },
                              "scheduledAt": {
                                "type": "string",
                                "description": "UTC date-time on which SMS campaign is scheduled. Should be in YYYY-MM-DDTHH:mm:ss.SSSZ format",
                                "example": "2017-06-01T12:30:00Z"
                              },
                              "sender": {
                                "type": "string",
                                "description": "Sender of the SMS Campaign",
                                "example": "MyCompany"
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "Creation UTC date-time of the SMS campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                                "example": "2017-06-01T12:30:00Z"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "description": "UTC date-time of last modification of the SMS campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                                "example": "2017-05-01T12:30:00Z"
                              }
                            }
                          },
                          {
                            "required": [
                              "recipients",
                              "statistics"
                            ],
                            "type": "object",
                            "properties": {
                              "recipients": {
                                "type": "object",
                                "allOf": [
                                  {
                                    "required": [
                                      "exclusionLists",
                                      "lists"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "lists": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer",
                                          "description": "List IDs included in the campaign",
                                          "format": "int64",
                                          "example": 21
                                        }
                                      },
                                      "exclusionLists": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer",
                                          "description": "List IDs excluded of the campaign",
                                          "format": "int64",
                                          "example": 13
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "statistics": {
                                "type": "object",
                                "allOf": [
                                  {
                                    "required": [
                                      "answered",
                                      "delivered",
                                      "hardBounces",
                                      "processing",
                                      "sent",
                                      "softBounces",
                                      "unsubscriptions"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "delivered": {
                                        "type": "integer",
                                        "description": "Number of delivered SMS",
                                        "format": "int64",
                                        "example": 2987
                                      },
                                      "sent": {
                                        "type": "integer",
                                        "description": "Number of sent SMS",
                                        "format": "int64",
                                        "example": 3000
                                      },
                                      "processing": {
                                        "type": "integer",
                                        "description": "Number of processing SMS",
                                        "format": "int64",
                                        "example": 0
                                      },
                                      "softBounces": {
                                        "type": "integer",
                                        "description": "Number of softbounced SMS",
                                        "format": "int64",
                                        "example": 3
                                      },
                                      "hardBounces": {
                                        "type": "integer",
                                        "description": "Number of hardbounced SMS",
                                        "format": "int64",
                                        "example": 1
                                      },
                                      "unsubscriptions": {
                                        "type": "integer",
                                        "description": "Number of unsubscription SMS",
                                        "format": "int64",
                                        "example": 3
                                      },
                                      "answered": {
                                        "type": "integer",
                                        "description": "Number of replies to the SMS",
                                        "format": "int64",
                                        "example": 2
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of SMS campaigns retrieved",
                      "format": "int64",
                      "example": 12
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "campaigns": [
                        {
                          "id": 2,
                          "name": "PROMO CODE",
                          "status": "sent",
                          "content": "Visit our Store and get some discount !",
                          "scheduledAt": "2017-06-01T12:30:00Z",
                          "testSent": true,
                          "sender": "MyCompany",
                          "createdAt": "2017-06-01T12:30:00Z",
                          "modifiedAt": "2017-05-01T12:30:00Z",
                          "sentDate": "2017-06-01T12:30:00Z",
                          "recipients": {
                            "lists": [
                              21
                            ],
                            "exclusionLists": [
                              13
                            ]
                          },
                          "statistics": {
                            "delivered": 2987,
                            "sent": 3000,
                            "processing": 0,
                            "softBounces": 3,
                            "hardBounces": 1,
                            "unsubscriptions": 3,
                            "answered": 2
                          }
                        },
                        {
                          "id": 10,
                          "name": "SUMMER SALE",
                          "status": "draft",
                          "content": "Summer Sale is starting tomorrow. Get extra 10% with this code:SUM17",
                          "scheduledAt": "2017-08-04T12:30:00Z",
                          "testSent": false,
                          "sender": "MyCompany",
                          "createdAt": "2017-06-01T12:30:00Z",
                          "modifiedAt": "2017-05-01T12:30:00Z",
                          "sentDate": "2017-06-01T12:30:00Z",
                          "recipients": {
                            "lists": [
                              21
                            ],
                            "exclusionLists": [
                              13
                            ]
                          },
                          "statistics": {
                            "delivered": 2987,
                            "sent": 3000,
                            "processing": 0,
                            "softBounces": 3,
                            "hardBounces": 1,
                            "unsubscriptions": 3,
                            "answered": 2
                          }
                        }
                      ],
                      "count": 12
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Creates an SMS campaign",
        "operationId": "createSmsCampaign",
        "requestBody": {
          "description": "Values to create an SMS Campaign",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "content",
                  "name",
                  "sender"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the campaign",
                    "example": "Spring Promo Code"
                  },
                  "sender": {
                    "maxLength": 15,
                    "type": "string",
                    "description": "Name of the sender. **The number of characters is limited to 11 for alphanumeric characters and 15 for numeric characters**\n",
                    "example": "MyShop"
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the message. The **maximum characters used per SMS is 160**, if used more than that, it will be counted as more than one SMS\n",
                    "example": "Get a discount by visiting our NY store and saying : Happy Spring!"
                  },
                  "recipients": {
                    "required": [
                      "listIds"
                    ],
                    "type": "object",
                    "properties": {
                      "listIds": {
                        "type": "array",
                        "description": "Lists Ids to send the campaign to. **REQUIRED if scheduledAt is not empty**\n",
                        "items": {
                          "type": "integer",
                          "description": "List Id to send the campaign to",
                          "format": "int64",
                          "example": 54
                        }
                      },
                      "exclusionListIds": {
                        "type": "array",
                        "description": "List ids which have to be excluded from a campaign",
                        "items": {
                          "type": "integer",
                          "description": "List Id to exclude from the campaign",
                          "format": "int64",
                          "example": 15
                        }
                      }
                    }
                  },
                  "scheduledAt": {
                    "type": "string",
                    "description": "UTC date-time on which the campaign has to run (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
                    "example": "2017-05-05T12:30:00+02:00"
                  },
                  "unicodeEnabled": {
                    "type": "boolean",
                    "description": "Format of the message. It indicates whether the content should be treated as unicode or not.\n",
                    "example": true,
                    "default": false
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the object created",
                      "format": "int64",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smsCampaigns/{campaignId}": {
      "get": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Get an SMS campaign",
        "operationId": "getSmsCampaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "id of the SMS campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SMS campaign informations",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "content",
                        "createdAt",
                        "id",
                        "modifiedAt",
                        "name",
                        "sender",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of the SMS Campaign",
                          "format": "int64",
                          "example": 2
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the SMS Campaign",
                          "example": "PROMO CODE"
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the SMS Campaign",
                          "example": "draft",
                          "enum": [
                            "draft",
                            "sent",
                            "archive",
                            "queued",
                            "suspended",
                            "inProcess"
                          ]
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the SMS Campaign",
                          "example": "Visit our Store and get some discount !"
                        },
                        "scheduledAt": {
                          "type": "string",
                          "description": "UTC date-time on which SMS campaign is scheduled. Should be in YYYY-MM-DDTHH:mm:ss.SSSZ format",
                          "example": "2017-06-01T12:30:00Z"
                        },
                        "sender": {
                          "type": "string",
                          "description": "Sender of the SMS Campaign",
                          "example": "MyCompany"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "Creation UTC date-time of the SMS campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                          "example": "2017-06-01T12:30:00Z"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "description": "UTC date-time of last modification of the SMS campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                          "example": "2017-05-01T12:30:00Z"
                        }
                      }
                    },
                    {
                      "required": [
                        "recipients",
                        "statistics"
                      ],
                      "type": "object",
                      "properties": {
                        "recipients": {
                          "type": "object",
                          "allOf": [
                            {
                              "required": [
                                "exclusionLists",
                                "lists"
                              ],
                              "type": "object",
                              "properties": {
                                "lists": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "description": "List IDs included in the campaign",
                                    "format": "int64",
                                    "example": 21
                                  }
                                },
                                "exclusionLists": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "description": "List IDs excluded of the campaign",
                                    "format": "int64",
                                    "example": 13
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "statistics": {
                          "type": "object",
                          "allOf": [
                            {
                              "required": [
                                "answered",
                                "delivered",
                                "hardBounces",
                                "processing",
                                "sent",
                                "softBounces",
                                "unsubscriptions"
                              ],
                              "type": "object",
                              "properties": {
                                "delivered": {
                                  "type": "integer",
                                  "description": "Number of delivered SMS",
                                  "format": "int64",
                                  "example": 2987
                                },
                                "sent": {
                                  "type": "integer",
                                  "description": "Number of sent SMS",
                                  "format": "int64",
                                  "example": 3000
                                },
                                "processing": {
                                  "type": "integer",
                                  "description": "Number of processing SMS",
                                  "format": "int64",
                                  "example": 0
                                },
                                "softBounces": {
                                  "type": "integer",
                                  "description": "Number of softbounced SMS",
                                  "format": "int64",
                                  "example": 3
                                },
                                "hardBounces": {
                                  "type": "integer",
                                  "description": "Number of hardbounced SMS",
                                  "format": "int64",
                                  "example": 1
                                },
                                "unsubscriptions": {
                                  "type": "integer",
                                  "description": "Number of unsubscription SMS",
                                  "format": "int64",
                                  "example": 3
                                },
                                "answered": {
                                  "type": "integer",
                                  "description": "Number of replies to the SMS",
                                  "format": "int64",
                                  "example": 2
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 2,
                      "name": "PROMO CODE",
                      "status": "sent",
                      "content": "Visit our Store and get some discount !",
                      "scheduledAt": "2017-06-01T12:30:00Z",
                      "testSent": true,
                      "sender": "MyCompany",
                      "createdAt": "2017-06-01T12:30:00Z",
                      "modifiedAt": "2017-05-01T12:30:00Z",
                      "recipients": {
                        "lists": [
                          21
                        ],
                        "exclusionLists": [
                          13
                        ]
                      },
                      "statistics": {
                        "delivered": 2987,
                        "sent": 3000,
                        "processing": 0,
                        "softBounces": 3,
                        "hardBounces": 1,
                        "unsubscriptions": 3,
                        "answered": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Update an SMS campaign",
        "operationId": "updateSmsCampaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "id of the SMS campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Values to update an SMS Campaign",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the campaign",
                    "example": "Spring Promo Code"
                  },
                  "sender": {
                    "maxLength": 15,
                    "type": "string",
                    "description": "Name of the sender. **The number of characters is limited to 11 for alphanumeric characters and 15 for numeric characters**\n",
                    "example": "MyShop"
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the message. The **maximum characters used per SMS is 160**, if used more than that, it will be counted as more than one SMS\n",
                    "example": "Get a discount by visiting our NY store and saying : Happy Spring!"
                  },
                  "recipients": {
                    "required": [
                      "listIds"
                    ],
                    "type": "object",
                    "properties": {
                      "listIds": {
                        "type": "array",
                        "description": "Lists Ids to send the campaign to. **REQUIRED if scheduledAt is not empty**\n",
                        "items": {
                          "type": "integer",
                          "description": "List Id to send the campaign to",
                          "format": "int64",
                          "example": 54
                        }
                      },
                      "exclusionListIds": {
                        "type": "array",
                        "description": "List ids which have to be excluded from a campaign",
                        "items": {
                          "type": "integer",
                          "description": "List Id to exclude from the campaign",
                          "format": "int64",
                          "example": 15
                        }
                      }
                    }
                  },
                  "scheduledAt": {
                    "type": "string",
                    "description": "UTC date-time on which the campaign has to run (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
                    "example": "2017-05-05T12:30:00+02:00"
                  },
                  "unicodeEnabled": {
                    "type": "boolean",
                    "description": "Format of the message. It indicates whether the content should be treated as unicode or not.\n",
                    "example": true,
                    "default": false
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "SMS campaign updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Delete an SMS campaign",
        "operationId": "deleteSmsCampaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "id of the SMS campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "SMS campaign has been deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smsCampaigns/{campaignId}/sendNow": {
      "post": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Send your SMS campaign immediately",
        "operationId": "sendSmsCampaignNow",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "SMS campaign has been scheduled",
            "content": {}
          },
          "400": {
            "description": "SMS Campaign could not be sent",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You don't have enough credit to send your campaign. Please update your plan",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smsCampaigns/{campaignId}/status": {
      "put": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Update a campaign's status",
        "operationId": "updateSmsCampaignStatus",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Status of the campaign.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Note:- **replicateTemplate** status will be available **only for template type campaigns.**\n",
                    "enum": [
                      "suspended",
                      "archive",
                      "darchive",
                      "sent",
                      "queued",
                      "replicate",
                      "replicateTemplate",
                      "draft"
                    ]
                  }
                },
                "description": "Status of the campaign",
                "example": "draft"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The campaign status has been updated successfully",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "status"
      }
    },
    "/smsCampaigns/{campaignId}/sendTest": {
      "post": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Send a test SMS campaign",
        "operationId": "sendTestSms",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Id of the SMS campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Mobile number of the recipient with the country code. This number **must belong to one of your contacts in SendinBlue account and must not be blacklisted**\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string",
                    "description": "Mobile number of the recipient with the country code. This number **must belong to one of your contacts in SendinBlue account and must not be blacklisted**\n",
                    "example": "33689965433"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Test SMS has been sent successfully to the recipient",
            "content": {}
          },
          "400": {
            "description": "Test SMS could not be sent to the following email addresses",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Response code",
                      "example": "invalid_parameter"
                    },
                    "message": {
                      "type": "string",
                      "description": "Response message",
                      "example": "The SMS could not be sent to all recipients"
                    },
                    "unexistingSms": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Email addresses you tried to sent a SMS to, but not existing in your contacts",
                        "format": "email",
                        "example": "337699086644@mailin.com, 41778899954@mailin.com"
                      }
                    },
                    "withoutListSms": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Email addresses you sent a SMS to, without a contact list",
                        "format": "email",
                        "example": "3542388988@mailin.com, 10976444477@mailin.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smsCampaigns/{campaignId}/exportRecipients": {
      "post": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Export an SMS campaign's recipients",
        "description": "It returns the background process ID which on completion calls the notify URL that you have set in the input.",
        "operationId": "requestSmsRecipientExport",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Values to send for a recipient export request",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "recipientsType"
                ],
                "type": "object",
                "properties": {
                  "notifyURL": {
                    "type": "string",
                    "description": "URL that will be called once the export process is finished. For reference, https://help.sendinblue.com/hc/en-us/articles/360007666479",
                    "format": "url",
                    "example": "http://requestb.in/173lyyx1"
                  },
                  "recipientsType": {
                    "type": "string",
                    "description": "Filter the recipients based on how they interacted with the campaign",
                    "example": "answered",
                    "enum": [
                      "all",
                      "delivered",
                      "answered",
                      "softBounces",
                      "hardBounces",
                      "unsubscribed"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "process id created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "processId"
                  ],
                  "type": "object",
                  "properties": {
                    "processId": {
                      "type": "integer",
                      "description": "Id of the process created",
                      "format": "int64",
                      "example": 78
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "recipientExport"
      }
    },
    "/smsCampaigns/{campaignId}/sendReport": {
      "post": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Send an SMS campaign's report",
        "description": "Send report of Sent and Archived campaign, to the specified email addresses, with respective data and a pdf attachment in detail.",
        "operationId": "sendSmsReport",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "id of the campaign",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Values for send a report",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email"
                ],
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string",
                    "description": "Language of email content for campaign report sending.",
                    "example": "en",
                    "default": "fr",
                    "enum": [
                      "fr",
                      "es",
                      "pt",
                      "it",
                      "de",
                      "en"
                    ]
                  },
                  "email": {
                    "required": [
                      "body",
                      "to"
                    ],
                    "type": "object",
                    "properties": {
                      "to": {
                        "type": "array",
                        "description": "Email addresses of the recipients",
                        "items": {
                          "type": "string",
                          "description": "Email address of the recipient",
                          "format": "email",
                          "example": "jim.suehan@example.com"
                        }
                      },
                      "body": {
                        "type": "string",
                        "description": "Custom text message to be presented in the report email.",
                        "example": "Please find attached the report of our last email campaign."
                      }
                    },
                    "description": "Custom attributes for the report email."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Report has been successfully sent to the defined recipients",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactionalSMS/sms": {
      "post": {
        "tags": [
          "Transactional SMS"
        ],
        "summary": "Send SMS message to a mobile number",
        "operationId": "sendTransacSms",
        "requestBody": {
          "description": "Values to send a transactional SMS",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "content",
                  "recipient",
                  "sender"
                ],
                "type": "object",
                "properties": {
                  "sender": {
                    "maxLength": 15,
                    "type": "string",
                    "description": "Name of the sender. **The number of characters is limited to 11 for alphanumeric characters and 15 for numeric characters**\n",
                    "example": "MyShop"
                  },
                  "recipient": {
                    "type": "string",
                    "description": "Mobile number to send SMS with the country code",
                    "example": "33689965433"
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the message. If more than **160 characters** long, will be sent as multiple text messages\n",
                    "example": "Enter this code:CCJJG8 to validate your account"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the SMS. Marketing SMS messages are those sent typically with marketing content. Transactional SMS messages are sent to individuals and are triggered in response to some action, such as a sign-up, purchase, etc.",
                    "example": "marketing",
                    "default": "transactional",
                    "enum": [
                      "transactional",
                      "marketing"
                    ]
                  },
                  "tag": {
                    "type": "string",
                    "description": "Tag of the message",
                    "example": "accountValidation"
                  },
                  "webUrl": {
                    "type": "string",
                    "description": "Webhook to call for each event triggered by the message (delivered etc.)",
                    "format": "url",
                    "example": "http://requestb.in/173lyyx1"
                  },
                  "unicodeEnabled": {
                    "type": "boolean",
                    "description": "Format of the message. It indicates whether the content should be treated as unicode or not.\n",
                    "example": true,
                    "default": false
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "SMS has been sent successfully to the recipient",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "messageId",
                    "reference"
                  ],
                  "type": "object",
                  "properties": {
                    "reference": {
                      "type": "string",
                      "example": "ab1cde2fgh3i4jklmno"
                    },
                    "messageId": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1511882900176220
                    },
                    "smsCount": {
                      "type": "integer",
                      "description": "Count of SMS's to send multiple text messages",
                      "format": "int64",
                      "example": 2
                    },
                    "usedCredits": {
                      "type": "number",
                      "description": "SMS credits used per text message",
                      "format": "float",
                      "example": 0.7
                    },
                    "remainingCredits": {
                      "type": "number",
                      "description": "Remaining SMS credits of the user",
                      "format": "float",
                      "example": 82.85
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You don't have enough credit to send your SMS. Please update your plan",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "sendTransacSms"
      }
    },
    "/transactionalSMS/statistics/aggregatedReport": {
      "get": {
        "tags": [
          "Transactional SMS"
        ],
        "summary": "Get your SMS activity aggregated over a period of time",
        "operationId": "getTransacAggregatedSmsReport",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "Number of days in the past including today (positive integer). **Not compatible with startDate and endDate**\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Filter on a tag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aggregated SMS report informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "range": {
                      "type": "string",
                      "description": "Time frame of the report",
                      "example": "2016-09-08|2017-04-06"
                    },
                    "requests": {
                      "type": "integer",
                      "description": "Number of requests for the timeframe",
                      "format": "int64",
                      "example": 263
                    },
                    "delivered": {
                      "type": "integer",
                      "description": "Number of delivered SMS for the timeframe",
                      "format": "int64",
                      "example": 249
                    },
                    "hardBounces": {
                      "type": "integer",
                      "description": "Number of hardbounces for the timeframe",
                      "format": "int64",
                      "example": 1
                    },
                    "softBounces": {
                      "type": "integer",
                      "description": "Number of softbounces for the timeframe",
                      "format": "int64",
                      "example": 4
                    },
                    "blocked": {
                      "type": "integer",
                      "description": "Number of blocked contact for the timeframe",
                      "format": "int64",
                      "example": 2
                    },
                    "unsubscribed": {
                      "type": "integer",
                      "description": "Number of unsubscription for the timeframe",
                      "format": "int64",
                      "example": 6
                    },
                    "replied": {
                      "type": "integer",
                      "description": "Number of answered SMS for the timeframe",
                      "format": "int64",
                      "example": 12
                    },
                    "accepted": {
                      "type": "integer",
                      "description": "Number of accepted for the timeframe",
                      "format": "int64",
                      "example": 252
                    },
                    "rejected": {
                      "type": "integer",
                      "description": "Number of rejected for the timeframe",
                      "format": "int64",
                      "example": 8
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "range": "2015-05-22|2017-11-29",
                      "requests": 54,
                      "delivered": 16,
                      "hardBounces": 5,
                      "softBounces": 26,
                      "blocked": 4,
                      "unsubscribed": 10,
                      "replied": 8,
                      "accepted": 6,
                      "rejected": 14
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactionalSMS/statistics/reports": {
      "get": {
        "tags": [
          "Transactional SMS"
        ],
        "summary": "Get your SMS activity aggregated per day",
        "operationId": "getTransacSmsReport",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "Number of days in the past including today (positive integer). **Not compatible with 'startDate' and 'endDate'**\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Filter on a tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aggregated SMS report informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reports": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "description": "Date for which statistics are retrieved",
                            "format": "date",
                            "example": "2017-03-17"
                          },
                          "requests": {
                            "type": "integer",
                            "description": "Number of requests for the date",
                            "format": "int64",
                            "example": 87
                          },
                          "delivered": {
                            "type": "integer",
                            "description": "Number of delivered SMS for the date",
                            "format": "int64",
                            "example": 85
                          },
                          "hardBounces": {
                            "type": "integer",
                            "description": "Number of hardbounces for the date",
                            "format": "int64",
                            "example": 1
                          },
                          "softBounces": {
                            "type": "integer",
                            "description": "Number of softbounces for the date",
                            "format": "int64",
                            "example": 1
                          },
                          "blocked": {
                            "type": "integer",
                            "description": "Number of blocked contact for the date",
                            "format": "int64",
                            "example": 0
                          },
                          "unsubscribed": {
                            "type": "integer",
                            "description": "Number of unsubscription for the date",
                            "format": "int64",
                            "example": 1
                          },
                          "replied": {
                            "type": "integer",
                            "description": "Number of answered SMS for the date",
                            "format": "int64",
                            "example": 2
                          },
                          "accepted": {
                            "type": "integer",
                            "description": "Number of accepted for the date",
                            "format": "int64",
                            "example": 85
                          },
                          "rejected": {
                            "type": "integer",
                            "description": "Number of rejected for the date",
                            "format": "int64",
                            "example": 1
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "reports": [
                        {
                          "date": "2017-04-30",
                          "requests": 10756,
                          "delivered": 10103,
                          "hardBounces": 21,
                          "softBounces": 137,
                          "blocked": 1026,
                          "unsubscribed": 720,
                          "replied": 5091,
                          "accepted": 2318,
                          "rejected": 0
                        },
                        {
                          "date": "2017-05-01",
                          "requests": 18812,
                          "delivered": 17499,
                          "hardBounces": 34,
                          "softBounces": 254,
                          "blocked": 1514,
                          "unsubscribed": 1090,
                          "replied": 10089,
                          "accepted": 4393,
                          "rejected": 0
                        },
                        {
                          "date": "2017-05-02",
                          "requests": 14321,
                          "delivered": 13427,
                          "hardBounces": 16,
                          "softBounces": 176,
                          "blocked": 1646,
                          "unsubscribed": 1170,
                          "replied": 11563,
                          "accepted": 4689,
                          "rejected": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactionalSMS/statistics/events": {
      "get": {
        "tags": [
          "Transactional SMS"
        ],
        "summary": "Get all your SMS activity (unaggregated events)",
        "operationId": "getSmsEvents",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents per page",
            "schema": {
              "maximum": 100,
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document of the page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "Number of days in the past including today (positive integer). **Not compatible with 'startDate' and 'endDate'**\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Filter the report for a specific phone number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event",
            "in": "query",
            "description": "Filter the report for specific events",
            "schema": {
              "type": "string",
              "enum": [
                "bounces",
                "hardBounces",
                "softBounces",
                "delivered",
                "sent",
                "accepted",
                "unsubscription",
                "replies",
                "blocked"
              ]
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Filter the report for specific tags passed as a serialized urlencoded array",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sms events report informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "phoneNumber": {
                            "type": "string",
                            "description": "Phone number which has generated the event",
                            "example": "00189001094"
                          },
                          "date": {
                            "type": "string",
                            "description": "UTC date-time on which the event has been generated",
                            "example": "2017-03-12T12:30:00Z"
                          },
                          "messageId": {
                            "type": "string",
                            "description": "Message ID which generated the event",
                            "example": "1472640582425378"
                          },
                          "event": {
                            "type": "string",
                            "description": "Event which occurred",
                            "example": "accepted",
                            "enum": [
                              "bounces",
                              "hardBounces",
                              "softBounces",
                              "delivered",
                              "sent",
                              "accepted",
                              "unsubscription",
                              "replies",
                              "blocked"
                            ]
                          },
                          "reason": {
                            "type": "string",
                            "description": "Reason of bounce (only available if the event is hardbounce or softbounce)",
                            "example": "Message is undeliverable due to an incorrect / invalid / blacklisted / permanently barred MSISDN for this operator"
                          },
                          "reply": {
                            "type": "string"
                          },
                          "tag": {
                            "type": "string",
                            "description": "Tag of the SMS which generated the event",
                            "example": "CabWaiting"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "events": [
                        {
                          "phoneNumber": "00911059469013",
                          "date": "2015-05-20T12:30:00Z",
                          "messageId": "1473139351170140",
                          "event": "sent",
                          "reason": "Recipient is currently unreachable",
                          "tag": "cabWaiting"
                        },
                        {
                          "phoneNumber": "00911059469013",
                          "date": "2015-05-20T16:30:00Z",
                          "messageId": "1473139351170140",
                          "event": "delivered",
                          "reason": "Recipient is currently unreachable",
                          "tag": "cabRequest"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/senders": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Get the list of all your senders",
        "operationId": "getSenders",
        "parameters": [
          {
            "name": "ip",
            "in": "query",
            "description": "Filter your senders for a specific ip. **Available for dedicated IP usage only**\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "description": "Filter your senders for a specific domain",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of senders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "senders": {
                      "type": "array",
                      "description": "List of the senders available in your account",
                      "items": {
                        "required": [
                          "active",
                          "email",
                          "id",
                          "name"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Id of the sender",
                            "format": "int64",
                            "example": 0
                          },
                          "name": {
                            "type": "string",
                            "description": "From Name associated to the sender",
                            "example": "Marketing"
                          },
                          "email": {
                            "type": "string",
                            "description": "From Email associated to the sender",
                            "example": "marketing@mycompany.com"
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Status of sender (true=activated, false=deactivated)",
                            "example": false
                          },
                          "ips": {
                            "type": "array",
                            "description": "List of dedicated IP(s) available in the account. This data is displayed only for dedicated IPs",
                            "items": {
                              "required": [
                                "domain",
                                "ip",
                                "weight"
                              ],
                              "type": "object",
                              "properties": {
                                "ip": {
                                  "type": "string",
                                  "description": "Dedicated IP available in your account",
                                  "example": "123.98.689.7"
                                },
                                "domain": {
                                  "type": "string",
                                  "description": "Domain of the IP",
                                  "example": "mycompany.com"
                                },
                                "weight": {
                                  "type": "integer",
                                  "description": "Weight of the IP for this sender",
                                  "format": "int64",
                                  "example": 50
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "senders": [
                        {
                          "id": 1,
                          "name": "Marketing",
                          "email": "marketing@mycompany.com",
                          "active": true,
                          "ips": [
                            {
                              "ip": "123.98.689.7",
                              "domain": "mycompany.com",
                              "weight": 100
                            }
                          ]
                        },
                        {
                          "id": 2,
                          "name": "Newsletter",
                          "email": "newsletter@mycompany.com",
                          "active": false,
                          "ips": [
                            {
                              "ip": "123.98.689.7",
                              "domain": "mycompany.com",
                              "weight": 50
                            },
                            {
                              "ip": "123.98.643.2",
                              "domain": "news.mycompany.com",
                              "weight": 50
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Senders"
        ],
        "summary": "Create a new sender",
        "operationId": "createSender",
        "requestBody": {
          "description": "sender's name",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "From Name to use for the sender",
                    "example": "Newsletter"
                  },
                  "email": {
                    "type": "string",
                    "description": "From email to use for the sender. A verification email will be sent to this address.",
                    "format": "email",
                    "example": "newsletter@mycompany.com"
                  },
                  "ips": {
                    "type": "array",
                    "description": "**Mandatory in case of dedicated IP**. IPs to associate to the sender\n",
                    "items": {
                      "required": [
                        "domain",
                        "ip"
                      ],
                      "type": "object",
                      "properties": {
                        "ip": {
                          "type": "string",
                          "description": "Dedicated IP available in your account",
                          "example": "123.98.689.7"
                        },
                        "domain": {
                          "type": "string",
                          "description": "Domain of the IP",
                          "example": "mycompany.com"
                        },
                        "weight": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer",
                          "description": "Weight to apply to the IP. Sum of all IP weights must be 100. Should be passed for either ALL or NONE of the IPs. If it's not passed, the sending will be equally balanced on all IPs.",
                          "format": "int64",
                          "example": 50
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "sender created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the Sender created",
                      "format": "int64",
                      "example": 5
                    },
                    "spfError": {
                      "type": "boolean",
                      "description": "Status of SPF configuration for the sender (true = SPF not well configured, false = SPF well configured)",
                      "example": true
                    },
                    "dkimError": {
                      "type": "boolean",
                      "description": "Status of DKIM configuration for the sender (true = DKIM not well configured, false = DKIM well configured)",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "sender"
      }
    },
    "/senders/{senderId}": {
      "put": {
        "tags": [
          "Senders"
        ],
        "summary": "Update a sender",
        "operationId": "updateSender",
        "parameters": [
          {
            "name": "senderId",
            "in": "path",
            "description": "Id of the sender",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "sender's name",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "From Name to update the sender",
                    "example": "Newsletter"
                  },
                  "email": {
                    "type": "string",
                    "description": "From Email to update the sender",
                    "format": "email",
                    "example": "newsletter@mycompany.com"
                  },
                  "ips": {
                    "type": "array",
                    "description": "**Only in case of dedicated IP**. IPs to associate to the sender. If passed, will replace all the existing IPs.\n",
                    "items": {
                      "required": [
                        "domain",
                        "ip"
                      ],
                      "type": "object",
                      "properties": {
                        "ip": {
                          "type": "string",
                          "description": "Dedicated IP available in your account",
                          "example": "123.98.689.7"
                        },
                        "domain": {
                          "type": "string",
                          "description": "Domain of the IP",
                          "example": "mycompany.com"
                        },
                        "weight": {
                          "maximum": 100,
                          "minimum": 1,
                          "type": "integer",
                          "description": "Weight to apply to the IP. Sum of all IP weights must be 100. Should be passed for either ALL or NONE of the IPs. If it's not passed, the sending will be equally balanced on all IPs.",
                          "format": "int64",
                          "example": 50
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "sender updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Sender ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "sender"
      },
      "delete": {
        "tags": [
          "Senders"
        ],
        "summary": "Delete a sender",
        "operationId": "deleteSender",
        "parameters": [
          {
            "name": "senderId",
            "in": "path",
            "description": "Id of the sender",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "sender deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Sender ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/senders/{senderId}/ips": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Get all the dedicated IPs for a sender",
        "operationId": "getIpsFromSender",
        "parameters": [
          {
            "name": "senderId",
            "in": "path",
            "description": "Id of the sender",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of dedicated IPs",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "ips"
                  ],
                  "type": "object",
                  "properties": {
                    "ips": {
                      "type": "array",
                      "description": "Dedicated IP(s) linked to a sender",
                      "items": {
                        "required": [
                          "domain",
                          "id",
                          "ip",
                          "weight"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of the dedicated IP",
                            "format": "int64",
                            "example": 3
                          },
                          "ip": {
                            "type": "string",
                            "description": "Dedicated IP",
                            "example": "123.65.8.22"
                          },
                          "domain": {
                            "type": "string",
                            "description": "Domain associated to the IP",
                            "example": "mailing.myshop.dom"
                          },
                          "weight": {
                            "type": "integer",
                            "description": "Weight of the IP",
                            "format": "int64",
                            "example": 75
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "ips": [
                        {
                          "id": 3,
                          "ip": "123.65.8.22",
                          "domain": "mailing.myshop.dom",
                          "weight": 40
                        },
                        {
                          "id": 5,
                          "ip": "123.43.21.3",
                          "domain": "newsletter.myshop.dom",
                          "weight": 60
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Sender ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/senders/ips": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Get all the dedicated IPs for your account",
        "operationId": "getIps",
        "responses": {
          "200": {
            "description": "list of dedicated IPs",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "ips"
                  ],
                  "type": "object",
                  "properties": {
                    "ips": {
                      "type": "array",
                      "description": "Dedicated IP(s) available on your account",
                      "items": {
                        "required": [
                          "active",
                          "domain",
                          "id",
                          "ip"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of the dedicated IP",
                            "format": "int64",
                            "example": 3
                          },
                          "ip": {
                            "type": "string",
                            "description": "Dedicated IP",
                            "example": "123.65.8.22"
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Status of the IP (true=active, false=inactive)",
                            "example": true
                          },
                          "domain": {
                            "type": "string",
                            "description": "Domain associated to the IP",
                            "example": "mailing.myshop.com"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "ips": [
                        {
                          "id": 3,
                          "ip": "67.145.89.3",
                          "active": true,
                          "domain": "mailing.myshop.com"
                        },
                        {
                          "id": 5,
                          "ip": "76.76.125.9",
                          "active": true,
                          "domain": "newsletter.myshop.com"
                        },
                        {
                          "id": 6,
                          "ip": "123.65.8.22",
                          "active": false,
                          "domain": "notifications.myshop.com"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get all webhooks",
        "operationId": "getWebhooks",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter on webhook type",
            "schema": {
              "type": "string",
              "default": "transactional",
              "enum": [
                "marketing",
                "transactional",
                "inbound"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of webhook creation",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhooks informations",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "webhooks"
                  ],
                  "type": "object",
                  "properties": {
                    "webhooks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "required": [
                              "createdAt",
                              "description",
                              "events",
                              "id",
                              "modifiedAt",
                              "type",
                              "url"
                            ],
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "URL of the webhook",
                                "format": "url",
                                "example": "http://requestb.in/173lyyx1"
                              },
                              "id": {
                                "type": "integer",
                                "description": "ID of the webhook",
                                "format": "int64",
                                "example": 654
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the webhook",
                                "example": "Webhook triggered on campaign openings"
                              },
                              "events": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Events which will trigger the webhook when they occure",
                                  "example": "opens,clicks"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of webhook (marketing or transac)",
                                "example": "marketing",
                                "enum": [
                                  "marketing",
                                  "transac"
                                ]
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "Creation UTC date-time of the webhook (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                                "example": "2016-12-01T12:50:00Z"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "description": "Last modification UTC date-time of the webhook (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                                "example": "2017-05-12T13:15:00Z"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "webhooks": [
                        {
                          "url": "https://example.domain.com/webhook/events/kzfxxxxxxxx0uyo1",
                          "id": 9864,
                          "description": "Webhook triggered on campaign openings",
                          "events": [
                            "opened"
                          ],
                          "type": "transac",
                          "createdAt": "2016-07-18T12:30:09Z",
                          "modifiedAt": "2016-07-18T16:00:50Z"
                        },
                        {
                          "url": "http://exmaple.domain.com/15kxxxxxn1",
                          "id": 22770,
                          "description": "Webhook triggered on campaign hard bounces",
                          "events": [
                            "hardBounces"
                          ],
                          "type": "marketing",
                          "createdAt": "2017-02-20T14:30:00Z",
                          "modifiedAt": "2017-02-20T19:00:00Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create a webhook",
        "operationId": "createWebhook",
        "requestBody": {
          "description": "Values to create a webhook",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "events",
                  "url"
                ],
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "URL of the webhook",
                    "format": "url",
                    "example": "http://requestb.in/173lyyx1"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the webhook",
                    "example": "Webhook triggered on unsubscription"
                  },
                  "events": {
                    "type": "array",
                    "description": "- Events triggering the webhook. Possible values for **Transactional** type webhook:\n#### `sent` OR `request`, `delivered`, `hardBounce`, `softBounce`, `blocked`, `spam`, `invalid`, `deferred`, `click`, `opened`, `uniqueOpened` and `unsubscribed`\n- Possible values for **Marketing** type webhook:\n#### `spam`, `opened`, `click`, `hardBounce`, `softBounce`, `unsubscribed`, `listAddition` & `delivered`\n- Possible values for **Inbound** type webhook:\n#### `inboundEmailProcessed`\n",
                    "items": {
                      "type": "string",
                      "example": "unsubscribed",
                      "enum": [
                        "sent",
                        "hardBounce",
                        "softBounce",
                        "blocked",
                        "spam",
                        "delivered",
                        "request",
                        "click",
                        "invalid",
                        "deferred",
                        "opened",
                        "uniqueOpened",
                        "unsubscribed",
                        "listAddition",
                        "contactUpdated",
                        "contactDeleted",
                        "inboundEmailProcessed"
                      ]
                    }
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the webhook",
                    "example": "marketing",
                    "default": "transactional",
                    "enum": [
                      "transactional",
                      "marketing",
                      "inbound"
                    ]
                  },
                  "domain": {
                    "type": "string",
                    "description": "Inbound domain of webhook, required in case of event type `inbound`",
                    "example": "example.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the object created",
                      "format": "int64",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{webhookId}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get a webhook details",
        "operationId": "getWebhook",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "description": "Id of the webhook",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook informations",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "createdAt",
                    "description",
                    "events",
                    "id",
                    "modifiedAt",
                    "type",
                    "url"
                  ],
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "URL of the webhook",
                      "format": "url",
                      "example": "http://requestb.in/173lyyx1"
                    },
                    "id": {
                      "type": "integer",
                      "description": "ID of the webhook",
                      "format": "int64",
                      "example": 654
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the webhook",
                      "example": "Webhook triggered on campaign openings"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Events which will trigger the webhook when they occure",
                        "example": "opens,clicks"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of webhook (marketing or transac)",
                      "example": "marketing",
                      "enum": [
                        "marketing",
                        "transac"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Creation UTC date-time of the webhook (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                      "example": "2016-12-01T12:50:00Z"
                    },
                    "modifiedAt": {
                      "type": "string",
                      "description": "Last modification UTC date-time of the webhook (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                      "example": "2017-05-12T13:15:00Z"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "url": "http://example.domain.com/1brxxxxxx5p1",
                      "id": 7287,
                      "description": "Webhook triggered on campaign openings and addition of lists",
                      "events": [
                        "listAdditions",
                        "opened"
                      ],
                      "type": "marketing",
                      "createdAt": "2016-06-07T09:10:10Z",
                      "modifiedAt": "2016-06-08T11:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webhook ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update a webhook",
        "operationId": "updateWebhook",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "description": "Id of the webhook",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Values to update a webhook",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "URL of the webhook",
                    "format": "url",
                    "example": "http://requestb.in/173lyyx1"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the webhook",
                    "example": "Webhook triggered on contact hardbounce"
                  },
                  "events": {
                    "type": "array",
                    "description": "- Events triggering the webhook. Possible values for **Transactional** type webhook:\n#### `sent` OR `request`, `delivered`, `hardBounce`, `softBounce`, `blocked`, `spam`, `invalid`, `deferred`, `click`, `opened`, `uniqueOpened` and `unsubscribed`\n- Possible values for **Marketing** type webhook:\n#### `spam`, `opened`, `click`, `hardBounce`, `softBounce`, `unsubscribed`, `listAddition` & `delivered`\n- Possible values for **Inbound** type webhook:\n#### `inboundEmailProcessed`\n",
                    "items": {
                      "type": "string",
                      "example": "hardBounce",
                      "enum": [
                        "sent",
                        "hardBounce",
                        "softBounce",
                        "blocked",
                        "spam",
                        "delivered",
                        "request",
                        "click",
                        "invalid",
                        "deferred",
                        "opened",
                        "uniqueOpened",
                        "unsubscribed",
                        "listAddition",
                        "contactUpdated",
                        "contactDeleted",
                        "inboundEmailProcessed"
                      ]
                    }
                  },
                  "domain": {
                    "type": "string",
                    "description": "Inbound domain of webhook, used in case of event type `inbound`",
                    "example": "example.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Webhook updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webhook ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "updateWebhook"
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete a webhook",
        "operationId": "deleteWebhook",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "description": "Id of the webhook",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webhook ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reseller/children": {
      "get": {
        "tags": [
          "Reseller"
        ],
        "summary": "Get the list of all children accounts",
        "operationId": "getResellerChilds",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of documents for child accounts information per page",
            "schema": {
              "maximum": 20,
              "type": "integer",
              "format": "int64",
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index of the first document in the page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of children",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "children": {
                      "type": "array",
                      "description": "Your children's account information",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "allOf": [
                              {
                                "required": [
                                  "companyName",
                                  "email",
                                  "firstName",
                                  "lastName"
                                ],
                                "type": "object",
                                "properties": {
                                  "email": {
                                    "type": "string",
                                    "description": "Login Email",
                                    "format": "email",
                                    "example": "john.smith@example.com"
                                  },
                                  "firstName": {
                                    "type": "string",
                                    "description": "First Name",
                                    "example": "John"
                                  },
                                  "lastName": {
                                    "type": "string",
                                    "description": "Last Name",
                                    "example": "Smith"
                                  },
                                  "companyName": {
                                    "type": "string",
                                    "description": "Name of the company",
                                    "example": "MyCompany"
                                  }
                                }
                              },
                              {
                                "required": [
                                  "password"
                                ],
                                "type": "object",
                                "properties": {
                                  "credits": {
                                    "type": "object",
                                    "properties": {
                                      "emailCredits": {
                                        "type": "integer",
                                        "description": "Email credits available for your child",
                                        "format": "int64",
                                        "example": 98555
                                      },
                                      "smsCredits": {
                                        "type": "integer",
                                        "description": "SMS credits available for your child",
                                        "format": "int64",
                                        "example": 87556
                                      }
                                    },
                                    "description": "Credits available for your child"
                                  },
                                  "statistics": {
                                    "type": "object",
                                    "properties": {
                                      "previousMonthTotalSent": {
                                        "type": "integer",
                                        "description": "Overall emails sent for the previous month",
                                        "format": "int64",
                                        "example": 7654
                                      },
                                      "currentMonthTotalSent": {
                                        "type": "integer",
                                        "description": "Overall emails sent for current month",
                                        "format": "int64",
                                        "example": 4566
                                      },
                                      "totalSent": {
                                        "type": "integer",
                                        "description": "Overall emails sent for since the account exists",
                                        "format": "int64",
                                        "example": 987554
                                      }
                                    },
                                    "description": "Statistics about your child account activity"
                                  },
                                  "password": {
                                    "type": "string",
                                    "description": "The encrypted password of child account",
                                    "format": "password",
                                    "example": "abC01De2fGHI3jkL"
                                  },
                                  "ips": {
                                    "type": "array",
                                    "description": "IP(s) associated to a child account user",
                                    "items": {
                                      "type": "string",
                                      "description": "IP(s) associated to the user",
                                      "example": ""
                                    }
                                  },
                                  "apiKeys": {
                                    "required": [
                                      "v2"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "v2": {
                                        "type": "array",
                                        "items": {
                                          "required": [
                                            "key",
                                            "name"
                                          ],
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the key for version 2",
                                              "example": "N˚2"
                                            },
                                            "key": {
                                              "type": "string",
                                              "description": "API Key for version 2",
                                              "example": "nOpxxxxxy7z"
                                            }
                                          }
                                        }
                                      },
                                      "v3": {
                                        "type": "array",
                                        "items": {
                                          "required": [
                                            "key",
                                            "name"
                                          ],
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the key for version 3",
                                              "example": "N˚3"
                                            },
                                            "key": {
                                              "type": "string",
                                              "description": "API Key for version 3",
                                              "example": "xkeysib-21881axxxxxcc92e04-mIrexxxx7z"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "description": "API Keys associated to child account"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of the child",
                                "format": "int64",
                                "example": 187588
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of child accounts",
                      "format": "int64",
                      "example": 24
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "children": [
                        {
                          "email": "john.smith@example.com",
                          "firstName": "John",
                          "lastName": "Smith",
                          "companyName": "MyCompany",
                          "credits": {
                            "emailCredits": 98555,
                            "smsCredits": 87556
                          },
                          "statistics": {
                            "previousMonthTotalSent": 7654,
                            "currentMonthTotalSent": 4566,
                            "totalSent": 987554
                          },
                          "password": "abC0xxxxxx3jkL",
                          "ips": [
                            "176.2.39.4",
                            "231.43.21.7"
                          ],
                          "apiKeys": {
                            "v2": [
                              {
                                "name": "N˚2",
                                "key": "nOpxxxxxy7z"
                              }
                            ],
                            "v3": [
                              {
                                "name": "N˚3",
                                "key": "xkeysib-21881axxxxxcc92e04-mIrexxxx7z"
                              }
                            ]
                          },
                          "id": 187588
                        },
                        {
                          "email": "alex.pain@example.com",
                          "firstName": "Alex",
                          "lastName": "Pain",
                          "companyName": "MyStore",
                          "credits": {
                            "emailCredits": 2000,
                            "smsCredits": 0
                          },
                          "statistics": {
                            "previousMonthTotalSent": 654,
                            "currentMonthTotalSent": 300,
                            "totalSent": 6553
                          },
                          "password": "abC0xxxxx64kL",
                          "ips": [
                            "176.2.39.4",
                            "231.43.21.7"
                          ],
                          "apiKeys": {
                            "v2": [
                              {
                                "name": "N˚2",
                                "key": "nOpxxxxxy7z"
                              }
                            ],
                            "v3": [
                              {
                                "name": "N˚3",
                                "key": "xkeysib-21881axxxxxcc92e04-mIrexxxx7z"
                              }
                            ]
                          },
                          "id": 187669
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reseller"
        ],
        "summary": "Creates a reseller child",
        "operationId": "createResellerChild",
        "requestBody": {
          "description": "reseller child to add",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "companyName",
                  "email",
                  "firstName",
                  "lastName",
                  "password"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email address to create the child account",
                    "format": "email",
                    "example": "josh.cruise@example.com"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First name to use to create the child account",
                    "example": "Josh"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name to use to create the child account",
                    "example": "Cruise"
                  },
                  "companyName": {
                    "type": "string",
                    "description": "Company name to use to create the child account",
                    "example": "Your Company"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for the child account to login",
                    "format": "password",
                    "example": "Pa55w0rd65"
                  },
                  "language": {
                    "type": "string",
                    "description": "Language of the child account",
                    "example": "en",
                    "enum": [
                      "fr",
                      "es",
                      "pt",
                      "it",
                      "de",
                      "en"
                    ]
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "child created",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "authKey"
                  ],
                  "type": "object",
                  "properties": {
                    "authKey": {
                      "type": "string",
                      "description": "AuthKey of Reseller child created",
                      "example": "xkeysib-21881axxxxxcc92e04-mIrexxxx7z"
                    },
                    "id": {
                      "type": "integer",
                      "description": "Id of Reseller child created",
                      "format": "int64",
                      "example": 1234567
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "authKey": "xkeysib-21881axxxxxcc92e04-mIrexxxx7z",
                      "id": 1234567
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reseller/children/{childIdentifier}": {
      "get": {
        "tags": [
          "Reseller"
        ],
        "summary": "Get a child account's details",
        "operationId": "getChildInfo",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information for the child",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "companyName",
                        "email",
                        "firstName",
                        "lastName"
                      ],
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Login Email",
                          "format": "email",
                          "example": "john.smith@example.com"
                        },
                        "firstName": {
                          "type": "string",
                          "description": "First Name",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Last Name",
                          "example": "Smith"
                        },
                        "companyName": {
                          "type": "string",
                          "description": "Name of the company",
                          "example": "MyCompany"
                        }
                      }
                    },
                    {
                      "required": [
                        "password"
                      ],
                      "type": "object",
                      "properties": {
                        "credits": {
                          "type": "object",
                          "properties": {
                            "emailCredits": {
                              "type": "integer",
                              "description": "Email credits available for your child",
                              "format": "int64",
                              "example": 98555
                            },
                            "smsCredits": {
                              "type": "integer",
                              "description": "SMS credits available for your child",
                              "format": "int64",
                              "example": 87556
                            }
                          },
                          "description": "Credits available for your child"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "previousMonthTotalSent": {
                              "type": "integer",
                              "description": "Overall emails sent for the previous month",
                              "format": "int64",
                              "example": 7654
                            },
                            "currentMonthTotalSent": {
                              "type": "integer",
                              "description": "Overall emails sent for current month",
                              "format": "int64",
                              "example": 4566
                            },
                            "totalSent": {
                              "type": "integer",
                              "description": "Overall emails sent for since the account exists",
                              "format": "int64",
                              "example": 987554
                            }
                          },
                          "description": "Statistics about your child account activity"
                        },
                        "password": {
                          "type": "string",
                          "description": "The encrypted password of child account",
                          "format": "password",
                          "example": "abC01De2fGHI3jkL"
                        },
                        "ips": {
                          "type": "array",
                          "description": "IP(s) associated to a child account user",
                          "items": {
                            "type": "string",
                            "description": "IP(s) associated to the user",
                            "example": ""
                          }
                        },
                        "apiKeys": {
                          "required": [
                            "v2"
                          ],
                          "type": "object",
                          "properties": {
                            "v2": {
                              "type": "array",
                              "items": {
                                "required": [
                                  "key",
                                  "name"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the key for version 2",
                                    "example": "N˚2"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "API Key for version 2",
                                    "example": "nOpxxxxxy7z"
                                  }
                                }
                              }
                            },
                            "v3": {
                              "type": "array",
                              "items": {
                                "required": [
                                  "key",
                                  "name"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the key for version 3",
                                    "example": "N˚3"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "API Key for version 3",
                                    "example": "xkeysib-21881axxxxxcc92e04-mIrexxxx7z"
                                  }
                                }
                              }
                            }
                          },
                          "description": "API Keys associated to child account"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "email": "john.smith@example.com",
                      "firstName": "John",
                      "lastName": "Smith",
                      "companyName": "MyCompany",
                      "credits": {
                        "emailCredits": 98555,
                        "smsCredits": 87556
                      },
                      "statistics": {
                        "previousMonthTotalSent": 7654,
                        "currentMonthTotalSent": 4566,
                        "totalSent": 987554
                      },
                      "password": "abC0xxxxx3jkL",
                      "ips": [
                        "176.2.39.4",
                        "231.43.21.7"
                      ],
                      "apiKeys": {
                        "v2": [
                          {
                            "name": "N˚2",
                            "key": "nOpxxxxxy7z"
                          }
                        ],
                        "v3": [
                          {
                            "name": "N˚3",
                            "key": "xkeysib-21881axxxxxcc92e04-mIrexxxx7z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reseller"
        ],
        "summary": "Update info of reseller's child based on the child identifier supplied",
        "operationId": "updateResellerChild",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "values to update in child profile",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "New Email address to update the child account",
                    "format": "email",
                    "example": "josh.cruise@example.com"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "New First name to use to update the child account",
                    "example": "Josh"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "New Last name to use to update the child account",
                    "example": "Cruise"
                  },
                  "companyName": {
                    "type": "string",
                    "description": "New Company name to use to update the child account",
                    "example": "Your Company"
                  },
                  "password": {
                    "type": "string",
                    "description": "New password for the child account to login",
                    "format": "password",
                    "example": "Pa55w0rd65"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "reseller's child updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "resellerChild"
      },
      "delete": {
        "tags": [
          "Reseller"
        ],
        "summary": "Delete a single reseller child based on the child identifier supplied",
        "operationId": "deleteResellerChild",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or child id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "child deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reseller/children/{childIdentifier}/accountStatus": {
      "put": {
        "tags": [
          "Reseller"
        ],
        "summary": "Update info of reseller's child account status based on the identifier supplied",
        "operationId": "updateChildAccountStatus",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "values to update in child account status",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transactionalEmail": {
                    "type": "boolean",
                    "description": "Status of Transactional Email Platform activation for your account (true=enabled, false=disabled)",
                    "example": false
                  },
                  "transactionalSms": {
                    "type": "boolean",
                    "description": "Status of Transactional SMS Platform activation for your account (true=enabled, false=disabled)",
                    "example": false
                  },
                  "marketingAutomation": {
                    "type": "boolean",
                    "description": "Status of Marketing Automation Platform activation for your account (true=enabled, false=disabled)",
                    "example": true
                  },
                  "smsCampaign": {
                    "type": "boolean",
                    "description": "Status of SMS Campaign Platform activation for your account (true=enabled, false=disabled)",
                    "example": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "reseller's child account status updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reseller/children/{childIdentifier}/accountCreationStatus": {
      "get": {
        "tags": [
          "Reseller"
        ],
        "summary": "Get the status of a reseller's child account creation, whether it is successfully created (exists) or not based on the childIdentifier supplied",
        "operationId": "getChildAccountCreationStatus",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "status of reseller's child account",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "childAccountCreated"
                  ],
                  "type": "object",
                  "properties": {
                    "childAccountCreated": {
                      "type": "boolean",
                      "description": "Status of child account creation whether it is successfully created (exists) or not.",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "childAccountCreated": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reseller/children/{childIdentifier}/ips/associate": {
      "post": {
        "tags": [
          "Reseller"
        ],
        "summary": "Associate a dedicated IP to the child",
        "operationId": "associateIpToChild",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "IP to associate",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string",
                    "description": "Dedicated ID",
                    "example": "123.65.8.22"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Dedicated IP is associated to the child",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ip"
      }
    },
    "/reseller/children/{childIdentifier}/ips/dissociate": {
      "post": {
        "tags": [
          "Reseller"
        ],
        "summary": "Dissociate a dedicated IP to the child",
        "operationId": "dissociateIpFromChild",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "IP to dissociate",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string",
                    "description": "Dedicated ID",
                    "example": "123.65.8.22"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Dedicated IP is dissociated from the child",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ip"
      }
    },
    "/reseller/children/{childIdentifier}/credits/add": {
      "post": {
        "tags": [
          "Reseller"
        ],
        "summary": "Add Email and/or SMS credits to a specific child account",
        "operationId": "addCredits",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Values to post to add credit to a specific child account",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sms": {
                    "type": "integer",
                    "description": "**Required if email credits are empty.** SMS credits to be added to the child account\n",
                    "format": "int64",
                    "example": 450
                  },
                  "email": {
                    "type": "integer",
                    "description": "**Required if sms credits are empty.** Email credits to be added to the child account\n",
                    "format": "int64",
                    "example": 1200
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Credits added",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "child",
                    "reseller"
                  ],
                  "type": "object",
                  "properties": {
                    "child": {
                      "required": [
                        "email",
                        "sms"
                      ],
                      "type": "object",
                      "properties": {
                        "sms": {
                          "type": "number",
                          "description": "SMS Credits remaining for child account",
                          "format": "double",
                          "example": 500
                        },
                        "email": {
                          "type": "number",
                          "description": "Email Credits remaining for child account",
                          "format": "double",
                          "example": 2000
                        }
                      },
                      "description": "Credits remaining for child account"
                    },
                    "reseller": {
                      "required": [
                        "email",
                        "sms"
                      ],
                      "type": "object",
                      "properties": {
                        "sms": {
                          "type": "number",
                          "description": "SMS Credits remaining for reseller account",
                          "format": "double",
                          "example": 12900
                        },
                        "email": {
                          "type": "number",
                          "description": "Email Credits remaining for reseller account",
                          "format": "double",
                          "example": 2000000
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "child": {
                        "sms": 500,
                        "email": 2000
                      },
                      "reseller": {
                        "sms": 12900,
                        "email": 2000000
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reseller/children/{childIdentifier}/credits/remove": {
      "post": {
        "tags": [
          "Reseller"
        ],
        "summary": "Remove Email and/or SMS credits from a specific child account",
        "operationId": "removeCredits",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Values to post to remove email or SMS credits from a specific child account",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sms": {
                    "type": "integer",
                    "description": "**Required if email credits are empty.** SMS credits to be removed from the child account\n",
                    "format": "int64",
                    "example": 300
                  },
                  "email": {
                    "type": "integer",
                    "description": "**Required if sms credits are empty.** Email credits to be removed from the child account\n",
                    "format": "int64",
                    "example": 500
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Credits removed",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "child",
                    "reseller"
                  ],
                  "type": "object",
                  "properties": {
                    "child": {
                      "required": [
                        "email",
                        "sms"
                      ],
                      "type": "object",
                      "properties": {
                        "sms": {
                          "type": "number",
                          "description": "SMS Credits remaining for child account",
                          "format": "double",
                          "example": 500
                        },
                        "email": {
                          "type": "number",
                          "description": "Email Credits remaining for child account",
                          "format": "double",
                          "example": 2000
                        }
                      },
                      "description": "Credits remaining for child account"
                    },
                    "reseller": {
                      "required": [
                        "email",
                        "sms"
                      ],
                      "type": "object",
                      "properties": {
                        "sms": {
                          "type": "number",
                          "description": "SMS Credits remaining for reseller account",
                          "format": "double",
                          "example": 12900
                        },
                        "email": {
                          "type": "number",
                          "description": "Email Credits remaining for reseller account",
                          "format": "double",
                          "example": 2000000
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "child": {
                        "sms": 500,
                        "email": 2000
                      },
                      "reseller": {
                        "sms": 12900,
                        "email": 2000000
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "removeCredits"
      }
    },
    "/reseller/children/{childIdentifier}/domains": {
      "get": {
        "tags": [
          "Reseller"
        ],
        "summary": "Get all sender domains for a specific child account",
        "operationId": "getChildDomains",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sender domains of the child",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "domain": {
                            "type": "string",
                            "description": "Sender domain",
                            "example": "mycustomdomain.com"
                          },
                          "active": {
                            "type": "boolean",
                            "description": "indicates whether a domain is verified or not",
                            "example": true
                          }
                        }
                      }
                    ]
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "domain": "mycustomdomain.com",
                        "active": true
                      },
                      {
                        "domain": "mynewdomain.com",
                        "active": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reseller"
        ],
        "summary": "Create a domain for a child account",
        "operationId": "createChildDomain",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Sender domain to add for a specific child account. This will not be displayed to the parent account.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "Sender domain to add for a specific child account",
                    "example": "mychilddomain.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Domain added",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reseller/children/{childIdentifier}/domains/{domainName}": {
      "put": {
        "tags": [
          "Reseller"
        ],
        "summary": "Update the sender domain of reseller's child based on the childIdentifier and domainName passed",
        "operationId": "updateChildDomain",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Pass the existing domain that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "value to update for sender domain",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "Value for the sender domain that will replace the existing domain",
                    "example": "myupdateddomain.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "reseller's child domain updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reseller"
        ],
        "summary": "Delete the sender domain of the reseller child based on the childIdentifier and domainName passed",
        "operationId": "deleteChildDomain",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Pass the existing domain that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "child domain deleted",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reseller/children/{childIdentifier}/auth": {
      "get": {
        "tags": [
          "Reseller"
        ],
        "summary": "Get session token to access Sendinblue (SSO)",
        "description": "It returns a session [token] which will remain valid for a short period of time. A child account will be able to access a white-labeled section by using the following url pattern => https:/email.mydomain.com/login/sso?token=[token]",
        "operationId": "getSsoToken",
        "parameters": [
          {
            "name": "childIdentifier",
            "in": "path",
            "description": "Either auth key or id of reseller's child",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session token",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "token"
                  ],
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Session token. It will remain valid for a short period of time only.",
                      "example": "ede520dxxxxxxxxxxxx76d631fba2"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "token": "5cadaxxxxxxxxxxxxxxxxxxxx5a179f85a0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a reseller",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Child auth key or child id not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get your account information, plan and credits details",
        "operationId": "getAccount",
        "responses": {
          "200": {
            "description": "account informations",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "required": [
                            "companyName",
                            "email",
                            "firstName",
                            "lastName"
                          ],
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "Login Email",
                              "format": "email",
                              "example": "john.smith@example.com"
                            },
                            "firstName": {
                              "type": "string",
                              "description": "First Name",
                              "example": "John"
                            },
                            "lastName": {
                              "type": "string",
                              "description": "Last Name",
                              "example": "Smith"
                            },
                            "companyName": {
                              "type": "string",
                              "description": "Name of the company",
                              "example": "MyCompany"
                            }
                          }
                        },
                        {
                          "required": [
                            "address"
                          ],
                          "type": "object",
                          "properties": {
                            "address": {
                              "required": [
                                "city",
                                "country",
                                "street",
                                "zipCode"
                              ],
                              "type": "object",
                              "properties": {
                                "street": {
                                  "type": "string",
                                  "description": "Street information",
                                  "example": "47 Harbour Street"
                                },
                                "city": {
                                  "type": "string",
                                  "description": "City information",
                                  "example": "New-York"
                                },
                                "zipCode": {
                                  "type": "string",
                                  "description": "Zip Code information",
                                  "example": "9867"
                                },
                                "country": {
                                  "type": "string",
                                  "description": "Country information",
                                  "example": "United States of America"
                                }
                              },
                              "description": "Address informations"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "required": [
                        "plan",
                        "relay"
                      ],
                      "type": "object",
                      "properties": {
                        "plan": {
                          "type": "array",
                          "description": "Information about your plans and credits",
                          "items": {
                            "required": [
                              "credits",
                              "creditsType",
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Displays the plan type of the user",
                                "example": "subscription",
                                "enum": [
                                  "payAsYouGo",
                                  "free",
                                  "subscription",
                                  "sms",
                                  "reseller"
                                ]
                              },
                              "creditsType": {
                                "type": "string",
                                "description": "This is the type of the credit, \"Send Limit\" is one of the possible types of credit of a user. \"Send Limit\" implies the total number of emails you can send to the subscribers in your account.",
                                "example": "sendLimit",
                                "enum": [
                                  "sendLimit"
                                ]
                              },
                              "credits": {
                                "type": "number",
                                "description": "Remaining credits of the user",
                                "format": "float",
                                "example": 8755
                              },
                              "startDate": {
                                "type": "string",
                                "description": "Date of the period from which the plan will start (only available for \"subscription\" and \"reseller\" plan type)",
                                "format": "date",
                                "example": "2016-12-31"
                              },
                              "endDate": {
                                "type": "string",
                                "description": "Date of the period from which the plan will end (only available for \"subscription\" and \"reseller\" plan type)",
                                "format": "date",
                                "example": "2017-01-31"
                              },
                              "userLimit": {
                                "type": "integer",
                                "description": "Only in case of reseller account. It implies the total number of child accounts you can add to your account.",
                                "example": 10
                              }
                            }
                          }
                        },
                        "relay": {
                          "required": [
                            "data",
                            "enabled"
                          ],
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Status of your transactional email Account (true=Enabled, false=Disabled)",
                              "example": true
                            },
                            "data": {
                              "required": [
                                "port",
                                "relay",
                                "userName"
                              ],
                              "type": "object",
                              "properties": {
                                "userName": {
                                  "type": "string",
                                  "description": "Email to use as login on transactional platform",
                                  "format": "email",
                                  "example": "john.smith@example.com"
                                },
                                "relay": {
                                  "type": "string",
                                  "description": "URL of the SMTP Relay",
                                  "example": "relay.domain.com"
                                },
                                "port": {
                                  "type": "integer",
                                  "description": "Port used for SMTP Relay",
                                  "example": 125
                                }
                              },
                              "description": "Data regarding the transactional email account"
                            }
                          },
                          "description": "Information about your transactional email account"
                        },
                        "marketingAutomation": {
                          "required": [
                            "enabled"
                          ],
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Marketing Automation Tracker ID",
                              "example": "iso05aopqych87ysy0jymf"
                            },
                            "enabled": {
                              "type": "boolean",
                              "description": "Status of Marketing Automation Plateform activation for your account (true=enabled, false=disabled)",
                              "example": false
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "response": {
                    "value": {
                      "plan": [
                        {
                          "type": "payAsYouGo",
                          "credits": 5000,
                          "creditsType": "sendLimit"
                        },
                        {
                          "type": "subscription",
                          "credits": 39983,
                          "creditsType": "sendLimit",
                          "startDate": "2017-03-11",
                          "endDate": "2017-04-11"
                        },
                        {
                          "type": "sms",
                          "credits": 999.5360000000001,
                          "creditsType": "sendLimit"
                        }
                      ],
                      "relay": {
                        "enabled": true,
                        "data": {
                          "userName": "john.smith@example.com",
                          "relay": "smtp-relay.domain.com",
                          "port": 587
                        }
                      },
                      "marketingAutomation": {
                        "key": "kzfr5xxxxxxttuyo1",
                        "enabled": true
                      },
                      "email": "john.smith@example.com",
                      "firstName": "John",
                      "lastName": "Smith",
                      "companyName": "MyShop",
                      "address": {
                        "city": "New-York",
                        "street": "1677B 8th Avenue",
                        "zipCode": "7665",
                        "country": "USA"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processes": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Return all the processes for your account",
        "operationId": "getProcesses",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number limitation for the result returned",
            "schema": {
              "maximum": 50,
              "type": "integer",
              "format": "int64",
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Beginning point in the list to retrieve from.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "processes informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "processes": {
                      "type": "array",
                      "description": "List of processes available on your account",
                      "items": {
                        "required": [
                          "id",
                          "name",
                          "status"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Id of the process",
                            "format": "int64",
                            "example": 145
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the process",
                            "example": "queued",
                            "enum": [
                              "queued",
                              "in_process",
                              "completed"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "Process name",
                            "example": "IMPORTUSER"
                          },
                          "export_url": {
                            "type": "string",
                            "description": "URL on which send export the of contacts once the process is completed",
                            "example": "http://requestb.in/16ua3aj1"
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of processes available on your account",
                      "format": "int64",
                      "example": 5
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "processes": [
                        {
                          "id": 40,
                          "status": "completed",
                          "name": "TRANS-CALC"
                        },
                        {
                          "id": 43,
                          "status": "queued",
                          "name": "TRANS-GLOBAL-CALC"
                        },
                        {
                          "id": 194,
                          "status": "completed",
                          "name": "SEARCH_EXPORT_USERS",
                          "export_url": "<a href=\"https://export-url.com/upload/file-name.csv\" target=\"_blank\">filename.csv</a>"
                        }
                      ],
                      "count": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processes/{processId}": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Return the informations for a process",
        "operationId": "getProcess",
        "parameters": [
          {
            "name": "processId",
            "in": "path",
            "description": "Id of the process",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "process informations",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id",
                    "name",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Id of the process",
                      "format": "int64",
                      "example": 145
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the process",
                      "example": "queued",
                      "enum": [
                        "queued",
                        "in_process",
                        "completed"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Process name",
                      "example": "IMPORTUSER"
                    },
                    "export_url": {
                      "type": "string",
                      "description": "URL on which send export the of contacts once the process is completed",
                      "example": "http://requestb.in/16ua3aj1"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 194,
                      "status": "completed",
                      "name": "SEARCH_EXPORT_USERS",
                      "export_url": "<a href=\"https://export-url.com/upload/file-name.csv\" target=\"_blank\">filename.csv</a>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Process ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                },
                "example": {
                  "code": "invalid_parameter",
                  "message": "processId is invalid"
                }
              }
            }
          }
        }
      }
    },
    "/inbound/events": {
      "get": {
        "tags": [
          "Inbound Parsing"
        ],
        "summary": "Get the list of all the events for the received emails.",
        "description": "This endpoint will show the list of all the events for the received emails.",
        "operationId": "getInboundEmailEvents",
        "parameters": [
          {
            "name": "sender",
            "description": "Email address of the sender.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "description": "Mandatory if endDate is used. Starting date (YYYY-MM-DD) from which you want to fetch the list. Maximum time period that can be selected is one month.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "description": "Mandatory if startDate is used. Ending date (YYYY-MM-DD) till which you want to fetch the list. Maximum time period that can be selected is one month.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "description": "Number of documents returned per page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 100,
              "maximum": 500
            }
          },
          {
            "name": "offset",
            "description": "Index of the first document on the page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results in the ascending/descending order of record creation",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of events for received emails.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "uuid",
                          "sender",
                          "date",
                          "recipient"
                        ],
                        "properties": {
                          "uuid": {
                            "description": "UUID that can be used to fetch additional data",
                            "type": "string",
                            "format": "uuid"
                          },
                          "date": {
                            "description": "Date when email was received on SMTP relay",
                            "type": "string",
                            "format": "date-time"
                          },
                          "sender": {
                            "description": "Sender’s email address",
                            "type": "string",
                            "format": "email"
                          },
                          "recipient": {
                            "description": "Recipient’s email address",
                            "type": "string",
                            "format": "email"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "events": [
                        {
                          "uuid": "1a825d56-029b-4a41-b8e4-1a825d56",
                          "date": "2017-03-11T12:30:00.000Z",
                          "sender": "john@example.com",
                          "recipient": "alexa@example.com"
                        },
                        {
                          "uuid": "1a825d56-029b-4a41-b8e4-61670463431b",
                          "date": "2017-03-12T12:30:00.000Z",
                          "sender": "alice@example.com",
                          "recipient": "bob@example.com"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/inbound/events/{uuid}": {
      "get": {
        "tags": [
          "Inbound Parsing"
        ],
        "summary": "Fetch all events history for one particular received email.",
        "description": "This endpoint will show the list of all events history for one particular received email.",
        "operationId": "getInboundEmailEventsByUuid",
        "parameters": [
          {
            "name": "uuid",
            "description": "UUID to fetch events specific to recieved email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email campaign informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "receivedAt": {
                      "description": "Date when email was received on SMTP relay",
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:53:26Z"
                    },
                    "deliveredAt": {
                      "description": "Date when email was delivered successfully to client’s webhook",
                      "type": "string",
                      "nullable": true,
                      "format": "date-time"
                    },
                    "recipient": {
                      "description": "Recipient’s email address",
                      "type": "string",
                      "format": "email"
                    },
                    "sender": {
                      "description": "Sender’s email address",
                      "type": "string",
                      "format": "email"
                    },
                    "messageId": {
                      "description": "Value of the Message-ID header. This will be present only after the processing is done.",
                      "type": "string"
                    },
                    "subject": {
                      "description": "Value of the Subject header. This will be present only after the processing is done. ",
                      "type": "string"
                    },
                    "attachments": {
                      "description": "List of attachments of the email. This will be present only after the processing is done.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "filename specified in the Content-Disposition header of the attachment",
                            "type": "string"
                          },
                          "contentType": {
                            "description": "value of the Content-Type header of the attachment",
                            "type": "string"
                          },
                          "contentId": {
                            "description": "value of the Content-ID header of the attachment.",
                            "type": "string"
                          },
                          "contentLength": {
                            "description": "size of the attachment in bytes",
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "logs": {
                      "description": "List of events/logs that describe the lifecycle of the email on SIB platform",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "description": "Date of the event",
                            "type": "string",
                            "format": "date-time"
                          },
                          "type": {
                            "description": "Type of the event",
                            "type": "string",
                            "enum": [
                              "received",
                              "processed",
                              "webhookFailed",
                              "webhookDelivered"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "receivedAt": "2017-03-12T12:30:00.000Z",
                      "deliveredAt": "2017-03-12T12:31:00.000Z",
                      "sender": "alice@example.com",
                      "recipient": "bob@example.com",
                      "messageId": "<a_nice@message.id>",
                      "subject": "Re: Question about your API",
                      "attachments": [
                        {
                          "name": "invoice.pdf",
                          "contentType": "application/pdf",
                          "contentId": null,
                          "contentLength": 12345
                        }
                      ],
                      "logs": [
                        {
                          "date": "2017-03-12T12:30:00.000Z",
                          "type": "received"
                        },
                        {
                          "date": "2017-03-12T12:30:04.000Z",
                          "type": "webhookFailed"
                        },
                        {
                          "date": "2017-03-12T12:31:04.000Z",
                          "type": "webhookDelivered"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/corporate/subAccount": {
      "get": {
        "tags": [
          "Master account"
        ],
        "summary": "Get the list of all the sub-accounts of the master account.",
        "description": "This endpoint will provide the list all the sub-accounts of the master account.",
        "parameters": [
          {
            "name": "offset",
            "description": "Page number of sub-accounts listing",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "description": "Number of sub-accounts to be displayed on each page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sub-accounts list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of subaccounts"
                    },
                    "subAccounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "companyName",
                          "active",
                          "createdAt"
                        ],
                        "properties": {
                          "id": {
                            "description": "Client id of sub-account organization",
                            "type": "integer",
                            "format": "int64"
                          },
                          "companyName": {
                            "description": "Name of sub-account organization",
                            "type": "string"
                          },
                          "active": {
                            "description": "Whether organization is active or not",
                            "type": "boolean"
                          },
                          "createdAt": {
                            "description": "Timestamp when the organization was created",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "count": 3,
                      "subAccounts": [
                        {
                          "id": 4043629,
                          "companyName": "Uday P sub-2",
                          "active": "true,",
                          "createdAt": 1631523176
                        },
                        {
                          "id": 3984002,
                          "companyName": "Uday P sub-1",
                          "active": true,
                          "createdAt": 1629439311
                        },
                        {
                          "id": 3524191,
                          "companyName": "Thu Hien",
                          "active": true,
                          "createdAt": 1614713641
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Master account"
        ],
        "summary": "Create a new sub-account under a master account.",
        "description": "This endpoint will create a new sub-account under a master account",
        "requestBody": {
          "description": "Request body with sub-account organization name",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "companyName"
                ],
                "properties": {
                  "companyName": {
                    "description": "Name of the organization",
                    "type": "string"
                  },
                  "language": {
                    "description": "Request language for localization information",
                    "type": "string",
                    "enum": [
                      "en",
                      "fr",
                      "it",
                      "es",
                      "pt",
                      "de"
                    ]
                  },
                  "timezone": {
                    "description": "Request timezone of the client",
                    "type": "string"
                  }
                },
                "example": {
                  "companyName": "Test Sub-account",
                  "timezone": "Europe/Paris",
                  "language": "en"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created sub-account refrenece identifier",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the object created",
                      "format": "int64",
                      "example": 5
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 4109344
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                },
                "example": {
                  "code": "missing_parameter",
                  "message": "Missing companyName attribute in the request"
                }
              }
            }
          }
        }
      }
    },
    "/corporate/subAccount/{id}": {
      "get": {
        "tags": [
          "Master account"
        ],
        "summary": "Get sub-account details",
        "description": "This endpoint will provide the details of specified sub-account organization",
        "parameters": [
          {
            "name": "id",
            "description": "Id of the sub-account organization",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sub-account organization details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the sub-account user"
                    },
                    "email": {
                      "type": "string",
                      "description": "Email id of the sub-account organization"
                    },
                    "companyName": {
                      "type": "string",
                      "description": "Sub-account company name"
                    },
                    "planInfo": {
                      "type": "object",
                      "description": "Sub-account plan details",
                      "properties": {
                        "credits": {
                          "type": "object",
                          "description": "Sub-account messaging quota details",
                          "properties": {
                            "sms": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Sms quota of the sub-account"
                            },
                            "emails": {
                              "type": "object",
                              "description": "Email quota details of the sub-account",
                              "properties": {
                                "quantity": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Quantity of email messaging limits provided"
                                },
                                "remaining": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Available email messaging limits for use"
                                }
                              }
                            }
                          }
                        },
                        "features": {
                          "type": "object",
                          "description": "Sub-account features and addons quota details",
                          "properties": {
                            "inbox": {
                              "type": "object",
                              "description": "Inbox details",
                              "properties": {
                                "quantity": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Quantity of inbox provided"
                                },
                                "remaining": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Available inboxes for use"
                                }
                              }
                            },
                            "landingPage": {
                              "type": "object",
                              "description": "Landing page details",
                              "properties": {
                                "quantity": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Quantity of landing pages provided"
                                },
                                "remaining": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Available landing pages for use"
                                }
                              }
                            },
                            "users": {
                              "type": "object",
                              "description": "Multi-account details",
                              "properties": {
                                "quantity": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Quantity of multi-account's provided"
                                },
                                "remaining": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Available multi-accounts for use"
                                }
                              }
                            }
                          }
                        },
                        "planType": {
                          "type": "string",
                          "description": "type of the plan"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "name": "Uday Pandit",
                  "email": "uday+1@sendinblue.com",
                  "companyName": "API-Sub-26thOct21-4",
                  "planInfo": {
                    "credits": {
                      "sms": 1234,
                      "emails": {
                        "quantity": 2000,
                        "remaining": 1955
                      },
                      "features": {
                        "inbox": {
                          "quantity": 20,
                          "remaining": 12
                        },
                        "landingPage": {
                          "quantity": 25,
                          "remaining": 14
                        },
                        "users": {
                          "quantity": 30,
                          "remaining": 14
                        }
                      },
                      "planType": "paid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/corporate/subAccount/{id}/plan": {
      "put": {
        "tags": [
          "Master account"
        ],
        "summary": "Update sub-account plan",
        "description": "This endpoint will update the sub-account plan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the sub-account organization",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Values to update a sub-account plan",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Details of the plan to be changed",
                "properties": {
                  "credits": {
                    "type": "object",
                    "description": "Credit details to update",
                    "properties": {
                      "email": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of email credits"
                      }
                    }
                  },
                  "features": {
                    "type": "object",
                    "description": "Features details to update",
                    "properties": {
                      "users": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of multi-users"
                      },
                      "landingPage": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of landing pages"
                      },
                      "inbox": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of inboxes"
                      }
                    }
                  }
                },
                "example": {
                  "credits": {
                    "email": 5000
                  },
                  "features": {
                    "users": 15,
                    "landingPage": 20,
                    "inbox": 10
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Sub account plan updated",
            "content": {}
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a master account",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "code": "permission_denied",
                      "message": "Access forbidden."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/corporate/subAccount/ssoToken": {
      "post": {
        "tags": [
          "Master account"
        ],
        "summary": "Generate SSO token to access Sendinblue",
        "description": "This endpoint generates an sso token to authenticate and access a sub-account of the master using the account endpoint https://app.sendinblue.com/account/login/sub-account/sso/[token], where [token] will be replaced with actual token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "id"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of the sub-account organization",
                    "example": 3232323
                  },
                  "email": {
                    "type": "string",
                    "description": "User email of sub-account organization",
                    "example": "vipin+subaccount@sendinblue.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session token",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "token"
                  ],
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Session token. It will remain valid for a short period of time only.",
                      "example": "ede520dxxxxxxxxxxxx76d631fba2"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "token": "5cadaxxxxxxxxxxxxxxxxxxxx5a179f85a0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                },
                "example": {
                  "code": "invalid_parameter",
                  "message": "Invalid sub-account id."
                }
              }
            }
          },
          "403": {
            "description": "Current account is not a master account",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "code": "permission_denied",
                      "message": "Access forbidden."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/corporate/masterAccount": {
      "get": {
        "tags": [
          "Master account"
        ],
        "summary": "Get the details of requested master account",
        "description": "This endpoint will provide the details of the master account.",
        "responses": {
          "200": {
            "description": "Master account details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "Email id of master account"
                    },
                    "companyName": {
                      "type": "string",
                      "description": "Company name of master account organization"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Unique identifier of the master account organization"
                    },
                    "currencyCode": {
                      "type": "string",
                      "description": "Currency code of the master account organization"
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Timezone of the master account organization"
                    },
                    "billingInfo": {
                      "type": "object",
                      "description": "Billing details of the master account organization",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Billing email id of master account"
                        },
                        "companyName": {
                          "type": "string",
                          "description": "Company name of master account"
                        },
                        "name": {
                          "type": "object",
                          "description": "Billing name of master account holder",
                          "properties": {
                            "givenName": {
                              "type": "string",
                              "description": "First name for billing"
                            },
                            "familyName": {
                              "type": "string",
                              "description": "Last name for billing"
                            }
                          }
                        },
                        "address": {
                          "type": "object",
                          "description": "Billing address of master account",
                          "properties": {
                            "streetAddress": {
                              "type": "string",
                              "description": "Street address"
                            },
                            "locality": {
                              "type": "string",
                              "description": "Locality"
                            },
                            "postalCode": {
                              "type": "string",
                              "description": "Postal code"
                            },
                            "stateCode": {
                              "type": "string",
                              "description": "State code"
                            },
                            "countryCode": {
                              "type": "string",
                              "description": "Country code"
                            }
                          }
                        }
                      }
                    },
                    "planInfo": {
                      "type": "object",
                      "description": "Plan details",
                      "properties": {
                        "currencyCode": {
                          "type": "string",
                          "description": "Plan currency"
                        },
                        "nextBillingAt": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Timestamp of next billing date"
                        },
                        "price": {
                          "type": "number",
                          "description": "Plan amount"
                        },
                        "planPeriod": {
                          "type": "string",
                          "description": "Plan period type",
                          "enum": [
                            "month",
                            "year"
                          ]
                        },
                        "subAccounts": {
                          "type": "integer",
                          "description": "Number of sub-accounts"
                        },
                        "features": {
                          "type": "array",
                          "description": "List of provided features in the plan",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the feature"
                              },
                              "unitValue": {
                                "type": "string",
                                "description": "Unit value of the feature"
                              },
                              "quantity": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Quantity provided in the plan"
                              },
                              "used": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Quantity consumed by master"
                              },
                              "remaining": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Quantity remaining in the plan"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "email": "sample@example.com",
                  "companyName": "Corp Sample 1-1",
                  "id": 1003286,
                  "currencyCode": "INR",
                  "timezone": "Europe/Paris",
                  "billingInfo": {
                    "email": "sample@example.com",
                    "companyName": "Corp Sample 1-1",
                    "name": {
                      "givenName": "Uday",
                      "familyName": "Pandit"
                    },
                    "address": {
                      "streetAddress": "C-92",
                      "locality": "Pandav Nagar, New Delhi",
                      "postalCode": "560048",
                      "stateCode": "UP",
                      "countryCode": "IN"
                    }
                  },
                  "planInfo": {
                    "currencyCode": "INR",
                    "nextBillingAt": 1637739295,
                    "price": 2100,
                    "planPeriod": "month",
                    "subAccounts": 15,
                    "features": [
                      {
                        "name": "MULTI_USER",
                        "unitValue": 1,
                        "quantity": 10,
                        "used": 15,
                        "remaining": 0
                      },
                      {
                        "name": "ADVANCED_REPORTING",
                        "unitValue": 1,
                        "quantity": 12,
                        "used": 1,
                        "remaining": 11
                      },
                      {
                        "name": "INBOX",
                        "unitValue": 1,
                        "quantity": 10,
                        "used": 10,
                        "remaining": 0
                      },
                      {
                        "name": "LANDING_PAGE",
                        "unitValue": 5,
                        "quantity": 10,
                        "used": 11,
                        "remaining": 0
                      },
                      {
                        "name": "RECURRING_CREDITS",
                        "unitValue": 1,
                        "quantity": 500,
                        "used": 1,
                        "remaining": 499
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get one Task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the Task by id",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "taskTypeId",
                    "name",
                    "date"
                  ],
                  "type": "object",
                  "description": "Task Details",
                  "properties": {
                    "firstContact": {
                      "required": [
                        "email",
                        "crmLists"
                      ],
                      "type": "object",
                      "description": "Contact Details",
                      "properties": {
                        "virtualNextTask": {
                          "type": "object",
                          "description": "Next incomplete task of contact",
                          "default": null,
                          "example": {
                            "id": "618e030658282f0555259086",
                            "date": "2021-11-12T06:30:00+00:00",
                            "done": false
                          }
                        },
                        "email": {
                          "type": "string",
                          "description": "Contact email",
                          "example": "contact@example.com"
                        },
                        "assignToId": {
                          "type": "string",
                          "description": "User id to whom contact is assigned",
                          "example": "5faab4b7f195bb3c4c31e62a"
                        },
                        "contactsId": {
                          "type": "integer",
                          "description": "Contact id",
                          "example": 247
                        },
                        "crmLists": {
                          "additionalProperties": true,
                          "type": "object",
                          "description": "CRM lists in which contact is added",
                          "example": [
                            43,
                            58
                          ]
                        },
                        "attributes": {
                          "type": "object",
                          "description": "Contact attributes e.g firstname / lastname / SMS etc.",
                          "example": {
                            "SMS": "33058407250",
                            "IDENTIFICATION": "1-3RHQ-259",
                            "CIV": "MS",
                            "LAST_NAME": "Brennon",
                            "FIRST_NAME": "Meg",
                            "DOB": "1986-05-02T00:00:00.000Z",
                            "ADDRESS": "1 5th avenue",
                            "ZIP_CODE": "44300",
                            "CITY": "New-York",
                            "ACTION_CODE": "17HH98CH"
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2017-05-01T17:05:03.000Z",
                          "description": "Contact created date/time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2017-05-01T17:05:03.000Z",
                          "description": "Contact updated date/time"
                        }
                      }
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique task id",
                      "example": "61a5cd07ca1347c82306ad06"
                    },
                    "taskTypeId": {
                      "type": "string",
                      "description": "Id for type of task e.g Call / Email / Meeting etc.",
                      "example": "61a5cd07ca1347c82306ad09"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of task",
                      "example": "Task: Connect with client"
                    },
                    "contactsIds": {
                      "items": {
                        "type": "integer"
                      },
                      "type": "array",
                      "description": "Contact ids for contacts linked to this task",
                      "example": [
                        1,
                        2,
                        3
                      ]
                    },
                    "contacts": {
                      "items": {
                        "required": [
                          "email",
                          "crmLists"
                        ],
                        "type": "object",
                        "description": "Contact Details",
                        "properties": {
                          "virtualNextTask": {
                            "type": "object",
                            "description": "Next incomplete task of contact",
                            "default": null,
                            "example": {
                              "id": "618e030658282f0555259086",
                              "date": "2021-11-12T06:30:00+00:00",
                              "done": false
                            }
                          },
                          "email": {
                            "type": "string",
                            "description": "Contact email",
                            "example": "contact@example.com"
                          },
                          "assignToId": {
                            "type": "string",
                            "description": "User id to whom contact is assigned",
                            "example": "5faab4b7f195bb3c4c31e62a"
                          },
                          "contactsId": {
                            "type": "integer",
                            "description": "Contact id",
                            "example": 247
                          },
                          "crmLists": {
                            "additionalProperties": true,
                            "type": "object",
                            "description": "CRM lists in which contact is added",
                            "example": [
                              43,
                              58
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "description": "Contact attributes e.g firstname / lastname / SMS etc.",
                            "example": {
                              "SMS": "33058407250",
                              "IDENTIFICATION": "1-3RHQ-259",
                              "CIV": "MS",
                              "LAST_NAME": "Brennon",
                              "FIRST_NAME": "Meg",
                              "DOB": "1986-05-02T00:00:00.000Z",
                              "ADDRESS": "1 5th avenue",
                              "ZIP_CODE": "44300",
                              "CITY": "New-York",
                              "ACTION_CODE": "17HH98CH"
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-05-01T17:05:03.000Z",
                            "description": "Contact created date/time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-05-01T17:05:03.000Z",
                            "description": "Contact updated date/time"
                          }
                        }
                      },
                      "type": "array",
                      "description": "Contact details for contacts linked to this task",
                      "example": [
                        {
                          "email": "contact@example.com",
                          "id": 247,
                          "emailBlacklisted": true,
                          "smsBlacklisted": true,
                          "createdAt": "2017-05-01T17:05:03.000Z",
                          "modifiedAt": "2017-05-01T17:05:03.000Z",
                          "listIds": [
                            1,
                            2
                          ],
                          "attributes": {
                            "SMS": "33058407250",
                            "IDENTIFICATION": "1-3RHQ-259",
                            "CIV": "MS",
                            "LAST_NAME": "Brennon",
                            "FIRST_NAME": "Meg",
                            "DOB": "1986-05-02T00:00:00.000Z",
                            "ADDRESS": "1 5th avenue",
                            "ZIP_CODE": "44300",
                            "CITY": "New-York",
                            "ACTION_CODE": "17HH98CH"
                          }
                        },
                        {
                          "email": "33058407248@mailin-sms.com",
                          "id": 245,
                          "emailBlacklisted": true,
                          "smsBlacklisted": false,
                          "createdAt": "2017-05-01T17:05:03.000Z",
                          "modifiedAt": "2017-05-01T17:05:03.000Z",
                          "listIds": [
                            1,
                            2,
                            3
                          ],
                          "attributes": {
                            "SMS": "33058407248",
                            "IDENTIFICATION": "1-78JS-432",
                            "CIV": "MS",
                            "LAST_NAME": "Press",
                            "FIRST_NAME": "Sophia",
                            "DOB": "1980-09-11T00:00:00.000Z",
                            "ADDRESS": "5 Flower Street",
                            "ZIP_CODE": "44119",
                            "CITY": "Seattle",
                            "ACTION_CODE": "17HU765"
                          }
                        }
                      ]
                    },
                    "dealsIds": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "description": "Deal ids for deals a task is linked to",
                      "example": [
                        "61a5ce58c5d4795761045990",
                        "61a5ce58c5d4795761045991",
                        "61a5ce58c5d4795761045992"
                      ]
                    },
                    "companiesIds": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "description": "Companies ids for companies a task is linked to",
                      "example": [
                        "61a5ce58c5d4795761045990",
                        "61a5ce58c5d4795761045991",
                        "61a5ce58c5d4795761045992"
                      ]
                    },
                    "assignToId": {
                      "type": "string",
                      "description": "User id to whom task is assigned",
                      "example": "5faab4b7f195bb3c4c31e62a"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-01T17:44:54.668Z",
                      "description": "Task date/time"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Duration of task",
                      "example": 900000
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes added to a task",
                      "example": "In communication with client for resolution of queries."
                    },
                    "done": {
                      "type": "boolean",
                      "description": "Task marked as done",
                      "example": false
                    },
                    "reminder": {
                      "description": "Task reminder date/time for a task",
                      "required": [
                        "value",
                        "unit",
                        "types"
                      ],
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "example": 10,
                          "description": "Value of time unit before reminder is to be sent"
                        },
                        "unit": {
                          "type": "string",
                          "enum": [
                            "minutes",
                            "hours",
                            "weeks",
                            "days"
                          ],
                          "description": "Unit of time before reminder is to be sent",
                          "example": "minutes"
                        },
                        "types": {
                          "items": {
                            "type": "string"
                          },
                          "enum": [
                            "email",
                            "push"
                          ],
                          "description": "Type of task reminder",
                          "type": "array",
                          "example": [
                            "email"
                          ]
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-01T17:44:54.668Z",
                      "description": "Task created date/time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-01T17:44:54.668Z",
                      "description": "Task update date/time"
                    },
                    "refs": {
                      "type": "object",
                      "example": {
                        "dealsIds": [
                          {
                            "id": "61a5ce58c5d4795761045990",
                            "attributes": {
                              "deal_name": "Deal Example",
                              "deal_owner": "5faab4b7f195bb3c4c31e62a",
                              "pipeline": "61122683f86562145185b489",
                              "deal_stage": "3d696d83-c75b-404d-b062-680186b8bbb",
                              "stage_updated_at": "2017-11-22T09:23:44.213Z",
                              "created_at": "2017-09-24T12:33:24.657Z",
                              "number_of_contacts": 1,
                              "last_updated_date": "2019-11-22T09:23:44.246Z",
                              "last_activity_date": "2017-09-30T06:44:15.765Z",
                              "next_activity_date": null,
                              "number_of_activities": 1,
                              "close_date": "2019-11-21T18:30:00.000Z",
                              "actual_close_date": "2019-11-22T09:23:44.213Z",
                              "total_revenue": 0
                            },
                            "companyTimelineEnabledFrom": null,
                            "linkedContactsIds": [
                              247
                            ],
                            "linkedCompaniesIds": []
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when task id is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "message": "Route attribute id is not valid."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returned when item not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "message": "Document not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete Task by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returned when item deleted"
          },
          "400": {
            "description": "Returned when invalid data posted",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "message": "Route attribute id is not valid."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returned when task id is not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "message": "Document not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update partial existing task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Task name.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "taskTypeId",
                  "date"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of task",
                    "example": "Task: Connect with client"
                  },
                  "duration": {
                    "type": "integer",
                    "description": "Duration of task",
                    "example": 900000
                  },
                  "taskTypeId": {
                    "type": "string",
                    "description": "Id for type of task e.g Call / Email / Meeting etc.",
                    "example": "61a5cd07ca1347c82306ad09"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-11-01T17:44:54.668Z",
                    "description": "Task date/time"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Notes added to a task",
                    "example": "In communication with client for resolution of queries."
                  },
                  "done": {
                    "type": "boolean",
                    "description": "Task marked as done",
                    "example": false
                  },
                  "assignToId": {
                    "type": "string",
                    "description": "User id to whom task is assigned",
                    "example": "5faab4b7f195bb3c4c31e62a"
                  },
                  "contactsIds": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array",
                    "description": "Contact ids for contacts linked to this task",
                    "example": [
                      1,
                      2,
                      3
                    ]
                  },
                  "dealsIds": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "description": "Deal ids for deals a task is linked to",
                    "example": [
                      "61a5ce58c5d4795761045990",
                      "61a5ce58c5d4795761045991",
                      "61a5ce58c5d4795761045992"
                    ]
                  },
                  "companiesIds": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "description": "Companies ids for companies a task is linked to",
                    "example": [
                      "61a5ce58c5d4795761045990",
                      "61a5ce58c5d4795761045991",
                      "61a5ce58c5d4795761045992"
                    ]
                  },
                  "reminder": {
                    "required": [
                      "value",
                      "unit",
                      "types"
                    ],
                    "type": "object",
                    "description": "Task reminder date/time for a task",
                    "properties": {
                      "value": {
                        "type": "integer",
                        "example": 10,
                        "description": "Value of time unit before reminder is to be sent"
                      },
                      "unit": {
                        "type": "string",
                        "enum": [
                          "minutes",
                          "hours",
                          "weeks",
                          "days"
                        ],
                        "description": "Unit of time before reminder is to be sent",
                        "example": "minutes"
                      },
                      "types": {
                        "items": {
                          "type": "string"
                        },
                        "enum": [
                          "email",
                          "push"
                        ],
                        "description": "Type of task reminder",
                        "type": "array",
                        "example": [
                          "email"
                        ]
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return updated task",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "taskTypeId",
                    "name",
                    "date"
                  ],
                  "type": "object",
                  "description": "Task Details",
                  "properties": {
                    "firstContact": {
                      "required": [
                        "email",
                        "crmLists"
                      ],
                      "type": "object",
                      "description": "Contact Details",
                      "properties": {
                        "virtualNextTask": {
                          "type": "object",
                          "description": "Next incomplete task of contact",
                          "default": null,
                          "example": {
                            "id": "618e030658282f0555259086",
                            "date": "2021-11-12T06:30:00+00:00",
                            "done": false
                          }
                        },
                        "email": {
                          "type": "string",
                          "description": "Contact email",
                          "example": "contact@example.com"
                        },
                        "assignToId": {
                          "type": "string",
                          "description": "User id to whom contact is assigned",
                          "example": "5faab4b7f195bb3c4c31e62a"
                        },
                        "contactsId": {
                          "type": "integer",
                          "description": "Contact id",
                          "example": 247
                        },
                        "crmLists": {
                          "additionalProperties": true,
                          "type": "object",
                          "description": "CRM lists in which contact is added",
                          "example": [
                            43,
                            58
                          ]
                        },
                        "attributes": {
                          "type": "object",
                          "description": "Contact attributes e.g firstname / lastname / SMS etc.",
                          "example": {
                            "SMS": "33058407250",
                            "IDENTIFICATION": "1-3RHQ-259",
                            "CIV": "MS",
                            "LAST_NAME": "Brennon",
                            "FIRST_NAME": "Meg",
                            "DOB": "1986-05-02T00:00:00.000Z",
                            "ADDRESS": "1 5th avenue",
                            "ZIP_CODE": "44300",
                            "CITY": "New-York",
                            "ACTION_CODE": "17HH98CH"
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2017-05-01T17:05:03.000Z",
                          "description": "Contact created date/time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2017-05-01T17:05:03.000Z",
                          "description": "Contact updated date/time"
                        }
                      }
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique task id",
                      "example": "61a5cd07ca1347c82306ad06"
                    },
                    "taskTypeId": {
                      "type": "string",
                      "description": "Id for type of task e.g Call / Email / Meeting etc.",
                      "example": "61a5cd07ca1347c82306ad09"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of task",
                      "example": "Task: Connect with client"
                    },
                    "contactsIds": {
                      "items": {
                        "type": "integer"
                      },
                      "type": "array",
                      "description": "Contact ids for contacts linked to this task",
                      "example": [
                        1,
                        2,
                        3
                      ]
                    },
                    "contacts": {
                      "items": {
                        "required": [
                          "email",
                          "crmLists"
                        ],
                        "type": "object",
                        "description": "Contact Details",
                        "properties": {
                          "virtualNextTask": {
                            "type": "object",
                            "description": "Next incomplete task of contact",
                            "default": null,
                            "example": {
                              "id": "618e030658282f0555259086",
                              "date": "2021-11-12T06:30:00+00:00",
                              "done": false
                            }
                          },
                          "email": {
                            "type": "string",
                            "description": "Contact email",
                            "example": "contact@example.com"
                          },
                          "assignToId": {
                            "type": "string",
                            "description": "User id to whom contact is assigned",
                            "example": "5faab4b7f195bb3c4c31e62a"
                          },
                          "contactsId": {
                            "type": "integer",
                            "description": "Contact id",
                            "example": 247
                          },
                          "crmLists": {
                            "additionalProperties": true,
                            "type": "object",
                            "description": "CRM lists in which contact is added",
                            "example": [
                              43,
                              58
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "description": "Contact attributes e.g firstname / lastname / SMS etc.",
                            "example": {
                              "SMS": "33058407250",
                              "IDENTIFICATION": "1-3RHQ-259",
                              "CIV": "MS",
                              "LAST_NAME": "Brennon",
                              "FIRST_NAME": "Meg",
                              "DOB": "1986-05-02T00:00:00.000Z",
                              "ADDRESS": "1 5th avenue",
                              "ZIP_CODE": "44300",
                              "CITY": "New-York",
                              "ACTION_CODE": "17HH98CH"
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-05-01T17:05:03.000Z",
                            "description": "Contact created date/time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-05-01T17:05:03.000Z",
                            "description": "Contact updated date/time"
                          }
                        }
                      },
                      "type": "array",
                      "description": "Contact details for contacts linked to this task",
                      "example": [
                        {
                          "email": "contact@example.com",
                          "id": 247,
                          "emailBlacklisted": true,
                          "smsBlacklisted": true,
                          "createdAt": "2017-05-01T17:05:03.000Z",
                          "modifiedAt": "2017-05-01T17:05:03.000Z",
                          "listIds": [
                            1,
                            2
                          ],
                          "attributes": {
                            "SMS": "33058407250",
                            "IDENTIFICATION": "1-3RHQ-259",
                            "CIV": "MS",
                            "LAST_NAME": "Brennon",
                            "FIRST_NAME": "Meg",
                            "DOB": "1986-05-02T00:00:00.000Z",
                            "ADDRESS": "1 5th avenue",
                            "ZIP_CODE": "44300",
                            "CITY": "New-York",
                            "ACTION_CODE": "17HH98CH"
                          }
                        },
                        {
                          "email": "33058407248@mailin-sms.com",
                          "id": 245,
                          "emailBlacklisted": true,
                          "smsBlacklisted": false,
                          "createdAt": "2017-05-01T17:05:03.000Z",
                          "modifiedAt": "2017-05-01T17:05:03.000Z",
                          "listIds": [
                            1,
                            2,
                            3
                          ],
                          "attributes": {
                            "SMS": "33058407248",
                            "IDENTIFICATION": "1-78JS-432",
                            "CIV": "MS",
                            "LAST_NAME": "Press",
                            "FIRST_NAME": "Sophia",
                            "DOB": "1980-09-11T00:00:00.000Z",
                            "ADDRESS": "5 Flower Street",
                            "ZIP_CODE": "44119",
                            "CITY": "Seattle",
                            "ACTION_CODE": "17HU765"
                          }
                        }
                      ]
                    },
                    "dealsIds": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "description": "Deal ids for deals a task is linked to",
                      "example": [
                        "61a5ce58c5d4795761045990",
                        "61a5ce58c5d4795761045991",
                        "61a5ce58c5d4795761045992"
                      ]
                    },
                    "companiesIds": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "description": "Companies ids for companies a task is linked to",
                      "example": [
                        "61a5ce58c5d4795761045990",
                        "61a5ce58c5d4795761045991",
                        "61a5ce58c5d4795761045992"
                      ]
                    },
                    "assignToId": {
                      "type": "string",
                      "description": "User id to whom task is assigned",
                      "example": "5faab4b7f195bb3c4c31e62a"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-01T17:44:54.668Z",
                      "description": "Task date/time"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Duration of task",
                      "example": 900000
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes added to a task",
                      "example": "In communication with client for resolution of queries."
                    },
                    "done": {
                      "type": "boolean",
                      "description": "Task marked as done",
                      "example": false
                    },
                    "reminder": {
                      "description": "Task reminder date/time for a task",
                      "required": [
                        "value",
                        "unit",
                        "types"
                      ],
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "integer",
                          "example": 10,
                          "description": "Value of time unit before reminder is to be sent"
                        },
                        "unit": {
                          "type": "string",
                          "enum": [
                            "minutes",
                            "hours",
                            "weeks",
                            "days"
                          ],
                          "description": "Unit of time before reminder is to be sent",
                          "example": "minutes"
                        },
                        "types": {
                          "items": {
                            "type": "string"
                          },
                          "enum": [
                            "email",
                            "push"
                          ],
                          "description": "Type of task reminder",
                          "type": "array",
                          "example": [
                            "email"
                          ]
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-01T17:44:54.668Z",
                      "description": "Task created date/time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-11-01T17:44:54.668Z",
                      "description": "Task update date/time"
                    },
                    "refs": {
                      "type": "object",
                      "example": {
                        "dealsIds": [
                          {
                            "id": "61a5ce58c5d4795761045990",
                            "attributes": {
                              "deal_name": "Deal Example",
                              "deal_owner": "5faab4b7f195bb3c4c31e62a",
                              "pipeline": "61122683f86562145185b489",
                              "deal_stage": "3d696d83-c75b-404d-b062-680186b8bbb",
                              "stage_updated_at": "2017-11-22T09:23:44.213Z",
                              "created_at": "2017-09-24T12:33:24.657Z",
                              "number_of_contacts": 1,
                              "last_updated_date": "2019-11-22T09:23:44.246Z",
                              "last_activity_date": "2017-09-30T06:44:15.765Z",
                              "next_activity_date": null,
                              "number_of_activities": 1,
                              "close_date": "2019-11-21T18:30:00.000Z",
                              "actual_close_date": "2019-11-22T09:23:44.213Z",
                              "total_revenue": 0
                            },
                            "companyTimelineEnabledFrom": null,
                            "linkedContactsIds": [
                              247
                            ],
                            "linkedCompaniesIds": []
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned when invalid data posted",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "message": "Route attribute id is not valid."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returned when task id is not found",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Error code displayed in case of a failure",
                      "example": "method_not_allowed",
                      "enum": [
                        "invalid_parameter",
                        "missing_parameter",
                        "out_of_range",
                        "campaign_processing",
                        "campaign_sent",
                        "document_not_found",
                        "reseller_permission_denied",
                        "not_enough_credits",
                        "permission_denied",
                        "duplicate_parameter",
                        "duplicate_request",
                        "method_not_allowed",
                        "unauthorized",
                        "account_under_validation",
                        "not_acceptable"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Readable message associated to the failure",
                      "example": "POST Method is not allowed on this path"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "message": "Document not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "getAccount": {
        "allOf": [
          {
            "allOf": [
              {
                "required": [
                  "companyName",
                  "email",
                  "firstName",
                  "lastName"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Login Email",
                    "format": "email",
                    "example": "john.smith@example.com"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "First Name",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last Name",
                    "example": "Smith"
                  },
                  "companyName": {
                    "type": "string",
                    "description": "Name of the company",
                    "example": "MyCompany"
                  }
                }
              },
              {
                "required": [
                  "address"
                ],
                "type": "object",
                "properties": {
                  "address": {
                    "required": [
                      "city",
                      "country",
                      "street",
                      "zipCode"
                    ],
                    "type": "object",
                    "properties": {
                      "street": {
                        "type": "string",
                        "description": "Street information",
                        "example": "47 Harbour Street"
                      },
                      "city": {
                        "type": "string",
                        "description": "City information",
                        "example": "New-York"
                      },
                      "zipCode": {
                        "type": "string",
                        "description": "Zip Code information",
                        "example": "9867"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country information",
                        "example": "United States of America"
                      }
                    },
                    "description": "Address informations"
                  }
                }
              }
            ]
          },
          {
            "required": [
              "plan",
              "relay"
            ],
            "type": "object",
            "properties": {
              "plan": {
                "type": "array",
                "description": "Information about your plans and credits",
                "items": {
                  "required": [
                    "credits",
                    "creditsType",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Displays the plan type of the user",
                      "example": "subscription",
                      "enum": [
                        "payAsYouGo",
                        "free",
                        "subscription",
                        "sms",
                        "reseller"
                      ]
                    },
                    "creditsType": {
                      "type": "string",
                      "description": "This is the type of the credit, \"Send Limit\" is one of the possible types of credit of a user. \"Send Limit\" implies the total number of emails you can send to the subscribers in your account.",
                      "example": "sendLimit",
                      "enum": [
                        "sendLimit"
                      ]
                    },
                    "credits": {
                      "type": "number",
                      "description": "Remaining credits of the user",
                      "format": "float",
                      "example": 8755
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Date of the period from which the plan will start (only available for \"subscription\" and \"reseller\" plan type)",
                      "format": "date",
                      "example": "2016-12-31"
                    },
                    "endDate": {
                      "type": "string",
                      "description": "Date of the period from which the plan will end (only available for \"subscription\" and \"reseller\" plan type)",
                      "format": "date",
                      "example": "2017-01-31"
                    },
                    "userLimit": {
                      "type": "integer",
                      "description": "Only in case of reseller account. It implies the total number of child accounts you can add to your account.",
                      "example": 10
                    }
                  }
                }
              },
              "relay": {
                "required": [
                  "data",
                  "enabled"
                ],
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Status of your transactional email Account (true=Enabled, false=Disabled)",
                    "example": true
                  },
                  "data": {
                    "required": [
                      "port",
                      "relay",
                      "userName"
                    ],
                    "type": "object",
                    "properties": {
                      "userName": {
                        "type": "string",
                        "description": "Email to use as login on transactional platform",
                        "format": "email",
                        "example": "john.smith@example.com"
                      },
                      "relay": {
                        "type": "string",
                        "description": "URL of the SMTP Relay",
                        "example": "relay.domain.com"
                      },
                      "port": {
                        "type": "integer",
                        "description": "Port used for SMTP Relay",
                        "example": 125
                      }
                    },
                    "description": "Data regarding the transactional email account"
                  }
                },
                "description": "Information about your transactional email account"
              },
              "marketingAutomation": {
                "required": [
                  "enabled"
                ],
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Marketing Automation Tracker ID",
                    "example": "iso05aopqych87ysy0jymf"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Status of Marketing Automation Plateform activation for your account (true=enabled, false=disabled)",
                    "example": false
                  }
                }
              }
            }
          }
        ]
      },
      "getChildrenList": {
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "description": "Your children's account information",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "allOf": [
                    {
                      "required": [
                        "companyName",
                        "email",
                        "firstName",
                        "lastName"
                      ],
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Login Email",
                          "format": "email",
                          "example": "john.smith@example.com"
                        },
                        "firstName": {
                          "type": "string",
                          "description": "First Name",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Last Name",
                          "example": "Smith"
                        },
                        "companyName": {
                          "type": "string",
                          "description": "Name of the company",
                          "example": "MyCompany"
                        }
                      }
                    },
                    {
                      "required": [
                        "password"
                      ],
                      "type": "object",
                      "properties": {
                        "credits": {
                          "type": "object",
                          "properties": {
                            "emailCredits": {
                              "type": "integer",
                              "description": "Email credits available for your child",
                              "format": "int64",
                              "example": 98555
                            },
                            "smsCredits": {
                              "type": "integer",
                              "description": "SMS credits available for your child",
                              "format": "int64",
                              "example": 87556
                            }
                          },
                          "description": "Credits available for your child"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "previousMonthTotalSent": {
                              "type": "integer",
                              "description": "Overall emails sent for the previous month",
                              "format": "int64",
                              "example": 7654
                            },
                            "currentMonthTotalSent": {
                              "type": "integer",
                              "description": "Overall emails sent for current month",
                              "format": "int64",
                              "example": 4566
                            },
                            "totalSent": {
                              "type": "integer",
                              "description": "Overall emails sent for since the account exists",
                              "format": "int64",
                              "example": 987554
                            }
                          },
                          "description": "Statistics about your child account activity"
                        },
                        "password": {
                          "type": "string",
                          "description": "The encrypted password of child account",
                          "format": "password",
                          "example": "abC01De2fGHI3jkL"
                        },
                        "ips": {
                          "type": "array",
                          "description": "IP(s) associated to a child account user",
                          "items": {
                            "type": "string",
                            "description": "IP(s) associated to the user",
                            "example": ""
                          }
                        },
                        "apiKeys": {
                          "required": [
                            "v2"
                          ],
                          "type": "object",
                          "properties": {
                            "v2": {
                              "type": "array",
                              "items": {
                                "required": [
                                  "key",
                                  "name"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the key for version 2",
                                    "example": "N˚2"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "API Key for version 2",
                                    "example": "nOpxxxxxy7z"
                                  }
                                }
                              }
                            },
                            "v3": {
                              "type": "array",
                              "items": {
                                "required": [
                                  "key",
                                  "name"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the key for version 3",
                                    "example": "N˚3"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "API Key for version 3",
                                    "example": "xkeysib-21881axxxxxcc92e04-mIrexxxx7z"
                                  }
                                }
                              }
                            }
                          },
                          "description": "API Keys associated to child account"
                        }
                      }
                    }
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the child",
                      "format": "int64",
                      "example": 187588
                    }
                  }
                }
              ]
            }
          },
          "count": {
            "type": "integer",
            "description": "Number of child accounts",
            "format": "int64",
            "example": 24
          }
        }
      },
      "getChildInfo": {
        "allOf": [
          {
            "required": [
              "companyName",
              "email",
              "firstName",
              "lastName"
            ],
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Login Email",
                "format": "email",
                "example": "john.smith@example.com"
              },
              "firstName": {
                "type": "string",
                "description": "First Name",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "description": "Last Name",
                "example": "Smith"
              },
              "companyName": {
                "type": "string",
                "description": "Name of the company",
                "example": "MyCompany"
              }
            }
          },
          {
            "required": [
              "password"
            ],
            "type": "object",
            "properties": {
              "credits": {
                "type": "object",
                "properties": {
                  "emailCredits": {
                    "type": "integer",
                    "description": "Email credits available for your child",
                    "format": "int64",
                    "example": 98555
                  },
                  "smsCredits": {
                    "type": "integer",
                    "description": "SMS credits available for your child",
                    "format": "int64",
                    "example": 87556
                  }
                },
                "description": "Credits available for your child"
              },
              "statistics": {
                "type": "object",
                "properties": {
                  "previousMonthTotalSent": {
                    "type": "integer",
                    "description": "Overall emails sent for the previous month",
                    "format": "int64",
                    "example": 7654
                  },
                  "currentMonthTotalSent": {
                    "type": "integer",
                    "description": "Overall emails sent for current month",
                    "format": "int64",
                    "example": 4566
                  },
                  "totalSent": {
                    "type": "integer",
                    "description": "Overall emails sent for since the account exists",
                    "format": "int64",
                    "example": 987554
                  }
                },
                "description": "Statistics about your child account activity"
              },
              "password": {
                "type": "string",
                "description": "The encrypted password of child account",
                "format": "password",
                "example": "abC01De2fGHI3jkL"
              },
              "ips": {
                "type": "array",
                "description": "IP(s) associated to a child account user",
                "items": {
                  "type": "string",
                  "description": "IP(s) associated to the user",
                  "example": ""
                }
              },
              "apiKeys": {
                "required": [
                  "v2"
                ],
                "type": "object",
                "properties": {
                  "v2": {
                    "type": "array",
                    "items": {
                      "required": [
                        "key",
                        "name"
                      ],
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the key for version 2",
                          "example": "N˚2"
                        },
                        "key": {
                          "type": "string",
                          "description": "API Key for version 2",
                          "example": "nOpxxxxxy7z"
                        }
                      }
                    }
                  },
                  "v3": {
                    "type": "array",
                    "items": {
                      "required": [
                        "key",
                        "name"
                      ],
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the key for version 3",
                          "example": "N˚3"
                        },
                        "key": {
                          "type": "string",
                          "description": "API Key for version 3",
                          "example": "xkeysib-21881axxxxxcc92e04-mIrexxxx7z"
                        }
                      }
                    }
                  }
                },
                "description": "API Keys associated to child account"
              }
            }
          }
        ]
      },
      "getChildAccountCreationStatus": {
        "required": [
          "childAccountCreated"
        ],
        "type": "object",
        "properties": {
          "childAccountCreated": {
            "type": "boolean",
            "description": "Status of child account creation whether it is successfully created (exists) or not.",
            "example": true
          }
        }
      },
      "getChildDomains": {
        "type": "array",
        "items": {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "description": "Sender domain",
                  "example": "mycustomdomain.com"
                },
                "active": {
                  "type": "boolean",
                  "description": "indicates whether a domain is verified or not",
                  "example": true
                }
              }
            }
          ]
        }
      },
      "getSsoToken": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Session token. It will remain valid for a short period of time only.",
            "example": "ede520dxxxxxxxxxxxx76d631fba2"
          }
        }
      },
      "getChildDomain": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Sender domain",
            "example": "mycustomdomain.com"
          },
          "active": {
            "type": "boolean",
            "description": "indicates whether a domain is verified or not",
            "example": true
          }
        }
      },
      "getClient": {
        "required": [
          "companyName",
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Login Email",
            "format": "email",
            "example": "john.smith@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "First Name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name",
            "example": "Smith"
          },
          "companyName": {
            "type": "string",
            "description": "Name of the company",
            "example": "MyCompany"
          }
        }
      },
      "getExtendedClient": {
        "allOf": [
          {
            "required": [
              "companyName",
              "email",
              "firstName",
              "lastName"
            ],
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Login Email",
                "format": "email",
                "example": "john.smith@example.com"
              },
              "firstName": {
                "type": "string",
                "description": "First Name",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "description": "Last Name",
                "example": "Smith"
              },
              "companyName": {
                "type": "string",
                "description": "Name of the company",
                "example": "MyCompany"
              }
            }
          },
          {
            "required": [
              "address"
            ],
            "type": "object",
            "properties": {
              "address": {
                "required": [
                  "city",
                  "country",
                  "street",
                  "zipCode"
                ],
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "description": "Street information",
                    "example": "47 Harbour Street"
                  },
                  "city": {
                    "type": "string",
                    "description": "City information",
                    "example": "New-York"
                  },
                  "zipCode": {
                    "type": "string",
                    "description": "Zip Code information",
                    "example": "9867"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country information",
                    "example": "United States of America"
                  }
                },
                "description": "Address informations"
              }
            }
          }
        ]
      },
      "getSendersList": {
        "type": "object",
        "properties": {
          "senders": {
            "type": "array",
            "description": "List of the senders available in your account",
            "items": {
              "required": [
                "active",
                "email",
                "id",
                "name"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id of the sender",
                  "format": "int64",
                  "example": 0
                },
                "name": {
                  "type": "string",
                  "description": "From Name associated to the sender",
                  "example": "Marketing"
                },
                "email": {
                  "type": "string",
                  "description": "From Email associated to the sender",
                  "example": "marketing@mycompany.com"
                },
                "active": {
                  "type": "boolean",
                  "description": "Status of sender (true=activated, false=deactivated)",
                  "example": false
                },
                "ips": {
                  "type": "array",
                  "description": "List of dedicated IP(s) available in the account. This data is displayed only for dedicated IPs",
                  "items": {
                    "required": [
                      "domain",
                      "ip",
                      "weight"
                    ],
                    "type": "object",
                    "properties": {
                      "ip": {
                        "type": "string",
                        "description": "Dedicated IP available in your account",
                        "example": "123.98.689.7"
                      },
                      "domain": {
                        "type": "string",
                        "description": "Domain of the IP",
                        "example": "mycompany.com"
                      },
                      "weight": {
                        "type": "integer",
                        "description": "Weight of the IP for this sender",
                        "format": "int64",
                        "example": 50
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "createChild": {
        "required": [
          "companyName",
          "email",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address to create the child account",
            "format": "email",
            "example": "josh.cruise@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "First name to use to create the child account",
            "example": "Josh"
          },
          "lastName": {
            "type": "string",
            "description": "Last name to use to create the child account",
            "example": "Cruise"
          },
          "companyName": {
            "type": "string",
            "description": "Company name to use to create the child account",
            "example": "Your Company"
          },
          "password": {
            "type": "string",
            "description": "Password for the child account to login",
            "format": "password",
            "example": "Pa55w0rd65"
          },
          "language": {
            "type": "string",
            "description": "Language of the child account",
            "example": "en",
            "enum": [
              "fr",
              "es",
              "pt",
              "it",
              "de",
              "en"
            ]
          }
        }
      },
      "createSender": {
        "required": [
          "email",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "From Name to use for the sender",
            "example": "Newsletter"
          },
          "email": {
            "type": "string",
            "description": "From email to use for the sender. A verification email will be sent to this address.",
            "format": "email",
            "example": "newsletter@mycompany.com"
          },
          "ips": {
            "type": "array",
            "description": "**Mandatory in case of dedicated IP**. IPs to associate to the sender\n",
            "items": {
              "required": [
                "domain",
                "ip"
              ],
              "type": "object",
              "properties": {
                "ip": {
                  "type": "string",
                  "description": "Dedicated IP available in your account",
                  "example": "123.98.689.7"
                },
                "domain": {
                  "type": "string",
                  "description": "Domain of the IP",
                  "example": "mycompany.com"
                },
                "weight": {
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer",
                  "description": "Weight to apply to the IP. Sum of all IP weights must be 100. Should be passed for either ALL or NONE of the IPs. If it's not passed, the sending will be equally balanced on all IPs.",
                  "format": "int64",
                  "example": 50
                }
              }
            }
          }
        }
      },
      "updateSender": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "From Name to update the sender",
            "example": "Newsletter"
          },
          "email": {
            "type": "string",
            "description": "From Email to update the sender",
            "format": "email",
            "example": "newsletter@mycompany.com"
          },
          "ips": {
            "type": "array",
            "description": "**Only in case of dedicated IP**. IPs to associate to the sender. If passed, will replace all the existing IPs.\n",
            "items": {
              "required": [
                "domain",
                "ip"
              ],
              "type": "object",
              "properties": {
                "ip": {
                  "type": "string",
                  "description": "Dedicated IP available in your account",
                  "example": "123.98.689.7"
                },
                "domain": {
                  "type": "string",
                  "description": "Domain of the IP",
                  "example": "mycompany.com"
                },
                "weight": {
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer",
                  "description": "Weight to apply to the IP. Sum of all IP weights must be 100. Should be passed for either ALL or NONE of the IPs. If it's not passed, the sending will be equally balanced on all IPs.",
                  "format": "int64",
                  "example": 50
                }
              }
            }
          }
        }
      },
      "updateChild": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "New Email address to update the child account",
            "format": "email",
            "example": "josh.cruise@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "New First name to use to update the child account",
            "example": "Josh"
          },
          "lastName": {
            "type": "string",
            "description": "New Last name to use to update the child account",
            "example": "Cruise"
          },
          "companyName": {
            "type": "string",
            "description": "New Company name to use to update the child account",
            "example": "Your Company"
          },
          "password": {
            "type": "string",
            "description": "New password for the child account to login",
            "format": "password",
            "example": "Pa55w0rd65"
          }
        }
      },
      "updateChildAccountStatus": {
        "type": "object",
        "properties": {
          "transactionalEmail": {
            "type": "boolean",
            "description": "Status of Transactional Email Platform activation for your account (true=enabled, false=disabled)",
            "example": false
          },
          "transactionalSms": {
            "type": "boolean",
            "description": "Status of Transactional SMS Platform activation for your account (true=enabled, false=disabled)",
            "example": false
          },
          "marketingAutomation": {
            "type": "boolean",
            "description": "Status of Marketing Automation Platform activation for your account (true=enabled, false=disabled)",
            "example": true
          },
          "smsCampaign": {
            "type": "boolean",
            "description": "Status of SMS Campaign Platform activation for your account (true=enabled, false=disabled)",
            "example": true
          }
        }
      },
      "errorModel": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code displayed in case of a failure",
            "example": "method_not_allowed",
            "enum": [
              "invalid_parameter",
              "missing_parameter",
              "out_of_range",
              "campaign_processing",
              "campaign_sent",
              "document_not_found",
              "reseller_permission_denied",
              "not_enough_credits",
              "permission_denied",
              "duplicate_parameter",
              "duplicate_request",
              "method_not_allowed",
              "unauthorized",
              "account_under_validation",
              "not_acceptable"
            ]
          },
          "message": {
            "type": "string",
            "description": "Readable message associated to the failure",
            "example": "POST Method is not allowed on this path"
          }
        }
      },
      "remainingCreditModel": {
        "required": [
          "child",
          "reseller"
        ],
        "type": "object",
        "properties": {
          "child": {
            "required": [
              "email",
              "sms"
            ],
            "type": "object",
            "properties": {
              "sms": {
                "type": "number",
                "description": "SMS Credits remaining for child account",
                "format": "double",
                "example": 500
              },
              "email": {
                "type": "number",
                "description": "Email Credits remaining for child account",
                "format": "double",
                "example": 2000
              }
            },
            "description": "Credits remaining for child account"
          },
          "reseller": {
            "required": [
              "email",
              "sms"
            ],
            "type": "object",
            "properties": {
              "sms": {
                "type": "number",
                "description": "SMS Credits remaining for reseller account",
                "format": "double",
                "example": 12900
              },
              "email": {
                "type": "number",
                "description": "Email Credits remaining for reseller account",
                "format": "double",
                "example": 2000000
              }
            }
          }
        }
      },
      "addCredits": {
        "type": "object",
        "properties": {
          "sms": {
            "type": "integer",
            "description": "**Required if email credits are empty.** SMS credits to be added to the child account\n",
            "format": "int64",
            "example": 450
          },
          "email": {
            "type": "integer",
            "description": "**Required if sms credits are empty.** Email credits to be added to the child account\n",
            "format": "int64",
            "example": 1200
          }
        }
      },
      "removeCredits": {
        "type": "object",
        "properties": {
          "sms": {
            "type": "integer",
            "description": "**Required if email credits are empty.** SMS credits to be removed from the child account\n",
            "format": "int64",
            "example": 300
          },
          "email": {
            "type": "integer",
            "description": "**Required if sms credits are empty.** Email credits to be removed from the child account\n",
            "format": "int64",
            "example": 500
          }
        }
      },
      "addChildDomain": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Sender domain to add for a specific child account",
            "example": "mychilddomain.com"
          }
        }
      },
      "updateChildDomain": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Value for the sender domain that will replace the existing domain",
            "example": "myupdateddomain.com"
          }
        }
      },
      "getProcesses": {
        "type": "object",
        "properties": {
          "processes": {
            "type": "array",
            "description": "List of processes available on your account",
            "items": {
              "required": [
                "id",
                "name",
                "status"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id of the process",
                  "format": "int64",
                  "example": 145
                },
                "status": {
                  "type": "string",
                  "description": "Status of the process",
                  "example": "queued",
                  "enum": [
                    "queued",
                    "in_process",
                    "completed"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "Process name",
                  "example": "IMPORTUSER"
                },
                "export_url": {
                  "type": "string",
                  "description": "URL on which send export the of contacts once the process is completed",
                  "example": "http://requestb.in/16ua3aj1"
                }
              }
            }
          },
          "count": {
            "type": "integer",
            "description": "Number of processes available on your account",
            "format": "int64",
            "example": 5
          }
        }
      },
      "getProcess": {
        "required": [
          "id",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the process",
            "format": "int64",
            "example": 145
          },
          "status": {
            "type": "string",
            "description": "Status of the process",
            "example": "queued",
            "enum": [
              "queued",
              "in_process",
              "completed"
            ]
          },
          "name": {
            "type": "string",
            "description": "Process name",
            "example": "IMPORTUSER"
          },
          "export_url": {
            "type": "string",
            "description": "URL on which send export the of contacts once the process is completed",
            "example": "http://requestb.in/16ua3aj1"
          }
        }
      },
      "getEmailCampaigns": {
        "type": "object",
        "properties": {
          "campaigns": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "allOf": [
                    {
                      "required": [
                        "id",
                        "name",
                        "status",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of the campaign",
                          "format": "int64",
                          "example": 12
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the campaign",
                          "example": "EN - Sales Summer 2017"
                        },
                        "subject": {
                          "type": "string",
                          "description": "Subject of the campaign. Only available if `abTesting` flag of the campaign is `false`",
                          "example": "20% OFF for 2017 Summer Sales"
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of campaign",
                          "example": "classic",
                          "enum": [
                            "classic",
                            "trigger"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the campaign",
                          "example": "sent",
                          "enum": [
                            "draft",
                            "sent",
                            "archive",
                            "queued",
                            "suspended",
                            "in_process"
                          ]
                        },
                        "scheduledAt": {
                          "type": "string",
                          "description": "UTC date-time on which campaign is scheduled (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                          "example": "2017-06-01T12:30:00Z"
                        },
                        "abTesting": {
                          "type": "boolean",
                          "description": "Status of A/B Test for the campaign. abTesting = false means it is disabled, & abTesting = true means it is enabled.",
                          "example": true
                        },
                        "subjectA": {
                          "type": "string",
                          "description": "Subject A of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
                          "example": "Discover the New Collection!"
                        },
                        "subjectB": {
                          "type": "string",
                          "description": "Subject B of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
                          "example": "Want to discover the New Collection?"
                        },
                        "splitRule": {
                          "type": "integer",
                          "description": "The size of your ab-test groups. Only available if `abTesting` flag of the campaign is `true`",
                          "example": 25
                        },
                        "winnerCriteria": {
                          "type": "string",
                          "description": "Criteria for the winning version. Only available if `abTesting` flag of the campaign is `true`",
                          "example": "open"
                        },
                        "winnerDelay": {
                          "type": "integer",
                          "description": "The duration of the test in hours at the end of which the winning version will be sent. Only available if `abTesting` flag of the campaign is `true`",
                          "example": 50
                        },
                        "sendAtBestTime": {
                          "type": "boolean",
                          "description": "It is true if you have chosen to send your campaign at best time, otherwise it is false",
                          "example": true
                        }
                      }
                    },
                    {
                      "required": [
                        "createdAt",
                        "footer",
                        "header",
                        "htmlContent",
                        "modifiedAt",
                        "replyTo",
                        "sender",
                        "testSent"
                      ],
                      "type": "object",
                      "properties": {
                        "testSent": {
                          "type": "boolean",
                          "description": "Retrieved the status of test email sending. (true=Test email has been sent  false=Test email has not been sent)",
                          "example": true
                        },
                        "header": {
                          "type": "string",
                          "description": "Header of the campaign",
                          "example": "[DEFAULT_HEADER]"
                        },
                        "footer": {
                          "type": "string",
                          "description": "Footer of the campaign",
                          "example": "[DEFAULT_FOOTER]"
                        },
                        "sender": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Sender name of the campaign",
                              "example": "Marketing"
                            },
                            "email": {
                              "type": "string",
                              "description": "Sender email of the campaign",
                              "format": "email",
                              "example": "marketing@mycompany.com"
                            },
                            "id": {
                              "type": "string",
                              "description": "Sender id of the campaign",
                              "example": "43"
                            }
                          }
                        },
                        "replyTo": {
                          "type": "string",
                          "description": "Email defined as the \"Reply to\" of the campaign",
                          "format": "email",
                          "example": "replyto@domain.com"
                        },
                        "toField": {
                          "type": "string",
                          "description": "Customisation of the \"to\" field of the campaign",
                          "example": "{FNAME} {LNAME}"
                        },
                        "htmlContent": {
                          "type": "string",
                          "description": "HTML content of the campaign",
                          "example": "This is my HTML Content"
                        },
                        "shareLink": {
                          "type": "string",
                          "description": "Link to share the campaign on social medias",
                          "format": "url",
                          "example": "http://dhh.sendinblue.com/fhsgccc.html?t=9865448900"
                        },
                        "tag": {
                          "type": "string",
                          "description": "Tag of the campaign",
                          "example": "Newsletter"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "Creation UTC date-time of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                          "example": "2017-05-01T12:30:00Z"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "description": "UTC date-time of last modification of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                          "example": "2017-05-01T12:30:00Z"
                        },
                        "inlineImageActivation": {
                          "type": "boolean",
                          "description": "Status of inline image. inlineImageActivation = false means image can’t be embedded, & inlineImageActivation = true means image can be embedded, in the email.",
                          "example": true
                        },
                        "mirrorActive": {
                          "type": "boolean",
                          "description": "Status of mirror links in campaign. mirrorActive = false means mirror links are deactivated, & mirrorActive = true means mirror links are activated, in the campaign",
                          "example": true
                        },
                        "recurring": {
                          "type": "boolean",
                          "description": "FOR TRIGGER ONLY ! Type of trigger campaign.recurring = false means contact can receive the same Trigger campaign only once, & recurring = true means contact can receive the same Trigger campaign several times",
                          "example": true
                        },
                        "sentDate": {
                          "type": "string",
                          "description": "Sent UTC date-time of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ). Only available if 'status' of the campaign is 'sent'",
                          "example": "2018-12-01T16:30:00Z"
                        },
                        "returnBounce": {
                          "type": "integer",
                          "description": "Total number of non-delivered campaigns for a particular campaign id.",
                          "format": "int64",
                          "example": 5
                        }
                      }
                    }
                  ]
                },
                {
                  "required": [
                    "recipients",
                    "statistics"
                  ],
                  "type": "object",
                  "properties": {
                    "recipients": {
                      "type": "object",
                      "allOf": [
                        {
                          "required": [
                            "exclusionLists",
                            "lists"
                          ],
                          "type": "object",
                          "properties": {
                            "lists": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "description": "List IDs included in the campaign",
                                "format": "int64",
                                "example": 21
                              }
                            },
                            "exclusionLists": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "description": "List IDs excluded of the campaign",
                                "format": "int64",
                                "example": 13
                              }
                            }
                          }
                        }
                      ]
                    },
                    "statistics": {
                      "type": "object",
                      "allOf": [
                        {
                          "required": [
                            "campaignStats",
                            "globalStats",
                            "linksStats",
                            "mirrorClick",
                            "remaining",
                            "statsByBrowser",
                            "statsByDevice",
                            "statsByDomain"
                          ],
                          "type": "object",
                          "properties": {
                            "globalStats": {
                              "type": "object",
                              "description": "Overall statistics of the campaign",
                              "allOf": [
                                {
                                  "required": [
                                    "clickers",
                                    "complaints",
                                    "delivered",
                                    "hardBounces",
                                    "sent",
                                    "softBounces",
                                    "uniqueClicks",
                                    "uniqueViews",
                                    "unsubscriptions",
                                    "viewed",
                                    "trackableViews"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "listId": {
                                      "type": "integer",
                                      "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                      "format": "int64",
                                      "example": 2
                                    },
                                    "uniqueClicks": {
                                      "type": "integer",
                                      "description": "Number of unique clicks for the campaign",
                                      "format": "int64",
                                      "example": 2300
                                    },
                                    "clickers": {
                                      "type": "integer",
                                      "description": "Number of total clicks for the campaign",
                                      "format": "int64",
                                      "example": 2665
                                    },
                                    "complaints": {
                                      "type": "integer",
                                      "description": "Number of complaints (Spam reports) for the campaign",
                                      "format": "int64",
                                      "example": 1
                                    },
                                    "delivered": {
                                      "type": "integer",
                                      "description": "Number of delivered emails for the campaign",
                                      "format": "int64",
                                      "example": 19765
                                    },
                                    "sent": {
                                      "type": "integer",
                                      "description": "Number of sent emails for the campaign",
                                      "format": "int64",
                                      "example": 19887
                                    },
                                    "softBounces": {
                                      "type": "integer",
                                      "description": "Number of softbounce for the campaign",
                                      "format": "int64",
                                      "example": 100
                                    },
                                    "hardBounces": {
                                      "type": "integer",
                                      "description": "Number of harbounce for the campaign",
                                      "format": "int64",
                                      "example": 87
                                    },
                                    "uniqueViews": {
                                      "type": "integer",
                                      "description": "Number of unique openings for the campaign",
                                      "format": "int64",
                                      "example": 7779
                                    },
                                    "trackableViews": {
                                      "type": "integer",
                                      "description": "Recipients without any privacy protection option enabled in their email client",
                                      "format": "int64",
                                      "example": 5661
                                    },
                                    "unsubscriptions": {
                                      "type": "integer",
                                      "description": "Number of unsubscription for the campaign",
                                      "format": "int64",
                                      "example": 2
                                    },
                                    "viewed": {
                                      "type": "integer",
                                      "description": "Number of openings for the campaign",
                                      "format": "int64",
                                      "example": 8999
                                    },
                                    "deferred": {
                                      "type": "integer",
                                      "description": "Number of deferred emails for the campaign",
                                      "format": "int64",
                                      "example": 30
                                    },
                                    "returnBounce": {
                                      "type": "integer",
                                      "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                      "format": "int64",
                                      "example": 5
                                    }
                                  }
                                }
                              ]
                            },
                            "campaignStats": {
                              "type": "array",
                              "description": "List-wise statistics of the campaign.",
                              "items": {
                                "type": "object",
                                "allOf": [
                                  {
                                    "required": [
                                      "clickers",
                                      "complaints",
                                      "delivered",
                                      "hardBounces",
                                      "sent",
                                      "softBounces",
                                      "uniqueClicks",
                                      "uniqueViews",
                                      "unsubscriptions",
                                      "viewed",
                                      "trackableViews"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "listId": {
                                        "type": "integer",
                                        "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                        "format": "int64",
                                        "example": 2
                                      },
                                      "uniqueClicks": {
                                        "type": "integer",
                                        "description": "Number of unique clicks for the campaign",
                                        "format": "int64",
                                        "example": 2300
                                      },
                                      "clickers": {
                                        "type": "integer",
                                        "description": "Number of total clicks for the campaign",
                                        "format": "int64",
                                        "example": 2665
                                      },
                                      "complaints": {
                                        "type": "integer",
                                        "description": "Number of complaints (Spam reports) for the campaign",
                                        "format": "int64",
                                        "example": 1
                                      },
                                      "delivered": {
                                        "type": "integer",
                                        "description": "Number of delivered emails for the campaign",
                                        "format": "int64",
                                        "example": 19765
                                      },
                                      "sent": {
                                        "type": "integer",
                                        "description": "Number of sent emails for the campaign",
                                        "format": "int64",
                                        "example": 19887
                                      },
                                      "softBounces": {
                                        "type": "integer",
                                        "description": "Number of softbounce for the campaign",
                                        "format": "int64",
                                        "example": 100
                                      },
                                      "hardBounces": {
                                        "type": "integer",
                                        "description": "Number of harbounce for the campaign",
                                        "format": "int64",
                                        "example": 87
                                      },
                                      "uniqueViews": {
                                        "type": "integer",
                                        "description": "Number of unique openings for the campaign",
                                        "format": "int64",
                                        "example": 7779
                                      },
                                      "trackableViews": {
                                        "type": "integer",
                                        "description": "Recipients without any privacy protection option enabled in their email client",
                                        "format": "int64",
                                        "example": 5661
                                      },
                                      "unsubscriptions": {
                                        "type": "integer",
                                        "description": "Number of unsubscription for the campaign",
                                        "format": "int64",
                                        "example": 2
                                      },
                                      "viewed": {
                                        "type": "integer",
                                        "description": "Number of openings for the campaign",
                                        "format": "int64",
                                        "example": 8999
                                      },
                                      "deferred": {
                                        "type": "integer",
                                        "description": "Number of deferred emails for the campaign",
                                        "format": "int64",
                                        "example": 30
                                      },
                                      "returnBounce": {
                                        "type": "integer",
                                        "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                        "format": "int64",
                                        "example": 5
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "mirrorClick": {
                              "type": "integer",
                              "description": "Number of clicks on mirror link",
                              "format": "int64",
                              "example": 120
                            },
                            "remaining": {
                              "type": "integer",
                              "description": "Number of remaning emails to send",
                              "format": "int64",
                              "example": 1000
                            },
                            "linksStats": {
                              "type": "object",
                              "properties": {},
                              "description": "Statistics about the number of clicks for the links",
                              "example": {
                                "example.abc.com": 7,
                                "example.domain.com": 10
                              }
                            },
                            "statsByDomain": {
                              "type": "object",
                              "additionalProperties": {
                                "required": [
                                  "clickers",
                                  "complaints",
                                  "delivered",
                                  "hardBounces",
                                  "sent",
                                  "softBounces",
                                  "uniqueClicks",
                                  "uniqueViews",
                                  "unsubscriptions",
                                  "viewed",
                                  "trackableViews"
                                ],
                                "type": "object",
                                "properties": {
                                  "listId": {
                                    "type": "integer",
                                    "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                    "format": "int64",
                                    "example": 2
                                  },
                                  "uniqueClicks": {
                                    "type": "integer",
                                    "description": "Number of unique clicks for the campaign",
                                    "format": "int64",
                                    "example": 2300
                                  },
                                  "clickers": {
                                    "type": "integer",
                                    "description": "Number of total clicks for the campaign",
                                    "format": "int64",
                                    "example": 2665
                                  },
                                  "complaints": {
                                    "type": "integer",
                                    "description": "Number of complaints (Spam reports) for the campaign",
                                    "format": "int64",
                                    "example": 1
                                  },
                                  "delivered": {
                                    "type": "integer",
                                    "description": "Number of delivered emails for the campaign",
                                    "format": "int64",
                                    "example": 19765
                                  },
                                  "sent": {
                                    "type": "integer",
                                    "description": "Number of sent emails for the campaign",
                                    "format": "int64",
                                    "example": 19887
                                  },
                                  "softBounces": {
                                    "type": "integer",
                                    "description": "Number of softbounce for the campaign",
                                    "format": "int64",
                                    "example": 100
                                  },
                                  "hardBounces": {
                                    "type": "integer",
                                    "description": "Number of harbounce for the campaign",
                                    "format": "int64",
                                    "example": 87
                                  },
                                  "uniqueViews": {
                                    "type": "integer",
                                    "description": "Number of unique openings for the campaign",
                                    "format": "int64",
                                    "example": 7779
                                  },
                                  "trackableViews": {
                                    "type": "integer",
                                    "description": "Recipients without any privacy protection option enabled in their email client",
                                    "format": "int64",
                                    "example": 5661
                                  },
                                  "unsubscriptions": {
                                    "type": "integer",
                                    "description": "Number of unsubscription for the campaign",
                                    "format": "int64",
                                    "example": 2
                                  },
                                  "viewed": {
                                    "type": "integer",
                                    "description": "Number of openings for the campaign",
                                    "format": "int64",
                                    "example": 8999
                                  },
                                  "deferred": {
                                    "type": "integer",
                                    "description": "Number of deferred emails for the campaign",
                                    "format": "int64",
                                    "example": 30
                                  },
                                  "returnBounce": {
                                    "type": "integer",
                                    "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                    "format": "int64",
                                    "example": 5
                                  }
                                }
                              }
                            },
                            "statsByDevice": {
                              "type": "object",
                              "properties": {
                                "desktop": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "required": [
                                      "clickers",
                                      "uniqueClicks",
                                      "uniqueViews",
                                      "viewed"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "clickers": {
                                        "type": "integer",
                                        "description": "Number of total clicks for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 2665
                                      },
                                      "uniqueClicks": {
                                        "type": "integer",
                                        "description": "Number of unique clicks for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 2300
                                      },
                                      "viewed": {
                                        "type": "integer",
                                        "description": "Number of openings for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 8999
                                      },
                                      "uniqueViews": {
                                        "type": "integer",
                                        "description": "Number of unique openings for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 7779
                                      }
                                    }
                                  },
                                  "description": "Statistics of the campaign on the basis of desktop devices"
                                },
                                "mobile": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "required": [
                                      "clickers",
                                      "uniqueClicks",
                                      "uniqueViews",
                                      "viewed"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "clickers": {
                                        "type": "integer",
                                        "description": "Number of total clicks for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 2665
                                      },
                                      "uniqueClicks": {
                                        "type": "integer",
                                        "description": "Number of unique clicks for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 2300
                                      },
                                      "viewed": {
                                        "type": "integer",
                                        "description": "Number of openings for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 8999
                                      },
                                      "uniqueViews": {
                                        "type": "integer",
                                        "description": "Number of unique openings for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 7779
                                      }
                                    }
                                  },
                                  "description": "Statistics of the campaign on the basis of mobile devices"
                                },
                                "tablet": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "required": [
                                      "clickers",
                                      "uniqueClicks",
                                      "uniqueViews",
                                      "viewed"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "clickers": {
                                        "type": "integer",
                                        "description": "Number of total clicks for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 2665
                                      },
                                      "uniqueClicks": {
                                        "type": "integer",
                                        "description": "Number of unique clicks for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 2300
                                      },
                                      "viewed": {
                                        "type": "integer",
                                        "description": "Number of openings for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 8999
                                      },
                                      "uniqueViews": {
                                        "type": "integer",
                                        "description": "Number of unique openings for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 7779
                                      }
                                    }
                                  },
                                  "description": "Statistics of the campaign on the basis of tablet devices"
                                },
                                "unknown": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "required": [
                                      "clickers",
                                      "uniqueClicks",
                                      "uniqueViews",
                                      "viewed"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "clickers": {
                                        "type": "integer",
                                        "description": "Number of total clicks for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 2665
                                      },
                                      "uniqueClicks": {
                                        "type": "integer",
                                        "description": "Number of unique clicks for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 2300
                                      },
                                      "viewed": {
                                        "type": "integer",
                                        "description": "Number of openings for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 8999
                                      },
                                      "uniqueViews": {
                                        "type": "integer",
                                        "description": "Number of unique openings for the campaign using the particular browser",
                                        "format": "int64",
                                        "example": 7779
                                      }
                                    }
                                  },
                                  "description": "Statistics of the campaign on the basis of unknown devices"
                                }
                              }
                            },
                            "statsByBrowser": {
                              "type": "object",
                              "additionalProperties": {
                                "required": [
                                  "clickers",
                                  "uniqueClicks",
                                  "uniqueViews",
                                  "viewed"
                                ],
                                "type": "object",
                                "properties": {
                                  "clickers": {
                                    "type": "integer",
                                    "description": "Number of total clicks for the campaign using the particular browser",
                                    "format": "int64",
                                    "example": 2665
                                  },
                                  "uniqueClicks": {
                                    "type": "integer",
                                    "description": "Number of unique clicks for the campaign using the particular browser",
                                    "format": "int64",
                                    "example": 2300
                                  },
                                  "viewed": {
                                    "type": "integer",
                                    "description": "Number of openings for the campaign using the particular browser",
                                    "format": "int64",
                                    "example": 8999
                                  },
                                  "uniqueViews": {
                                    "type": "integer",
                                    "description": "Number of unique openings for the campaign using the particular browser",
                                    "format": "int64",
                                    "example": 7779
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "shareLink": {
                      "type": "string",
                      "description": "Link to share the campaign on social medias",
                      "format": "url",
                      "example": "http://dhh.sendinblue.com/fhsgccc.html?t=9865448900"
                    }
                  }
                }
              ]
            }
          },
          "count": {
            "type": "integer",
            "description": "Number of Email campaigns retrieved",
            "format": "int64",
            "example": 24
          }
        }
      },
      "getSmsCampaigns": {
        "type": "object",
        "properties": {
          "campaigns": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "required": [
                    "content",
                    "createdAt",
                    "id",
                    "modifiedAt",
                    "name",
                    "sender",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the SMS Campaign",
                      "format": "int64",
                      "example": 2
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the SMS Campaign",
                      "example": "PROMO CODE"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the SMS Campaign",
                      "example": "draft",
                      "enum": [
                        "draft",
                        "sent",
                        "archive",
                        "queued",
                        "suspended",
                        "inProcess"
                      ]
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the SMS Campaign",
                      "example": "Visit our Store and get some discount !"
                    },
                    "scheduledAt": {
                      "type": "string",
                      "description": "UTC date-time on which SMS campaign is scheduled. Should be in YYYY-MM-DDTHH:mm:ss.SSSZ format",
                      "example": "2017-06-01T12:30:00Z"
                    },
                    "sender": {
                      "type": "string",
                      "description": "Sender of the SMS Campaign",
                      "example": "MyCompany"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Creation UTC date-time of the SMS campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                      "example": "2017-06-01T12:30:00Z"
                    },
                    "modifiedAt": {
                      "type": "string",
                      "description": "UTC date-time of last modification of the SMS campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                      "example": "2017-05-01T12:30:00Z"
                    }
                  }
                },
                {
                  "required": [
                    "recipients",
                    "statistics"
                  ],
                  "type": "object",
                  "properties": {
                    "recipients": {
                      "type": "object",
                      "allOf": [
                        {
                          "required": [
                            "exclusionLists",
                            "lists"
                          ],
                          "type": "object",
                          "properties": {
                            "lists": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "description": "List IDs included in the campaign",
                                "format": "int64",
                                "example": 21
                              }
                            },
                            "exclusionLists": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "description": "List IDs excluded of the campaign",
                                "format": "int64",
                                "example": 13
                              }
                            }
                          }
                        }
                      ]
                    },
                    "statistics": {
                      "type": "object",
                      "allOf": [
                        {
                          "required": [
                            "answered",
                            "delivered",
                            "hardBounces",
                            "processing",
                            "sent",
                            "softBounces",
                            "unsubscriptions"
                          ],
                          "type": "object",
                          "properties": {
                            "delivered": {
                              "type": "integer",
                              "description": "Number of delivered SMS",
                              "format": "int64",
                              "example": 2987
                            },
                            "sent": {
                              "type": "integer",
                              "description": "Number of sent SMS",
                              "format": "int64",
                              "example": 3000
                            },
                            "processing": {
                              "type": "integer",
                              "description": "Number of processing SMS",
                              "format": "int64",
                              "example": 0
                            },
                            "softBounces": {
                              "type": "integer",
                              "description": "Number of softbounced SMS",
                              "format": "int64",
                              "example": 3
                            },
                            "hardBounces": {
                              "type": "integer",
                              "description": "Number of hardbounced SMS",
                              "format": "int64",
                              "example": 1
                            },
                            "unsubscriptions": {
                              "type": "integer",
                              "description": "Number of unsubscription SMS",
                              "format": "int64",
                              "example": 3
                            },
                            "answered": {
                              "type": "integer",
                              "description": "Number of replies to the SMS",
                              "format": "int64",
                              "example": 2
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "count": {
            "type": "integer",
            "description": "Number of SMS campaigns retrieved",
            "format": "int64",
            "example": 12
          }
        }
      },
      "getSmsCampaign": {
        "allOf": [
          {
            "required": [
              "content",
              "createdAt",
              "id",
              "modifiedAt",
              "name",
              "sender",
              "status"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ID of the SMS Campaign",
                "format": "int64",
                "example": 2
              },
              "name": {
                "type": "string",
                "description": "Name of the SMS Campaign",
                "example": "PROMO CODE"
              },
              "status": {
                "type": "string",
                "description": "Status of the SMS Campaign",
                "example": "draft",
                "enum": [
                  "draft",
                  "sent",
                  "archive",
                  "queued",
                  "suspended",
                  "inProcess"
                ]
              },
              "content": {
                "type": "string",
                "description": "Content of the SMS Campaign",
                "example": "Visit our Store and get some discount !"
              },
              "scheduledAt": {
                "type": "string",
                "description": "UTC date-time on which SMS campaign is scheduled. Should be in YYYY-MM-DDTHH:mm:ss.SSSZ format",
                "example": "2017-06-01T12:30:00Z"
              },
              "sender": {
                "type": "string",
                "description": "Sender of the SMS Campaign",
                "example": "MyCompany"
              },
              "createdAt": {
                "type": "string",
                "description": "Creation UTC date-time of the SMS campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                "example": "2017-06-01T12:30:00Z"
              },
              "modifiedAt": {
                "type": "string",
                "description": "UTC date-time of last modification of the SMS campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                "example": "2017-05-01T12:30:00Z"
              }
            }
          },
          {
            "required": [
              "recipients",
              "statistics"
            ],
            "type": "object",
            "properties": {
              "recipients": {
                "type": "object",
                "allOf": [
                  {
                    "required": [
                      "exclusionLists",
                      "lists"
                    ],
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "description": "List IDs included in the campaign",
                          "format": "int64",
                          "example": 21
                        }
                      },
                      "exclusionLists": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "description": "List IDs excluded of the campaign",
                          "format": "int64",
                          "example": 13
                        }
                      }
                    }
                  }
                ]
              },
              "statistics": {
                "type": "object",
                "allOf": [
                  {
                    "required": [
                      "answered",
                      "delivered",
                      "hardBounces",
                      "processing",
                      "sent",
                      "softBounces",
                      "unsubscriptions"
                    ],
                    "type": "object",
                    "properties": {
                      "delivered": {
                        "type": "integer",
                        "description": "Number of delivered SMS",
                        "format": "int64",
                        "example": 2987
                      },
                      "sent": {
                        "type": "integer",
                        "description": "Number of sent SMS",
                        "format": "int64",
                        "example": 3000
                      },
                      "processing": {
                        "type": "integer",
                        "description": "Number of processing SMS",
                        "format": "int64",
                        "example": 0
                      },
                      "softBounces": {
                        "type": "integer",
                        "description": "Number of softbounced SMS",
                        "format": "int64",
                        "example": 3
                      },
                      "hardBounces": {
                        "type": "integer",
                        "description": "Number of hardbounced SMS",
                        "format": "int64",
                        "example": 1
                      },
                      "unsubscriptions": {
                        "type": "integer",
                        "description": "Number of unsubscription SMS",
                        "format": "int64",
                        "example": 3
                      },
                      "answered": {
                        "type": "integer",
                        "description": "Number of replies to the SMS",
                        "format": "int64",
                        "example": 2
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "getEmailCampaign": {
        "allOf": [
          {
            "allOf": [
              {
                "required": [
                  "id",
                  "name",
                  "status",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "ID of the campaign",
                    "format": "int64",
                    "example": 12
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the campaign",
                    "example": "EN - Sales Summer 2017"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Subject of the campaign. Only available if `abTesting` flag of the campaign is `false`",
                    "example": "20% OFF for 2017 Summer Sales"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of campaign",
                    "example": "classic",
                    "enum": [
                      "classic",
                      "trigger"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the campaign",
                    "example": "sent",
                    "enum": [
                      "draft",
                      "sent",
                      "archive",
                      "queued",
                      "suspended",
                      "in_process"
                    ]
                  },
                  "scheduledAt": {
                    "type": "string",
                    "description": "UTC date-time on which campaign is scheduled (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                    "example": "2017-06-01T12:30:00Z"
                  },
                  "abTesting": {
                    "type": "boolean",
                    "description": "Status of A/B Test for the campaign. abTesting = false means it is disabled, & abTesting = true means it is enabled.",
                    "example": true
                  },
                  "subjectA": {
                    "type": "string",
                    "description": "Subject A of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
                    "example": "Discover the New Collection!"
                  },
                  "subjectB": {
                    "type": "string",
                    "description": "Subject B of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
                    "example": "Want to discover the New Collection?"
                  },
                  "splitRule": {
                    "type": "integer",
                    "description": "The size of your ab-test groups. Only available if `abTesting` flag of the campaign is `true`",
                    "example": 25
                  },
                  "winnerCriteria": {
                    "type": "string",
                    "description": "Criteria for the winning version. Only available if `abTesting` flag of the campaign is `true`",
                    "example": "open"
                  },
                  "winnerDelay": {
                    "type": "integer",
                    "description": "The duration of the test in hours at the end of which the winning version will be sent. Only available if `abTesting` flag of the campaign is `true`",
                    "example": 50
                  },
                  "sendAtBestTime": {
                    "type": "boolean",
                    "description": "It is true if you have chosen to send your campaign at best time, otherwise it is false",
                    "example": true
                  }
                }
              },
              {
                "required": [
                  "createdAt",
                  "footer",
                  "header",
                  "htmlContent",
                  "modifiedAt",
                  "replyTo",
                  "sender",
                  "testSent"
                ],
                "type": "object",
                "properties": {
                  "testSent": {
                    "type": "boolean",
                    "description": "Retrieved the status of test email sending. (true=Test email has been sent  false=Test email has not been sent)",
                    "example": true
                  },
                  "header": {
                    "type": "string",
                    "description": "Header of the campaign",
                    "example": "[DEFAULT_HEADER]"
                  },
                  "footer": {
                    "type": "string",
                    "description": "Footer of the campaign",
                    "example": "[DEFAULT_FOOTER]"
                  },
                  "sender": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Sender name of the campaign",
                        "example": "Marketing"
                      },
                      "email": {
                        "type": "string",
                        "description": "Sender email of the campaign",
                        "format": "email",
                        "example": "marketing@mycompany.com"
                      },
                      "id": {
                        "type": "string",
                        "description": "Sender id of the campaign",
                        "example": "43"
                      }
                    }
                  },
                  "replyTo": {
                    "type": "string",
                    "description": "Email defined as the \"Reply to\" of the campaign",
                    "format": "email",
                    "example": "replyto@domain.com"
                  },
                  "toField": {
                    "type": "string",
                    "description": "Customisation of the \"to\" field of the campaign",
                    "example": "{FNAME} {LNAME}"
                  },
                  "htmlContent": {
                    "type": "string",
                    "description": "HTML content of the campaign",
                    "example": "This is my HTML Content"
                  },
                  "shareLink": {
                    "type": "string",
                    "description": "Link to share the campaign on social medias",
                    "format": "url",
                    "example": "http://dhh.sendinblue.com/fhsgccc.html?t=9865448900"
                  },
                  "tag": {
                    "type": "string",
                    "description": "Tag of the campaign",
                    "example": "Newsletter"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "Creation UTC date-time of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                    "example": "2017-05-01T12:30:00Z"
                  },
                  "modifiedAt": {
                    "type": "string",
                    "description": "UTC date-time of last modification of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                    "example": "2017-05-01T12:30:00Z"
                  },
                  "inlineImageActivation": {
                    "type": "boolean",
                    "description": "Status of inline image. inlineImageActivation = false means image can’t be embedded, & inlineImageActivation = true means image can be embedded, in the email.",
                    "example": true
                  },
                  "mirrorActive": {
                    "type": "boolean",
                    "description": "Status of mirror links in campaign. mirrorActive = false means mirror links are deactivated, & mirrorActive = true means mirror links are activated, in the campaign",
                    "example": true
                  },
                  "recurring": {
                    "type": "boolean",
                    "description": "FOR TRIGGER ONLY ! Type of trigger campaign.recurring = false means contact can receive the same Trigger campaign only once, & recurring = true means contact can receive the same Trigger campaign several times",
                    "example": true
                  },
                  "sentDate": {
                    "type": "string",
                    "description": "Sent UTC date-time of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ). Only available if 'status' of the campaign is 'sent'",
                    "example": "2018-12-01T16:30:00Z"
                  },
                  "returnBounce": {
                    "type": "integer",
                    "description": "Total number of non-delivered campaigns for a particular campaign id.",
                    "format": "int64",
                    "example": 5
                  }
                }
              }
            ]
          },
          {
            "required": [
              "recipients",
              "statistics"
            ],
            "type": "object",
            "properties": {
              "recipients": {
                "type": "object",
                "allOf": [
                  {
                    "required": [
                      "exclusionLists",
                      "lists"
                    ],
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "description": "List IDs included in the campaign",
                          "format": "int64",
                          "example": 21
                        }
                      },
                      "exclusionLists": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "description": "List IDs excluded of the campaign",
                          "format": "int64",
                          "example": 13
                        }
                      }
                    }
                  }
                ]
              },
              "statistics": {
                "type": "object",
                "allOf": [
                  {
                    "required": [
                      "campaignStats",
                      "globalStats",
                      "linksStats",
                      "mirrorClick",
                      "remaining",
                      "statsByBrowser",
                      "statsByDevice",
                      "statsByDomain"
                    ],
                    "type": "object",
                    "properties": {
                      "globalStats": {
                        "type": "object",
                        "description": "Overall statistics of the campaign",
                        "allOf": [
                          {
                            "required": [
                              "clickers",
                              "complaints",
                              "delivered",
                              "hardBounces",
                              "sent",
                              "softBounces",
                              "uniqueClicks",
                              "uniqueViews",
                              "unsubscriptions",
                              "viewed",
                              "trackableViews"
                            ],
                            "type": "object",
                            "properties": {
                              "listId": {
                                "type": "integer",
                                "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                "format": "int64",
                                "example": 2
                              },
                              "uniqueClicks": {
                                "type": "integer",
                                "description": "Number of unique clicks for the campaign",
                                "format": "int64",
                                "example": 2300
                              },
                              "clickers": {
                                "type": "integer",
                                "description": "Number of total clicks for the campaign",
                                "format": "int64",
                                "example": 2665
                              },
                              "complaints": {
                                "type": "integer",
                                "description": "Number of complaints (Spam reports) for the campaign",
                                "format": "int64",
                                "example": 1
                              },
                              "delivered": {
                                "type": "integer",
                                "description": "Number of delivered emails for the campaign",
                                "format": "int64",
                                "example": 19765
                              },
                              "sent": {
                                "type": "integer",
                                "description": "Number of sent emails for the campaign",
                                "format": "int64",
                                "example": 19887
                              },
                              "softBounces": {
                                "type": "integer",
                                "description": "Number of softbounce for the campaign",
                                "format": "int64",
                                "example": 100
                              },
                              "hardBounces": {
                                "type": "integer",
                                "description": "Number of harbounce for the campaign",
                                "format": "int64",
                                "example": 87
                              },
                              "uniqueViews": {
                                "type": "integer",
                                "description": "Number of unique openings for the campaign",
                                "format": "int64",
                                "example": 7779
                              },
                              "trackableViews": {
                                "type": "integer",
                                "description": "Recipients without any privacy protection option enabled in their email client",
                                "format": "int64",
                                "example": 5661
                              },
                              "unsubscriptions": {
                                "type": "integer",
                                "description": "Number of unsubscription for the campaign",
                                "format": "int64",
                                "example": 2
                              },
                              "viewed": {
                                "type": "integer",
                                "description": "Number of openings for the campaign",
                                "format": "int64",
                                "example": 8999
                              },
                              "deferred": {
                                "type": "integer",
                                "description": "Number of deferred emails for the campaign",
                                "format": "int64",
                                "example": 30
                              },
                              "returnBounce": {
                                "type": "integer",
                                "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                "format": "int64",
                                "example": 5
                              }
                            }
                          }
                        ]
                      },
                      "campaignStats": {
                        "type": "array",
                        "description": "List-wise statistics of the campaign.",
                        "items": {
                          "type": "object",
                          "allOf": [
                            {
                              "required": [
                                "clickers",
                                "complaints",
                                "delivered",
                                "hardBounces",
                                "sent",
                                "softBounces",
                                "uniqueClicks",
                                "uniqueViews",
                                "unsubscriptions",
                                "viewed",
                                "trackableViews"
                              ],
                              "type": "object",
                              "properties": {
                                "listId": {
                                  "type": "integer",
                                  "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                                  "format": "int64",
                                  "example": 2
                                },
                                "uniqueClicks": {
                                  "type": "integer",
                                  "description": "Number of unique clicks for the campaign",
                                  "format": "int64",
                                  "example": 2300
                                },
                                "clickers": {
                                  "type": "integer",
                                  "description": "Number of total clicks for the campaign",
                                  "format": "int64",
                                  "example": 2665
                                },
                                "complaints": {
                                  "type": "integer",
                                  "description": "Number of complaints (Spam reports) for the campaign",
                                  "format": "int64",
                                  "example": 1
                                },
                                "delivered": {
                                  "type": "integer",
                                  "description": "Number of delivered emails for the campaign",
                                  "format": "int64",
                                  "example": 19765
                                },
                                "sent": {
                                  "type": "integer",
                                  "description": "Number of sent emails for the campaign",
                                  "format": "int64",
                                  "example": 19887
                                },
                                "softBounces": {
                                  "type": "integer",
                                  "description": "Number of softbounce for the campaign",
                                  "format": "int64",
                                  "example": 100
                                },
                                "hardBounces": {
                                  "type": "integer",
                                  "description": "Number of harbounce for the campaign",
                                  "format": "int64",
                                  "example": 87
                                },
                                "uniqueViews": {
                                  "type": "integer",
                                  "description": "Number of unique openings for the campaign",
                                  "format": "int64",
                                  "example": 7779
                                },
                                "trackableViews": {
                                  "type": "integer",
                                  "description": "Recipients without any privacy protection option enabled in their email client",
                                  "format": "int64",
                                  "example": 5661
                                },
                                "unsubscriptions": {
                                  "type": "integer",
                                  "description": "Number of unsubscription for the campaign",
                                  "format": "int64",
                                  "example": 2
                                },
                                "viewed": {
                                  "type": "integer",
                                  "description": "Number of openings for the campaign",
                                  "format": "int64",
                                  "example": 8999
                                },
                                "deferred": {
                                  "type": "integer",
                                  "description": "Number of deferred emails for the campaign",
                                  "format": "int64",
                                  "example": 30
                                },
                                "returnBounce": {
                                  "type": "integer",
                                  "description": "Total number of non-delivered campaigns for a particular campaign id.",
                                  "format": "int64",
                                  "example": 5
                                }
                              }
                            }
                          ]
                        }
                      },
                      "mirrorClick": {
                        "type": "integer",
                        "description": "Number of clicks on mirror link",
                        "format": "int64",
                        "example": 120
                      },
                      "remaining": {
                        "type": "integer",
                        "description": "Number of remaning emails to send",
                        "format": "int64",
                        "example": 1000
                      },
                      "linksStats": {
                        "type": "object",
                        "properties": {},
                        "description": "Statistics about the number of clicks for the links",
                        "example": {
                          "example.abc.com": 7,
                          "example.domain.com": 10
                        }
                      },
                      "statsByDomain": {
                        "type": "object",
                        "additionalProperties": {
                          "required": [
                            "clickers",
                            "complaints",
                            "delivered",
                            "hardBounces",
                            "sent",
                            "softBounces",
                            "uniqueClicks",
                            "uniqueViews",
                            "unsubscriptions",
                            "viewed",
                            "trackableViews"
                          ],
                          "type": "object",
                          "properties": {
                            "listId": {
                              "type": "integer",
                              "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                              "format": "int64",
                              "example": 2
                            },
                            "uniqueClicks": {
                              "type": "integer",
                              "description": "Number of unique clicks for the campaign",
                              "format": "int64",
                              "example": 2300
                            },
                            "clickers": {
                              "type": "integer",
                              "description": "Number of total clicks for the campaign",
                              "format": "int64",
                              "example": 2665
                            },
                            "complaints": {
                              "type": "integer",
                              "description": "Number of complaints (Spam reports) for the campaign",
                              "format": "int64",
                              "example": 1
                            },
                            "delivered": {
                              "type": "integer",
                              "description": "Number of delivered emails for the campaign",
                              "format": "int64",
                              "example": 19765
                            },
                            "sent": {
                              "type": "integer",
                              "description": "Number of sent emails for the campaign",
                              "format": "int64",
                              "example": 19887
                            },
                            "softBounces": {
                              "type": "integer",
                              "description": "Number of softbounce for the campaign",
                              "format": "int64",
                              "example": 100
                            },
                            "hardBounces": {
                              "type": "integer",
                              "description": "Number of harbounce for the campaign",
                              "format": "int64",
                              "example": 87
                            },
                            "uniqueViews": {
                              "type": "integer",
                              "description": "Number of unique openings for the campaign",
                              "format": "int64",
                              "example": 7779
                            },
                            "trackableViews": {
                              "type": "integer",
                              "description": "Recipients without any privacy protection option enabled in their email client",
                              "format": "int64",
                              "example": 5661
                            },
                            "unsubscriptions": {
                              "type": "integer",
                              "description": "Number of unsubscription for the campaign",
                              "format": "int64",
                              "example": 2
                            },
                            "viewed": {
                              "type": "integer",
                              "description": "Number of openings for the campaign",
                              "format": "int64",
                              "example": 8999
                            },
                            "deferred": {
                              "type": "integer",
                              "description": "Number of deferred emails for the campaign",
                              "format": "int64",
                              "example": 30
                            },
                            "returnBounce": {
                              "type": "integer",
                              "description": "Total number of non-delivered campaigns for a particular campaign id.",
                              "format": "int64",
                              "example": 5
                            }
                          }
                        }
                      },
                      "statsByDevice": {
                        "type": "object",
                        "properties": {
                          "desktop": {
                            "type": "object",
                            "additionalProperties": {
                              "required": [
                                "clickers",
                                "uniqueClicks",
                                "uniqueViews",
                                "viewed"
                              ],
                              "type": "object",
                              "properties": {
                                "clickers": {
                                  "type": "integer",
                                  "description": "Number of total clicks for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 2665
                                },
                                "uniqueClicks": {
                                  "type": "integer",
                                  "description": "Number of unique clicks for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 2300
                                },
                                "viewed": {
                                  "type": "integer",
                                  "description": "Number of openings for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 8999
                                },
                                "uniqueViews": {
                                  "type": "integer",
                                  "description": "Number of unique openings for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 7779
                                }
                              }
                            },
                            "description": "Statistics of the campaign on the basis of desktop devices"
                          },
                          "mobile": {
                            "type": "object",
                            "additionalProperties": {
                              "required": [
                                "clickers",
                                "uniqueClicks",
                                "uniqueViews",
                                "viewed"
                              ],
                              "type": "object",
                              "properties": {
                                "clickers": {
                                  "type": "integer",
                                  "description": "Number of total clicks for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 2665
                                },
                                "uniqueClicks": {
                                  "type": "integer",
                                  "description": "Number of unique clicks for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 2300
                                },
                                "viewed": {
                                  "type": "integer",
                                  "description": "Number of openings for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 8999
                                },
                                "uniqueViews": {
                                  "type": "integer",
                                  "description": "Number of unique openings for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 7779
                                }
                              }
                            },
                            "description": "Statistics of the campaign on the basis of mobile devices"
                          },
                          "tablet": {
                            "type": "object",
                            "additionalProperties": {
                              "required": [
                                "clickers",
                                "uniqueClicks",
                                "uniqueViews",
                                "viewed"
                              ],
                              "type": "object",
                              "properties": {
                                "clickers": {
                                  "type": "integer",
                                  "description": "Number of total clicks for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 2665
                                },
                                "uniqueClicks": {
                                  "type": "integer",
                                  "description": "Number of unique clicks for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 2300
                                },
                                "viewed": {
                                  "type": "integer",
                                  "description": "Number of openings for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 8999
                                },
                                "uniqueViews": {
                                  "type": "integer",
                                  "description": "Number of unique openings for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 7779
                                }
                              }
                            },
                            "description": "Statistics of the campaign on the basis of tablet devices"
                          },
                          "unknown": {
                            "type": "object",
                            "additionalProperties": {
                              "required": [
                                "clickers",
                                "uniqueClicks",
                                "uniqueViews",
                                "viewed"
                              ],
                              "type": "object",
                              "properties": {
                                "clickers": {
                                  "type": "integer",
                                  "description": "Number of total clicks for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 2665
                                },
                                "uniqueClicks": {
                                  "type": "integer",
                                  "description": "Number of unique clicks for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 2300
                                },
                                "viewed": {
                                  "type": "integer",
                                  "description": "Number of openings for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 8999
                                },
                                "uniqueViews": {
                                  "type": "integer",
                                  "description": "Number of unique openings for the campaign using the particular browser",
                                  "format": "int64",
                                  "example": 7779
                                }
                              }
                            },
                            "description": "Statistics of the campaign on the basis of unknown devices"
                          }
                        }
                      },
                      "statsByBrowser": {
                        "type": "object",
                        "additionalProperties": {
                          "required": [
                            "clickers",
                            "uniqueClicks",
                            "uniqueViews",
                            "viewed"
                          ],
                          "type": "object",
                          "properties": {
                            "clickers": {
                              "type": "integer",
                              "description": "Number of total clicks for the campaign using the particular browser",
                              "format": "int64",
                              "example": 2665
                            },
                            "uniqueClicks": {
                              "type": "integer",
                              "description": "Number of unique clicks for the campaign using the particular browser",
                              "format": "int64",
                              "example": 2300
                            },
                            "viewed": {
                              "type": "integer",
                              "description": "Number of openings for the campaign using the particular browser",
                              "format": "int64",
                              "example": 8999
                            },
                            "uniqueViews": {
                              "type": "integer",
                              "description": "Number of unique openings for the campaign using the particular browser",
                              "format": "int64",
                              "example": 7779
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "getCampaignOverview": {
        "required": [
          "id",
          "name",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the campaign",
            "format": "int64",
            "example": 12
          },
          "name": {
            "type": "string",
            "description": "Name of the campaign",
            "example": "EN - Sales Summer 2017"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the campaign. Only available if `abTesting` flag of the campaign is `false`",
            "example": "20% OFF for 2017 Summer Sales"
          },
          "type": {
            "type": "string",
            "description": "Type of campaign",
            "example": "classic",
            "enum": [
              "classic",
              "trigger"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of the campaign",
            "example": "sent",
            "enum": [
              "draft",
              "sent",
              "archive",
              "queued",
              "suspended",
              "in_process"
            ]
          },
          "scheduledAt": {
            "type": "string",
            "description": "UTC date-time on which campaign is scheduled (YYYY-MM-DDTHH:mm:ss.SSSZ)",
            "example": "2017-06-01T12:30:00Z"
          },
          "abTesting": {
            "type": "boolean",
            "description": "Status of A/B Test for the campaign. abTesting = false means it is disabled, & abTesting = true means it is enabled.",
            "example": true
          },
          "subjectA": {
            "type": "string",
            "description": "Subject A of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
            "example": "Discover the New Collection!"
          },
          "subjectB": {
            "type": "string",
            "description": "Subject B of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
            "example": "Want to discover the New Collection?"
          },
          "splitRule": {
            "type": "integer",
            "description": "The size of your ab-test groups. Only available if `abTesting` flag of the campaign is `true`",
            "example": 25
          },
          "winnerCriteria": {
            "type": "string",
            "description": "Criteria for the winning version. Only available if `abTesting` flag of the campaign is `true`",
            "example": "open"
          },
          "winnerDelay": {
            "type": "integer",
            "description": "The duration of the test in hours at the end of which the winning version will be sent. Only available if `abTesting` flag of the campaign is `true`",
            "example": 50
          },
          "sendAtBestTime": {
            "type": "boolean",
            "description": "It is true if you have chosen to send your campaign at best time, otherwise it is false",
            "example": true
          }
        }
      },
      "getExtendedCampaignOverview": {
        "allOf": [
          {
            "required": [
              "id",
              "name",
              "status",
              "type"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ID of the campaign",
                "format": "int64",
                "example": 12
              },
              "name": {
                "type": "string",
                "description": "Name of the campaign",
                "example": "EN - Sales Summer 2017"
              },
              "subject": {
                "type": "string",
                "description": "Subject of the campaign. Only available if `abTesting` flag of the campaign is `false`",
                "example": "20% OFF for 2017 Summer Sales"
              },
              "type": {
                "type": "string",
                "description": "Type of campaign",
                "example": "classic",
                "enum": [
                  "classic",
                  "trigger"
                ]
              },
              "status": {
                "type": "string",
                "description": "Status of the campaign",
                "example": "sent",
                "enum": [
                  "draft",
                  "sent",
                  "archive",
                  "queued",
                  "suspended",
                  "in_process"
                ]
              },
              "scheduledAt": {
                "type": "string",
                "description": "UTC date-time on which campaign is scheduled (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                "example": "2017-06-01T12:30:00Z"
              },
              "abTesting": {
                "type": "boolean",
                "description": "Status of A/B Test for the campaign. abTesting = false means it is disabled, & abTesting = true means it is enabled.",
                "example": true
              },
              "subjectA": {
                "type": "string",
                "description": "Subject A of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
                "example": "Discover the New Collection!"
              },
              "subjectB": {
                "type": "string",
                "description": "Subject B of the ab-test campaign. Only available if `abTesting` flag of the campaign is `true`",
                "example": "Want to discover the New Collection?"
              },
              "splitRule": {
                "type": "integer",
                "description": "The size of your ab-test groups. Only available if `abTesting` flag of the campaign is `true`",
                "example": 25
              },
              "winnerCriteria": {
                "type": "string",
                "description": "Criteria for the winning version. Only available if `abTesting` flag of the campaign is `true`",
                "example": "open"
              },
              "winnerDelay": {
                "type": "integer",
                "description": "The duration of the test in hours at the end of which the winning version will be sent. Only available if `abTesting` flag of the campaign is `true`",
                "example": 50
              },
              "sendAtBestTime": {
                "type": "boolean",
                "description": "It is true if you have chosen to send your campaign at best time, otherwise it is false",
                "example": true
              }
            }
          },
          {
            "required": [
              "createdAt",
              "footer",
              "header",
              "htmlContent",
              "modifiedAt",
              "replyTo",
              "sender",
              "testSent"
            ],
            "type": "object",
            "properties": {
              "testSent": {
                "type": "boolean",
                "description": "Retrieved the status of test email sending. (true=Test email has been sent  false=Test email has not been sent)",
                "example": true
              },
              "header": {
                "type": "string",
                "description": "Header of the campaign",
                "example": "[DEFAULT_HEADER]"
              },
              "footer": {
                "type": "string",
                "description": "Footer of the campaign",
                "example": "[DEFAULT_FOOTER]"
              },
              "sender": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Sender name of the campaign",
                    "example": "Marketing"
                  },
                  "email": {
                    "type": "string",
                    "description": "Sender email of the campaign",
                    "format": "email",
                    "example": "marketing@mycompany.com"
                  },
                  "id": {
                    "type": "string",
                    "description": "Sender id of the campaign",
                    "example": "43"
                  }
                }
              },
              "replyTo": {
                "type": "string",
                "description": "Email defined as the \"Reply to\" of the campaign",
                "format": "email",
                "example": "replyto@domain.com"
              },
              "toField": {
                "type": "string",
                "description": "Customisation of the \"to\" field of the campaign",
                "example": "{FNAME} {LNAME}"
              },
              "htmlContent": {
                "type": "string",
                "description": "HTML content of the campaign",
                "example": "This is my HTML Content"
              },
              "shareLink": {
                "type": "string",
                "description": "Link to share the campaign on social medias",
                "format": "url",
                "example": "http://dhh.sendinblue.com/fhsgccc.html?t=9865448900"
              },
              "tag": {
                "type": "string",
                "description": "Tag of the campaign",
                "example": "Newsletter"
              },
              "createdAt": {
                "type": "string",
                "description": "Creation UTC date-time of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                "example": "2017-05-01T12:30:00Z"
              },
              "modifiedAt": {
                "type": "string",
                "description": "UTC date-time of last modification of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                "example": "2017-05-01T12:30:00Z"
              },
              "inlineImageActivation": {
                "type": "boolean",
                "description": "Status of inline image. inlineImageActivation = false means image can’t be embedded, & inlineImageActivation = true means image can be embedded, in the email.",
                "example": true
              },
              "mirrorActive": {
                "type": "boolean",
                "description": "Status of mirror links in campaign. mirrorActive = false means mirror links are deactivated, & mirrorActive = true means mirror links are activated, in the campaign",
                "example": true
              },
              "recurring": {
                "type": "boolean",
                "description": "FOR TRIGGER ONLY ! Type of trigger campaign.recurring = false means contact can receive the same Trigger campaign only once, & recurring = true means contact can receive the same Trigger campaign several times",
                "example": true
              },
              "sentDate": {
                "type": "string",
                "description": "Sent UTC date-time of the campaign (YYYY-MM-DDTHH:mm:ss.SSSZ). Only available if 'status' of the campaign is 'sent'",
                "example": "2018-12-01T16:30:00Z"
              },
              "returnBounce": {
                "type": "integer",
                "description": "Total number of non-delivered campaigns for a particular campaign id.",
                "format": "int64",
                "example": 5
              }
            }
          }
        ]
      },
      "getCampaignRecipients": {
        "required": [
          "exclusionLists",
          "lists"
        ],
        "type": "object",
        "properties": {
          "lists": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "List IDs included in the campaign",
              "format": "int64",
              "example": 21
            }
          },
          "exclusionLists": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "List IDs excluded of the campaign",
              "format": "int64",
              "example": 13
            }
          }
        }
      },
      "getExtendedCampaignStats": {
        "required": [
          "campaignStats",
          "globalStats",
          "linksStats",
          "mirrorClick",
          "remaining",
          "statsByBrowser",
          "statsByDevice",
          "statsByDomain"
        ],
        "type": "object",
        "properties": {
          "globalStats": {
            "type": "object",
            "description": "Overall statistics of the campaign",
            "allOf": [
              {
                "required": [
                  "clickers",
                  "complaints",
                  "delivered",
                  "hardBounces",
                  "sent",
                  "softBounces",
                  "uniqueClicks",
                  "uniqueViews",
                  "unsubscriptions",
                  "viewed",
                  "trackableViews"
                ],
                "type": "object",
                "properties": {
                  "listId": {
                    "type": "integer",
                    "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                    "format": "int64",
                    "example": 2
                  },
                  "uniqueClicks": {
                    "type": "integer",
                    "description": "Number of unique clicks for the campaign",
                    "format": "int64",
                    "example": 2300
                  },
                  "clickers": {
                    "type": "integer",
                    "description": "Number of total clicks for the campaign",
                    "format": "int64",
                    "example": 2665
                  },
                  "complaints": {
                    "type": "integer",
                    "description": "Number of complaints (Spam reports) for the campaign",
                    "format": "int64",
                    "example": 1
                  },
                  "delivered": {
                    "type": "integer",
                    "description": "Number of delivered emails for the campaign",
                    "format": "int64",
                    "example": 19765
                  },
                  "sent": {
                    "type": "integer",
                    "description": "Number of sent emails for the campaign",
                    "format": "int64",
                    "example": 19887
                  },
                  "softBounces": {
                    "type": "integer",
                    "description": "Number of softbounce for the campaign",
                    "format": "int64",
                    "example": 100
                  },
                  "hardBounces": {
                    "type": "integer",
                    "description": "Number of harbounce for the campaign",
                    "format": "int64",
                    "example": 87
                  },
                  "uniqueViews": {
                    "type": "integer",
                    "description": "Number of unique openings for the campaign",
                    "format": "int64",
                    "example": 7779
                  },
                  "trackableViews": {
                    "type": "integer",
                    "description": "Recipients without any privacy protection option enabled in their email client",
                    "format": "int64",
                    "example": 5661
                  },
                  "unsubscriptions": {
                    "type": "integer",
                    "description": "Number of unsubscription for the campaign",
                    "format": "int64",
                    "example": 2
                  },
                  "viewed": {
                    "type": "integer",
                    "description": "Number of openings for the campaign",
                    "format": "int64",
                    "example": 8999
                  },
                  "deferred": {
                    "type": "integer",
                    "description": "Number of deferred emails for the campaign",
                    "format": "int64",
                    "example": 30
                  },
                  "returnBounce": {
                    "type": "integer",
                    "description": "Total number of non-delivered campaigns for a particular campaign id.",
                    "format": "int64",
                    "example": 5
                  }
                }
              }
            ]
          },
          "campaignStats": {
            "type": "array",
            "description": "List-wise statistics of the campaign.",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "required": [
                    "clickers",
                    "complaints",
                    "delivered",
                    "hardBounces",
                    "sent",
                    "softBounces",
                    "uniqueClicks",
                    "uniqueViews",
                    "unsubscriptions",
                    "viewed",
                    "trackableViews"
                  ],
                  "type": "object",
                  "properties": {
                    "listId": {
                      "type": "integer",
                      "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                      "format": "int64",
                      "example": 2
                    },
                    "uniqueClicks": {
                      "type": "integer",
                      "description": "Number of unique clicks for the campaign",
                      "format": "int64",
                      "example": 2300
                    },
                    "clickers": {
                      "type": "integer",
                      "description": "Number of total clicks for the campaign",
                      "format": "int64",
                      "example": 2665
                    },
                    "complaints": {
                      "type": "integer",
                      "description": "Number of complaints (Spam reports) for the campaign",
                      "format": "int64",
                      "example": 1
                    },
                    "delivered": {
                      "type": "integer",
                      "description": "Number of delivered emails for the campaign",
                      "format": "int64",
                      "example": 19765
                    },
                    "sent": {
                      "type": "integer",
                      "description": "Number of sent emails for the campaign",
                      "format": "int64",
                      "example": 19887
                    },
                    "softBounces": {
                      "type": "integer",
                      "description": "Number of softbounce for the campaign",
                      "format": "int64",
                      "example": 100
                    },
                    "hardBounces": {
                      "type": "integer",
                      "description": "Number of harbounce for the campaign",
                      "format": "int64",
                      "example": 87
                    },
                    "uniqueViews": {
                      "type": "integer",
                      "description": "Number of unique openings for the campaign",
                      "format": "int64",
                      "example": 7779
                    },
                    "trackableViews": {
                      "type": "integer",
                      "description": "Recipients without any privacy protection option enabled in their email client",
                      "format": "int64",
                      "example": 5661
                    },
                    "unsubscriptions": {
                      "type": "integer",
                      "description": "Number of unsubscription for the campaign",
                      "format": "int64",
                      "example": 2
                    },
                    "viewed": {
                      "type": "integer",
                      "description": "Number of openings for the campaign",
                      "format": "int64",
                      "example": 8999
                    },
                    "deferred": {
                      "type": "integer",
                      "description": "Number of deferred emails for the campaign",
                      "format": "int64",
                      "example": 30
                    },
                    "returnBounce": {
                      "type": "integer",
                      "description": "Total number of non-delivered campaigns for a particular campaign id.",
                      "format": "int64",
                      "example": 5
                    }
                  }
                }
              ]
            }
          },
          "mirrorClick": {
            "type": "integer",
            "description": "Number of clicks on mirror link",
            "format": "int64",
            "example": 120
          },
          "remaining": {
            "type": "integer",
            "description": "Number of remaning emails to send",
            "format": "int64",
            "example": 1000
          },
          "linksStats": {
            "type": "object",
            "properties": {},
            "description": "Statistics about the number of clicks for the links",
            "example": {
              "example.abc.com": 7,
              "example.domain.com": 10
            }
          },
          "statsByDomain": {
            "type": "object",
            "additionalProperties": {
              "required": [
                "clickers",
                "complaints",
                "delivered",
                "hardBounces",
                "sent",
                "softBounces",
                "uniqueClicks",
                "uniqueViews",
                "unsubscriptions",
                "viewed",
                "trackableViews"
              ],
              "type": "object",
              "properties": {
                "listId": {
                  "type": "integer",
                  "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                  "format": "int64",
                  "example": 2
                },
                "uniqueClicks": {
                  "type": "integer",
                  "description": "Number of unique clicks for the campaign",
                  "format": "int64",
                  "example": 2300
                },
                "clickers": {
                  "type": "integer",
                  "description": "Number of total clicks for the campaign",
                  "format": "int64",
                  "example": 2665
                },
                "complaints": {
                  "type": "integer",
                  "description": "Number of complaints (Spam reports) for the campaign",
                  "format": "int64",
                  "example": 1
                },
                "delivered": {
                  "type": "integer",
                  "description": "Number of delivered emails for the campaign",
                  "format": "int64",
                  "example": 19765
                },
                "sent": {
                  "type": "integer",
                  "description": "Number of sent emails for the campaign",
                  "format": "int64",
                  "example": 19887
                },
                "softBounces": {
                  "type": "integer",
                  "description": "Number of softbounce for the campaign",
                  "format": "int64",
                  "example": 100
                },
                "hardBounces": {
                  "type": "integer",
                  "description": "Number of harbounce for the campaign",
                  "format": "int64",
                  "example": 87
                },
                "uniqueViews": {
                  "type": "integer",
                  "description": "Number of unique openings for the campaign",
                  "format": "int64",
                  "example": 7779
                },
                "trackableViews": {
                  "type": "integer",
                  "description": "Recipients without any privacy protection option enabled in their email client",
                  "format": "int64",
                  "example": 5661
                },
                "unsubscriptions": {
                  "type": "integer",
                  "description": "Number of unsubscription for the campaign",
                  "format": "int64",
                  "example": 2
                },
                "viewed": {
                  "type": "integer",
                  "description": "Number of openings for the campaign",
                  "format": "int64",
                  "example": 8999
                },
                "deferred": {
                  "type": "integer",
                  "description": "Number of deferred emails for the campaign",
                  "format": "int64",
                  "example": 30
                },
                "returnBounce": {
                  "type": "integer",
                  "description": "Total number of non-delivered campaigns for a particular campaign id.",
                  "format": "int64",
                  "example": 5
                }
              }
            }
          },
          "statsByDevice": {
            "type": "object",
            "properties": {
              "desktop": {
                "type": "object",
                "additionalProperties": {
                  "required": [
                    "clickers",
                    "uniqueClicks",
                    "uniqueViews",
                    "viewed"
                  ],
                  "type": "object",
                  "properties": {
                    "clickers": {
                      "type": "integer",
                      "description": "Number of total clicks for the campaign using the particular browser",
                      "format": "int64",
                      "example": 2665
                    },
                    "uniqueClicks": {
                      "type": "integer",
                      "description": "Number of unique clicks for the campaign using the particular browser",
                      "format": "int64",
                      "example": 2300
                    },
                    "viewed": {
                      "type": "integer",
                      "description": "Number of openings for the campaign using the particular browser",
                      "format": "int64",
                      "example": 8999
                    },
                    "uniqueViews": {
                      "type": "integer",
                      "description": "Number of unique openings for the campaign using the particular browser",
                      "format": "int64",
                      "example": 7779
                    }
                  }
                },
                "description": "Statistics of the campaign on the basis of desktop devices"
              },
              "mobile": {
                "type": "object",
                "additionalProperties": {
                  "required": [
                    "clickers",
                    "uniqueClicks",
                    "uniqueViews",
                    "viewed"
                  ],
                  "type": "object",
                  "properties": {
                    "clickers": {
                      "type": "integer",
                      "description": "Number of total clicks for the campaign using the particular browser",
                      "format": "int64",
                      "example": 2665
                    },
                    "uniqueClicks": {
                      "type": "integer",
                      "description": "Number of unique clicks for the campaign using the particular browser",
                      "format": "int64",
                      "example": 2300
                    },
                    "viewed": {
                      "type": "integer",
                      "description": "Number of openings for the campaign using the particular browser",
                      "format": "int64",
                      "example": 8999
                    },
                    "uniqueViews": {
                      "type": "integer",
                      "description": "Number of unique openings for the campaign using the particular browser",
                      "format": "int64",
                      "example": 7779
                    }
                  }
                },
                "description": "Statistics of the campaign on the basis of mobile devices"
              },
              "tablet": {
                "type": "object",
                "additionalProperties": {
                  "required": [
                    "clickers",
                    "uniqueClicks",
                    "uniqueViews",
                    "viewed"
                  ],
                  "type": "object",
                  "properties": {
                    "clickers": {
                      "type": "integer",
                      "description": "Number of total clicks for the campaign using the particular browser",
                      "format": "int64",
                      "example": 2665
                    },
                    "uniqueClicks": {
                      "type": "integer",
                      "description": "Number of unique clicks for the campaign using the particular browser",
                      "format": "int64",
                      "example": 2300
                    },
                    "viewed": {
                      "type": "integer",
                      "description": "Number of openings for the campaign using the particular browser",
                      "format": "int64",
                      "example": 8999
                    },
                    "uniqueViews": {
                      "type": "integer",
                      "description": "Number of unique openings for the campaign using the particular browser",
                      "format": "int64",
                      "example": 7779
                    }
                  }
                },
                "description": "Statistics of the campaign on the basis of tablet devices"
              },
              "unknown": {
                "type": "object",
                "additionalProperties": {
                  "required": [
                    "clickers",
                    "uniqueClicks",
                    "uniqueViews",
                    "viewed"
                  ],
                  "type": "object",
                  "properties": {
                    "clickers": {
                      "type": "integer",
                      "description": "Number of total clicks for the campaign using the particular browser",
                      "format": "int64",
                      "example": 2665
                    },
                    "uniqueClicks": {
                      "type": "integer",
                      "description": "Number of unique clicks for the campaign using the particular browser",
                      "format": "int64",
                      "example": 2300
                    },
                    "viewed": {
                      "type": "integer",
                      "description": "Number of openings for the campaign using the particular browser",
                      "format": "int64",
                      "example": 8999
                    },
                    "uniqueViews": {
                      "type": "integer",
                      "description": "Number of unique openings for the campaign using the particular browser",
                      "format": "int64",
                      "example": 7779
                    }
                  }
                },
                "description": "Statistics of the campaign on the basis of unknown devices"
              }
            }
          },
          "statsByBrowser": {
            "type": "object",
            "additionalProperties": {
              "required": [
                "clickers",
                "uniqueClicks",
                "uniqueViews",
                "viewed"
              ],
              "type": "object",
              "properties": {
                "clickers": {
                  "type": "integer",
                  "description": "Number of total clicks for the campaign using the particular browser",
                  "format": "int64",
                  "example": 2665
                },
                "uniqueClicks": {
                  "type": "integer",
                  "description": "Number of unique clicks for the campaign using the particular browser",
                  "format": "int64",
                  "example": 2300
                },
                "viewed": {
                  "type": "integer",
                  "description": "Number of openings for the campaign using the particular browser",
                  "format": "int64",
                  "example": 8999
                },
                "uniqueViews": {
                  "type": "integer",
                  "description": "Number of unique openings for the campaign using the particular browser",
                  "format": "int64",
                  "example": 7779
                }
              }
            }
          }
        }
      },
      "getStatsByDomain": {
        "type": "object",
        "additionalProperties": {
          "required": [
            "clickers",
            "complaints",
            "delivered",
            "hardBounces",
            "sent",
            "softBounces",
            "uniqueClicks",
            "uniqueViews",
            "unsubscriptions",
            "viewed",
            "trackableViews"
          ],
          "type": "object",
          "properties": {
            "listId": {
              "type": "integer",
              "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
              "format": "int64",
              "example": 2
            },
            "uniqueClicks": {
              "type": "integer",
              "description": "Number of unique clicks for the campaign",
              "format": "int64",
              "example": 2300
            },
            "clickers": {
              "type": "integer",
              "description": "Number of total clicks for the campaign",
              "format": "int64",
              "example": 2665
            },
            "complaints": {
              "type": "integer",
              "description": "Number of complaints (Spam reports) for the campaign",
              "format": "int64",
              "example": 1
            },
            "delivered": {
              "type": "integer",
              "description": "Number of delivered emails for the campaign",
              "format": "int64",
              "example": 19765
            },
            "sent": {
              "type": "integer",
              "description": "Number of sent emails for the campaign",
              "format": "int64",
              "example": 19887
            },
            "softBounces": {
              "type": "integer",
              "description": "Number of softbounce for the campaign",
              "format": "int64",
              "example": 100
            },
            "hardBounces": {
              "type": "integer",
              "description": "Number of harbounce for the campaign",
              "format": "int64",
              "example": 87
            },
            "uniqueViews": {
              "type": "integer",
              "description": "Number of unique openings for the campaign",
              "format": "int64",
              "example": 7779
            },
            "trackableViews": {
              "type": "integer",
              "description": "Recipients without any privacy protection option enabled in their email client",
              "format": "int64",
              "example": 5661
            },
            "unsubscriptions": {
              "type": "integer",
              "description": "Number of unsubscription for the campaign",
              "format": "int64",
              "example": 2
            },
            "viewed": {
              "type": "integer",
              "description": "Number of openings for the campaign",
              "format": "int64",
              "example": 8999
            },
            "deferred": {
              "type": "integer",
              "description": "Number of deferred emails for the campaign",
              "format": "int64",
              "example": 30
            },
            "returnBounce": {
              "type": "integer",
              "description": "Total number of non-delivered campaigns for a particular campaign id.",
              "format": "int64",
              "example": 5
            }
          }
        }
      },
      "getStatsByDevice": {
        "type": "object",
        "properties": {
          "desktop": {
            "type": "object",
            "additionalProperties": {
              "required": [
                "clickers",
                "uniqueClicks",
                "uniqueViews",
                "viewed"
              ],
              "type": "object",
              "properties": {
                "clickers": {
                  "type": "integer",
                  "description": "Number of total clicks for the campaign using the particular browser",
                  "format": "int64",
                  "example": 2665
                },
                "uniqueClicks": {
                  "type": "integer",
                  "description": "Number of unique clicks for the campaign using the particular browser",
                  "format": "int64",
                  "example": 2300
                },
                "viewed": {
                  "type": "integer",
                  "description": "Number of openings for the campaign using the particular browser",
                  "format": "int64",
                  "example": 8999
                },
                "uniqueViews": {
                  "type": "integer",
                  "description": "Number of unique openings for the campaign using the particular browser",
                  "format": "int64",
                  "example": 7779
                }
              }
            },
            "description": "Statistics of the campaign on the basis of desktop devices"
          },
          "mobile": {
            "type": "object",
            "additionalProperties": {
              "required": [
                "clickers",
                "uniqueClicks",
                "uniqueViews",
                "viewed"
              ],
              "type": "object",
              "properties": {
                "clickers": {
                  "type": "integer",
                  "description": "Number of total clicks for the campaign using the particular browser",
                  "format": "int64",
                  "example": 2665
                },
                "uniqueClicks": {
                  "type": "integer",
                  "description": "Number of unique clicks for the campaign using the particular browser",
                  "format": "int64",
                  "example": 2300
                },
                "viewed": {
                  "type": "integer",
                  "description": "Number of openings for the campaign using the particular browser",
                  "format": "int64",
                  "example": 8999
                },
                "uniqueViews": {
                  "type": "integer",
                  "description": "Number of unique openings for the campaign using the particular browser",
                  "format": "int64",
                  "example": 7779
                }
              }
            },
            "description": "Statistics of the campaign on the basis of mobile devices"
          },
          "tablet": {
            "type": "object",
            "additionalProperties": {
              "required": [
                "clickers",
                "uniqueClicks",
                "uniqueViews",
                "viewed"
              ],
              "type": "object",
              "properties": {
                "clickers": {
                  "type": "integer",
                  "description": "Number of total clicks for the campaign using the particular browser",
                  "format": "int64",
                  "example": 2665
                },
                "uniqueClicks": {
                  "type": "integer",
                  "description": "Number of unique clicks for the campaign using the particular browser",
                  "format": "int64",
                  "example": 2300
                },
                "viewed": {
                  "type": "integer",
                  "description": "Number of openings for the campaign using the particular browser",
                  "format": "int64",
                  "example": 8999
                },
                "uniqueViews": {
                  "type": "integer",
                  "description": "Number of unique openings for the campaign using the particular browser",
                  "format": "int64",
                  "example": 7779
                }
              }
            },
            "description": "Statistics of the campaign on the basis of tablet devices"
          },
          "unknown": {
            "type": "object",
            "additionalProperties": {
              "required": [
                "clickers",
                "uniqueClicks",
                "uniqueViews",
                "viewed"
              ],
              "type": "object",
              "properties": {
                "clickers": {
                  "type": "integer",
                  "description": "Number of total clicks for the campaign using the particular browser",
                  "format": "int64",
                  "example": 2665
                },
                "uniqueClicks": {
                  "type": "integer",
                  "description": "Number of unique clicks for the campaign using the particular browser",
                  "format": "int64",
                  "example": 2300
                },
                "viewed": {
                  "type": "integer",
                  "description": "Number of openings for the campaign using the particular browser",
                  "format": "int64",
                  "example": 8999
                },
                "uniqueViews": {
                  "type": "integer",
                  "description": "Number of unique openings for the campaign using the particular browser",
                  "format": "int64",
                  "example": 7779
                }
              }
            },
            "description": "Statistics of the campaign on the basis of unknown devices"
          }
        }
      },
      "getStatsByBrowser": {
        "type": "object",
        "additionalProperties": {
          "required": [
            "clickers",
            "uniqueClicks",
            "uniqueViews",
            "viewed"
          ],
          "type": "object",
          "properties": {
            "clickers": {
              "type": "integer",
              "description": "Number of total clicks for the campaign using the particular browser",
              "format": "int64",
              "example": 2665
            },
            "uniqueClicks": {
              "type": "integer",
              "description": "Number of unique clicks for the campaign using the particular browser",
              "format": "int64",
              "example": 2300
            },
            "viewed": {
              "type": "integer",
              "description": "Number of openings for the campaign using the particular browser",
              "format": "int64",
              "example": 8999
            },
            "uniqueViews": {
              "type": "integer",
              "description": "Number of unique openings for the campaign using the particular browser",
              "format": "int64",
              "example": 7779
            }
          }
        }
      },
      "addContactToListByEmails": {
        "type": "object",
        "properties": {
          "emails": {
            "maxItems": 150,
            "minItems": 1,
            "type": "array",
            "description": "Emails to add to a list. You can pass a **maximum of 150 emails** for addition in one request. **_If you need to add the emails in bulk, please prefer /contacts/import api._**\n",
            "items": {
              "type": "string",
              "description": "Email to add to a list",
              "format": "email",
              "example": "john.smith@contact.com"
            }
          }
        }
      },
      "addContactToListByIDs": {
        "type": "object",
        "properties": {
          "ids": {
            "maxItems": 150,
            "minItems": 1,
            "type": "array",
            "description": "IDs to add to a list. You can pass a **maximum of 150 IDs** for addition in one request. **_If you need to add the emails in bulk, please prefer /contacts/import api._**\n",
            "items": {
              "type": "integer",
              "description": "ID to add to a list",
              "format": "int64",
              "example": 10
            }
          }
        }
      },
      "removeContactFromListByEmails": {
        "type": "object",
        "properties": {
          "emails": {
            "maxItems": 150,
            "minItems": 1,
            "type": "array",
            "description": "**Required if 'all' is false and 'ids' is empty.** Emails to remove from a list. You can pass a **maximum of 150 emails** for removal in one request.\n",
            "items": {
              "type": "string",
              "description": "Email to remove from a list",
              "format": "email",
              "example": "john.smith@contact.com"
            }
          }
        }
      },
      "removeContactFromListByIDs": {
        "type": "object",
        "properties": {
          "ids": {
            "maxItems": 150,
            "minItems": 1,
            "type": "array",
            "description": "**Required if 'all' is false and 'emails' is empty.** IDs to remove from a list. You can pass a **maximum of 150 IDs** for removal in one request.\n",
            "items": {
              "type": "integer",
              "description": "ID to remove from a list",
              "format": "int64",
              "example": 10
            }
          }
        }
      },
      "removeContactFromListByAll": {
        "type": "object",
        "properties": {
          "all": {
            "type": "boolean",
            "description": "**Required if 'emails' and 'ids' are empty.** Remove all existing contacts from a list. A process will be created in this scenario. You can fetch the process details to know about the progress\n",
            "example": true
          }
        }
      },
      "getSmsCampaignOverview": {
        "required": [
          "content",
          "createdAt",
          "id",
          "modifiedAt",
          "name",
          "sender",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the SMS Campaign",
            "format": "int64",
            "example": 2
          },
          "name": {
            "type": "string",
            "description": "Name of the SMS Campaign",
            "example": "PROMO CODE"
          },
          "status": {
            "type": "string",
            "description": "Status of the SMS Campaign",
            "example": "draft",
            "enum": [
              "draft",
              "sent",
              "archive",
              "queued",
              "suspended",
              "inProcess"
            ]
          },
          "content": {
            "type": "string",
            "description": "Content of the SMS Campaign",
            "example": "Visit our Store and get some discount !"
          },
          "scheduledAt": {
            "type": "string",
            "description": "UTC date-time on which SMS campaign is scheduled. Should be in YYYY-MM-DDTHH:mm:ss.SSSZ format",
            "example": "2017-06-01T12:30:00Z"
          },
          "sender": {
            "type": "string",
            "description": "Sender of the SMS Campaign",
            "example": "MyCompany"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation UTC date-time of the SMS campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
            "example": "2017-06-01T12:30:00Z"
          },
          "modifiedAt": {
            "type": "string",
            "description": "UTC date-time of last modification of the SMS campaign (YYYY-MM-DDTHH:mm:ss.SSSZ)",
            "example": "2017-05-01T12:30:00Z"
          }
        }
      },
      "createModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the object created",
            "format": "int64",
            "example": 5
          }
        }
      },
      "createUpdateContactModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the contact when a new contact is created",
            "format": "int64",
            "example": 122
          }
        }
      },
      "updateBatchContactsModel": {
        "type": "object",
        "properties": {
          "successIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "IDs which are successfully updated",
              "format": "int64"
            },
            "example": "1,2"
          },
          "failureIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "IDs which are not updated",
              "format": "int64"
            },
            "example": "3,4"
          }
        }
      },
      "createSenderModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the Sender created",
            "format": "int64",
            "example": 5
          },
          "spfError": {
            "type": "boolean",
            "description": "Status of SPF configuration for the sender (true = SPF not well configured, false = SPF well configured)",
            "example": true
          },
          "dkimError": {
            "type": "boolean",
            "description": "Status of DKIM configuration for the sender (true = DKIM not well configured, false = DKIM well configured)",
            "example": false
          }
        }
      },
      "createSmtpEmail": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string",
            "description": "Message ID of the transactional email sent",
            "example": "<201798300811.5787683@relay.domain.com>"
          },
          "messageIds": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "version wise message ID's of the transactional emails sent",
              "example": [
                "<201798300811.5787683@relay.domain.com>",
                "<201798300811.5787683@relay.domain.com>"
              ]
            }
          }
        }
      },
      "createReseller": {
        "required": [
          "authKey"
        ],
        "type": "object",
        "properties": {
          "authKey": {
            "type": "string",
            "description": "AuthKey of Reseller child created",
            "example": "xkeysib-21881axxxxxcc92e04-mIrexxxx7z"
          },
          "id": {
            "type": "integer",
            "description": "Id of Reseller child created",
            "format": "int64",
            "example": 1234567
          }
        }
      },
      "sendSms": {
        "required": [
          "messageId",
          "reference"
        ],
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "example": "ab1cde2fgh3i4jklmno"
          },
          "messageId": {
            "type": "integer",
            "format": "int64",
            "example": 1511882900176220
          },
          "smsCount": {
            "type": "integer",
            "description": "Count of SMS's to send multiple text messages",
            "format": "int64",
            "example": 2
          },
          "usedCredits": {
            "type": "number",
            "description": "SMS credits used per text message",
            "format": "float",
            "example": 0.7
          },
          "remainingCredits": {
            "type": "number",
            "description": "Remaining SMS credits of the user",
            "format": "float",
            "example": 82.85
          }
        }
      },
      "createdProcessId": {
        "required": [
          "processId"
        ],
        "type": "object",
        "properties": {
          "processId": {
            "type": "integer",
            "description": "Id of the process created",
            "format": "int64",
            "example": 78
          }
        }
      },
      "createUpdateFolder": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the folder",
            "example": "Wordpress Contacts"
          }
        }
      },
      "postSendFailed": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Response code",
            "example": "invalid_parameter"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "The email could not be sent to all recipients"
          },
          "unexistingEmails": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Email addresses you tried to sent an email to, but not existing in your contacts",
              "format": "email",
              "example": "matthew.dow@example.com, elisa.carrely@example.com"
            }
          },
          "withoutListEmails": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Email addresses you sent an email to, without a contact list",
              "format": "email",
              "example": "jeff.dean@example.com, jim.sue@example.com"
            }
          },
          "blackListedEmails": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Email addresses which are blacklisted. ONLY FOR email-campign's sendTest OR smtp-template's sendTest api's.",
              "format": "email",
              "example": "jeff.dean@example.com, jim.sue@example.com"
            }
          }
        }
      },
      "postSendSmsTestFailed": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Response code",
            "example": "invalid_parameter"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "The SMS could not be sent to all recipients"
          },
          "unexistingSms": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Email addresses you tried to sent a SMS to, but not existing in your contacts",
              "format": "email",
              "example": "337699086644@mailin.com, 41778899954@mailin.com"
            }
          },
          "withoutListSms": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Email addresses you sent a SMS to, without a contact list",
              "format": "email",
              "example": "3542388988@mailin.com, 10976444477@mailin.com"
            }
          }
        }
      },
      "postContactInfo": {
        "required": [
          "contacts"
        ],
        "type": "object",
        "properties": {
          "contacts": {
            "type": "object",
            "properties": {
              "success": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Email addresses which are successfully imported/removed",
                      "format": "email"
                    },
                    "example": "jeff32@example.com, jim56@example.com"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "IDs which are successfully imported/removed",
                      "format": "int64"
                    },
                    "example": "1, 2"
                  }
                ]
              },
              "failure": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Email addresses which can not be imported/removed, could be already in/out list and/or doesn't exist",
                      "format": "email",
                      "example": "jeff32@example.com, jim56@example.com"
                    }
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "IDs which can not be imported/removed, could be already in/out list and/or doesn't exist",
                      "format": "int64",
                      "example": "5, 6"
                    }
                  }
                ]
              },
              "total": {
                "type": "integer",
                "description": "Displays the count of total number of contacts removed from list when user opts for \"all\" option.",
                "format": "int64",
                "example": 27
              },
              "processId": {
                "type": "integer",
                "description": "Id of the process created to remove contacts from list when user opts for \"all\" option.",
                "format": "int64",
                "example": 78
              }
            }
          }
        }
      },
      "getAggregatedReport": {
        "type": "object",
        "properties": {
          "range": {
            "type": "string",
            "description": "Time frame of the report",
            "example": "2016-09-08|2017-04-06"
          },
          "requests": {
            "type": "integer",
            "description": "Number of requests for the timeframe",
            "format": "int64",
            "example": 263
          },
          "delivered": {
            "type": "integer",
            "description": "Number of delivered emails for the timeframe",
            "format": "int64",
            "example": 249
          },
          "hardBounces": {
            "type": "integer",
            "description": "Number of hardbounces for the timeframe",
            "format": "int64",
            "example": 1
          },
          "softBounces": {
            "type": "integer",
            "description": "Number of softbounces for the timeframe",
            "format": "int64",
            "example": 4
          },
          "clicks": {
            "type": "integer",
            "description": "Number of clicks for the timeframe",
            "format": "int64",
            "example": 12
          },
          "uniqueClicks": {
            "type": "integer",
            "description": "Number of unique clicks for the timeframe",
            "format": "int64",
            "example": 8
          },
          "opens": {
            "type": "integer",
            "description": "Number of openings for the timeframe",
            "format": "int64",
            "example": 47
          },
          "uniqueOpens": {
            "type": "integer",
            "description": "Number of unique openings for the timeframe",
            "format": "int64",
            "example": 37
          },
          "spamReports": {
            "type": "integer",
            "description": "Number of complaint (spam report) for the timeframe",
            "format": "int64",
            "example": 0
          },
          "blocked": {
            "type": "integer",
            "description": "Number of blocked contact emails for the timeframe",
            "format": "int64",
            "example": 2
          },
          "invalid": {
            "type": "integer",
            "description": "Number of invalid emails for the timeframe",
            "format": "int64",
            "example": 0
          },
          "unsubscribed": {
            "type": "integer",
            "description": "Number of unsubscribed emails for the timeframe",
            "format": "int64",
            "example": 0
          }
        }
      },
      "getTransacBlockedContacts": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Count of blocked or unsubscribed contact",
            "format": "int64",
            "example": 1
          },
          "contacts": {
            "type": "array",
            "items": {
              "required": [
                "blockedAt",
                "email",
                "reason",
                "senderEmail"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address of the blocked or unsubscribed contact",
                  "format": "email",
                  "example": "john.smith@example.com"
                },
                "senderEmail": {
                  "type": "string",
                  "description": "Sender email address of the blocked or unsubscribed contact",
                  "format": "email",
                  "example": "john.smith@example.com"
                },
                "reason": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Reason code for blocking / unsubscribing (This code is safe for comparison)",
                      "example": "AdminBlocked",
                      "enum": [
                        "unsubscribedViaMA",
                        "unsubscribedViaEmail",
                        "adminBlocked",
                        "unsubscribedViaApi",
                        "hardBounce",
                        "contactFlaggedAsSpam"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "Reason for blocking / unsubscribing (This string is not safe for comparison)",
                      "example": "Admin blocked"
                    }
                  },
                  "description": "Reason for blocking / unsubscribing",
                  "example": "Admin blocked"
                },
                "blockedAt": {
                  "type": "string",
                  "description": "Date when the contact was blocked or unsubscribed on",
                  "example": "2017-05-01T12:30:00Z"
                }
              }
            }
          }
        }
      },
      "getReports": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "required": [
                "blocked",
                "clicks",
                "date",
                "delivered",
                "hardBounces",
                "invalid",
                "opens",
                "requests",
                "softBounces",
                "spamReports",
                "uniqueClicks",
                "uniqueOpens",
                "unsubscribed"
              ],
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "description": "Date of the statistics",
                  "format": "date",
                  "example": "2017-04-06"
                },
                "requests": {
                  "type": "integer",
                  "description": "Number of requests for the date",
                  "format": "int64",
                  "example": 65
                },
                "delivered": {
                  "type": "integer",
                  "description": "Number of delivered emails for the date",
                  "format": "int64",
                  "example": 63
                },
                "hardBounces": {
                  "type": "integer",
                  "description": "Number of hardbounces for the date",
                  "format": "int64",
                  "example": 1
                },
                "softBounces": {
                  "type": "integer",
                  "description": "Number of softbounces for the date",
                  "format": "int64",
                  "example": 1
                },
                "clicks": {
                  "type": "integer",
                  "description": "Number of clicks for the date",
                  "format": "int64",
                  "example": 6
                },
                "uniqueClicks": {
                  "type": "integer",
                  "description": "Number of unique clicks for the date",
                  "format": "int64",
                  "example": 5
                },
                "opens": {
                  "type": "integer",
                  "description": "Number of openings for the date",
                  "format": "int64",
                  "example": 58
                },
                "uniqueOpens": {
                  "type": "integer",
                  "description": "Number of unique openings for the date",
                  "format": "int64",
                  "example": 52
                },
                "spamReports": {
                  "type": "integer",
                  "description": "Number of complaints (spam reports) for the date",
                  "format": "int64",
                  "example": 0
                },
                "blocked": {
                  "type": "integer",
                  "description": "Number of blocked emails for the date",
                  "format": "int64",
                  "example": 0
                },
                "invalid": {
                  "type": "integer",
                  "description": "Number of invalid emails for the date",
                  "format": "int64",
                  "example": 0
                },
                "unsubscribed": {
                  "type": "integer",
                  "description": "Number of unsubscribed emails for the date",
                  "format": "int64",
                  "example": 0
                }
              }
            }
          }
        }
      },
      "getEmailEventReport": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "required": [
                "date",
                "email",
                "event",
                "messageId"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address which generates the event",
                  "format": "email",
                  "example": "john.smith@example.com"
                },
                "date": {
                  "type": "string",
                  "description": "UTC date-time on which the event has been generated",
                  "example": "2017-03-12T12:30:00Z"
                },
                "subject": {
                  "type": "string",
                  "description": "Subject of the event",
                  "example": "Sib client test"
                },
                "messageId": {
                  "type": "string",
                  "description": "Message ID which generated the event",
                  "example": "<201798300811.5787683@relay.domain.com>"
                },
                "event": {
                  "type": "string",
                  "description": "Event which occurred",
                  "example": "delivered",
                  "enum": [
                    "bounces",
                    "hardBounces",
                    "softBounces",
                    "delivered",
                    "spam",
                    "requests",
                    "opened",
                    "clicks",
                    "invalid",
                    "deferred",
                    "blocked",
                    "unsubscribed",
                    "error"
                  ]
                },
                "reason": {
                  "type": "string",
                  "description": "Reason of bounce (only available if the event is hardbounce or softbounce)",
                  "example": "Error connection timeout"
                },
                "tag": {
                  "type": "string",
                  "description": "Tag of the email which generated the event",
                  "example": "OrderConfirmation"
                },
                "ip": {
                  "type": "string",
                  "description": "IP from which the user has opened the email or clicked on the link (only available if the event is opened or clicks)",
                  "example": "165.87.3.15"
                },
                "link": {
                  "type": "string",
                  "description": "The link which is sent to the user (only available if the event is requests or opened or clicks)",
                  "example": "https://www.someexamplelink.com"
                },
                "from": {
                  "type": "string",
                  "description": "Sender email from which the emails are sent",
                  "format": "email",
                  "example": "john@example.com"
                },
                "templateId": {
                  "type": "integer",
                  "description": "ID of the template (only available if the email is template based)",
                  "format": "int64",
                  "example": 4
                }
              }
            }
          }
        }
      },
      "getSmsEventReport": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number which has generated the event",
                  "example": "00189001094"
                },
                "date": {
                  "type": "string",
                  "description": "UTC date-time on which the event has been generated",
                  "example": "2017-03-12T12:30:00Z"
                },
                "messageId": {
                  "type": "string",
                  "description": "Message ID which generated the event",
                  "example": "1472640582425378"
                },
                "event": {
                  "type": "string",
                  "description": "Event which occurred",
                  "example": "accepted",
                  "enum": [
                    "bounces",
                    "hardBounces",
                    "softBounces",
                    "delivered",
                    "sent",
                    "accepted",
                    "unsubscription",
                    "replies",
                    "blocked"
                  ]
                },
                "reason": {
                  "type": "string",
                  "description": "Reason of bounce (only available if the event is hardbounce or softbounce)",
                  "example": "Message is undeliverable due to an incorrect / invalid / blacklisted / permanently barred MSISDN for this operator"
                },
                "reply": {
                  "type": "string"
                },
                "tag": {
                  "type": "string",
                  "description": "Tag of the SMS which generated the event",
                  "example": "CabWaiting"
                }
              }
            }
          }
        }
      },
      "getSmtpTemplateOverview": {
        "required": [
          "createdAt",
          "htmlContent",
          "id",
          "isActive",
          "modifiedAt",
          "name",
          "replyTo",
          "sender",
          "subject",
          "tag",
          "testSent",
          "toField"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the template",
            "format": "int64",
            "example": 4
          },
          "name": {
            "type": "string",
            "description": "Name of the template",
            "example": "Order Confirmation - EN"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the template",
            "example": "Thanks for your order !"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status of template (true=active, false=inactive)",
            "example": true
          },
          "testSent": {
            "type": "boolean",
            "description": "Status of test sending for the template (true=test email has been sent, false=test email has not been sent)",
            "example": true
          },
          "sender": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "From email for the template",
                "example": "Mary form MyShop"
              },
              "email": {
                "type": "string",
                "description": "From email for the template",
                "format": "email",
                "example": "contact@myshop.fr"
              },
              "id": {
                "type": "string",
                "description": "Sender id of the template",
                "example": "43"
              }
            }
          },
          "replyTo": {
            "type": "string",
            "description": "Email defined as the \"Reply to\" for the template",
            "format": "email",
            "example": "replyto@domain.com"
          },
          "toField": {
            "type": "string",
            "description": "Customisation of the \"to\" field for the template",
            "example": "{FIRSTNAME} {LASTNAME}"
          },
          "tag": {
            "type": "string",
            "description": "Tag of the template",
            "example": "sports"
          },
          "htmlContent": {
            "type": "string",
            "description": "HTML content of the template",
            "example": "Your order n°xxxxx has been confirmed. Thanks for your purchase."
          },
          "createdAt": {
            "type": "string",
            "description": "Creation UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)",
            "example": "2017-05-01T12:30:00Z"
          },
          "modifiedAt": {
            "type": "string",
            "description": "Last modification UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)",
            "example": "2017-05-12T12:30:00Z"
          },
          "doiTemplate": {
            "type": "boolean",
            "description": "It is true if template is a valid Double opt-in (DOI) template, otherwise it is false. This field will be available only in case of single template detail call.",
            "example": false
          }
        }
      },
      "getSmtpTemplates": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Count of transactional email templates",
            "format": "int64",
            "example": 1
          },
          "templates": {
            "type": "array",
            "items": {
              "required": [
                "createdAt",
                "htmlContent",
                "id",
                "isActive",
                "modifiedAt",
                "name",
                "replyTo",
                "sender",
                "subject",
                "tag",
                "testSent",
                "toField"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of the template",
                  "format": "int64",
                  "example": 4
                },
                "name": {
                  "type": "string",
                  "description": "Name of the template",
                  "example": "Order Confirmation - EN"
                },
                "subject": {
                  "type": "string",
                  "description": "Subject of the template",
                  "example": "Thanks for your order !"
                },
                "isActive": {
                  "type": "boolean",
                  "description": "Status of template (true=active, false=inactive)",
                  "example": true
                },
                "testSent": {
                  "type": "boolean",
                  "description": "Status of test sending for the template (true=test email has been sent, false=test email has not been sent)",
                  "example": true
                },
                "sender": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "From email for the template",
                      "example": "Mary form MyShop"
                    },
                    "email": {
                      "type": "string",
                      "description": "From email for the template",
                      "format": "email",
                      "example": "contact@myshop.fr"
                    },
                    "id": {
                      "type": "string",
                      "description": "Sender id of the template",
                      "example": "43"
                    }
                  }
                },
                "replyTo": {
                  "type": "string",
                  "description": "Email defined as the \"Reply to\" for the template",
                  "format": "email",
                  "example": "replyto@domain.com"
                },
                "toField": {
                  "type": "string",
                  "description": "Customisation of the \"to\" field for the template",
                  "example": "{FIRSTNAME} {LASTNAME}"
                },
                "tag": {
                  "type": "string",
                  "description": "Tag of the template",
                  "example": "sports"
                },
                "htmlContent": {
                  "type": "string",
                  "description": "HTML content of the template",
                  "example": "Your order n°xxxxx has been confirmed. Thanks for your purchase."
                },
                "createdAt": {
                  "type": "string",
                  "description": "Creation UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                  "example": "2017-05-01T12:30:00Z"
                },
                "modifiedAt": {
                  "type": "string",
                  "description": "Last modification UTC date-time of the template (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                  "example": "2017-05-12T12:30:00Z"
                },
                "doiTemplate": {
                  "type": "boolean",
                  "description": "It is true if template is a valid Double opt-in (DOI) template, otherwise it is false. This field will be available only in case of single template detail call.",
                  "example": false
                }
              }
            }
          }
        }
      },
      "getWebhook": {
        "required": [
          "createdAt",
          "description",
          "events",
          "id",
          "modifiedAt",
          "type",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL of the webhook",
            "format": "url",
            "example": "http://requestb.in/173lyyx1"
          },
          "id": {
            "type": "integer",
            "description": "ID of the webhook",
            "format": "int64",
            "example": 654
          },
          "description": {
            "type": "string",
            "description": "Description of the webhook",
            "example": "Webhook triggered on campaign openings"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Events which will trigger the webhook when they occure",
              "example": "opens,clicks"
            }
          },
          "type": {
            "type": "string",
            "description": "Type of webhook (marketing or transac)",
            "example": "marketing",
            "enum": [
              "marketing",
              "transac"
            ]
          },
          "createdAt": {
            "type": "string",
            "description": "Creation UTC date-time of the webhook (YYYY-MM-DDTHH:mm:ss.SSSZ)",
            "example": "2016-12-01T12:50:00Z"
          },
          "modifiedAt": {
            "type": "string",
            "description": "Last modification UTC date-time of the webhook (YYYY-MM-DDTHH:mm:ss.SSSZ)",
            "example": "2017-05-12T13:15:00Z"
          }
        }
      },
      "getWebhooks": {
        "required": [
          "webhooks"
        ],
        "type": "object",
        "properties": {
          "webhooks": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "required": [
                    "createdAt",
                    "description",
                    "events",
                    "id",
                    "modifiedAt",
                    "type",
                    "url"
                  ],
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "URL of the webhook",
                      "format": "url",
                      "example": "http://requestb.in/173lyyx1"
                    },
                    "id": {
                      "type": "integer",
                      "description": "ID of the webhook",
                      "format": "int64",
                      "example": 654
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the webhook",
                      "example": "Webhook triggered on campaign openings"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Events which will trigger the webhook when they occure",
                        "example": "opens,clicks"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of webhook (marketing or transac)",
                      "example": "marketing",
                      "enum": [
                        "marketing",
                        "transac"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Creation UTC date-time of the webhook (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                      "example": "2016-12-01T12:50:00Z"
                    },
                    "modifiedAt": {
                      "type": "string",
                      "description": "Last modification UTC date-time of the webhook (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                      "example": "2017-05-12T13:15:00Z"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "getContactDetails": {
        "required": [
          "attributes",
          "createdAt",
          "email",
          "emailBlacklisted",
          "id",
          "listIds",
          "modifiedAt",
          "smsBlacklisted"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address of the contact for which you requested the details",
            "format": "email",
            "example": "john.smith@example.com"
          },
          "id": {
            "type": "integer",
            "description": "ID of the contact for which you requested the details",
            "format": "int64",
            "example": 32
          },
          "emailBlacklisted": {
            "type": "boolean",
            "description": "Blacklist status for email campaigns (true=blacklisted, false=not blacklisted)",
            "example": false
          },
          "smsBlacklisted": {
            "type": "boolean",
            "description": "Blacklist status for SMS campaigns (true=blacklisted, false=not blacklisted)",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "description": "Creation UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
            "example": "2017-05-12T12:30:00Z"
          },
          "modifiedAt": {
            "type": "string",
            "description": "Last modification UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
            "example": "2017-05-12T12:30:00Z"
          },
          "listIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "List(s) in which the contact is included",
              "format": "int64"
            }
          },
          "listUnsubscribed": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "List(s) in which the contact is included (only available if unsubscription per list is activated for the account)",
              "format": "int64"
            }
          },
          "attributes": {
            "type": "object",
            "properties": {},
            "description": "Set of attributes of the contact",
            "example": {
              "name": "Joe",
              "email": "joe@example.com"
            }
          }
        }
      },
      "getExtendedContactDetails": {
        "allOf": [
          {
            "required": [
              "attributes",
              "createdAt",
              "email",
              "emailBlacklisted",
              "id",
              "listIds",
              "modifiedAt",
              "smsBlacklisted"
            ],
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Email address of the contact for which you requested the details",
                "format": "email",
                "example": "john.smith@example.com"
              },
              "id": {
                "type": "integer",
                "description": "ID of the contact for which you requested the details",
                "format": "int64",
                "example": 32
              },
              "emailBlacklisted": {
                "type": "boolean",
                "description": "Blacklist status for email campaigns (true=blacklisted, false=not blacklisted)",
                "example": false
              },
              "smsBlacklisted": {
                "type": "boolean",
                "description": "Blacklist status for SMS campaigns (true=blacklisted, false=not blacklisted)",
                "example": true
              },
              "createdAt": {
                "type": "string",
                "description": "Creation UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                "example": "2017-05-12T12:30:00Z"
              },
              "modifiedAt": {
                "type": "string",
                "description": "Last modification UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                "example": "2017-05-12T12:30:00Z"
              },
              "listIds": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "List(s) in which the contact is included",
                  "format": "int64"
                }
              },
              "listUnsubscribed": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "List(s) in which the contact is included (only available if unsubscription per list is activated for the account)",
                  "format": "int64"
                }
              },
              "attributes": {
                "type": "object",
                "properties": {},
                "description": "Set of attributes of the contact",
                "example": {
                  "name": "Joe",
                  "email": "joe@example.com"
                }
              }
            }
          },
          {
            "required": [
              "statistics"
            ],
            "type": "object",
            "properties": {
              "statistics": {
                "type": "object",
                "properties": {
                  "messagesSent": {
                    "type": "array",
                    "description": "Listing of the sent campaign for the contact",
                    "items": {
                      "required": [
                        "campaignId",
                        "eventTime"
                      ],
                      "type": "object",
                      "properties": {
                        "campaignId": {
                          "type": "integer",
                          "description": "ID of the campaign which generated the event",
                          "format": "int64",
                          "example": 3
                        },
                        "eventTime": {
                          "type": "string",
                          "description": "UTC date-time of the event",
                          "example": "2017-03-12T20:15:13Z"
                        }
                      }
                    }
                  },
                  "hardBounces": {
                    "type": "array",
                    "description": "Listing of the hardbounes generated by the contact",
                    "items": {
                      "required": [
                        "campaignId",
                        "eventTime"
                      ],
                      "type": "object",
                      "properties": {
                        "campaignId": {
                          "type": "integer",
                          "description": "ID of the campaign which generated the event",
                          "format": "int64",
                          "example": 3
                        },
                        "eventTime": {
                          "type": "string",
                          "description": "UTC date-time of the event",
                          "example": "2017-03-12T20:15:13Z"
                        }
                      }
                    }
                  },
                  "softBounces": {
                    "type": "array",
                    "description": "Listing of the softbounes generated by the contact",
                    "items": {
                      "required": [
                        "campaignId",
                        "eventTime"
                      ],
                      "type": "object",
                      "properties": {
                        "campaignId": {
                          "type": "integer",
                          "description": "ID of the campaign which generated the event",
                          "format": "int64",
                          "example": 3
                        },
                        "eventTime": {
                          "type": "string",
                          "description": "UTC date-time of the event",
                          "example": "2017-03-12T20:15:13Z"
                        }
                      }
                    }
                  },
                  "complaints": {
                    "type": "array",
                    "description": "Listing of the complaints generated by the contact",
                    "items": {
                      "required": [
                        "campaignId",
                        "eventTime"
                      ],
                      "type": "object",
                      "properties": {
                        "campaignId": {
                          "type": "integer",
                          "description": "ID of the campaign which generated the event",
                          "format": "int64",
                          "example": 3
                        },
                        "eventTime": {
                          "type": "string",
                          "description": "UTC date-time of the event",
                          "example": "2017-03-12T20:15:13Z"
                        }
                      }
                    }
                  },
                  "unsubscriptions": {
                    "required": [
                      "adminUnsubscription",
                      "userUnsubscription"
                    ],
                    "type": "object",
                    "properties": {
                      "userUnsubscription": {
                        "type": "array",
                        "description": "Contact unsubscribe via unsubscription link in a campaign",
                        "items": {
                          "required": [
                            "campaignId",
                            "eventTime"
                          ],
                          "type": "object",
                          "properties": {
                            "campaignId": {
                              "type": "integer",
                              "description": "ID of the campaign which generated the event",
                              "format": "int64",
                              "example": 3
                            },
                            "eventTime": {
                              "type": "string",
                              "description": "UTC date-time of the event",
                              "example": "2017-03-12T20:15:13Z"
                            },
                            "ip": {
                              "type": "string",
                              "description": "IP from which the user has unsubscribed",
                              "example": "165.87.3.15"
                            }
                          }
                        }
                      },
                      "adminUnsubscription": {
                        "type": "array",
                        "description": "Contact has been unsubscribed from the administrator",
                        "items": {
                          "required": [
                            "eventTime"
                          ],
                          "type": "object",
                          "properties": {
                            "eventTime": {
                              "type": "string",
                              "description": "UTC date-time of the event",
                              "example": "2017-03-12T20:15:13Z"
                            },
                            "ip": {
                              "type": "string",
                              "description": "IP from which the user has been unsubscribed",
                              "example": "165.87.3.15"
                            }
                          }
                        }
                      }
                    },
                    "description": "Listing of the unsubscription for the contact"
                  },
                  "opened": {
                    "type": "array",
                    "description": "Listing of the openings generated by the contact",
                    "items": {
                      "required": [
                        "campaignId",
                        "count",
                        "eventTime",
                        "ip"
                      ],
                      "type": "object",
                      "properties": {
                        "campaignId": {
                          "type": "integer",
                          "description": "ID of the campaign which generated the event",
                          "format": "int64",
                          "example": 3
                        },
                        "count": {
                          "type": "integer",
                          "description": "Number of openings for the campaign",
                          "format": "int64",
                          "example": 1
                        },
                        "eventTime": {
                          "type": "string",
                          "description": "UTC date-time of the event",
                          "example": "2017-03-12T20:15:13Z"
                        },
                        "ip": {
                          "type": "string",
                          "description": "IP from which the user has opened the email",
                          "example": "165.87.3.15"
                        }
                      }
                    }
                  },
                  "clicked": {
                    "type": "array",
                    "description": "Listing of the clicks generated by the contact",
                    "items": {
                      "required": [
                        "campaignId",
                        "links"
                      ],
                      "type": "object",
                      "properties": {
                        "campaignId": {
                          "type": "integer",
                          "description": "ID of the campaign which generated the event",
                          "format": "int64",
                          "example": 3
                        },
                        "links": {
                          "type": "array",
                          "description": "Listing of the clicked links for the campaign",
                          "items": {
                            "required": [
                              "count",
                              "eventTime",
                              "ip",
                              "url"
                            ],
                            "type": "object",
                            "properties": {
                              "count": {
                                "type": "integer",
                                "description": "Number of clicks on this link for the campaign",
                                "format": "int64",
                                "example": 1
                              },
                              "eventTime": {
                                "type": "string",
                                "description": "UTC date-time of the event",
                                "example": "2017-03-12T20:15:13Z"
                              },
                              "ip": {
                                "type": "string",
                                "description": "IP from which the user has clicked on the link",
                                "example": "165.87.3.15"
                              },
                              "url": {
                                "type": "string",
                                "description": "URL of the clicked link",
                                "example": "www.myshop.com"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "transacAttributes": {
                    "type": "array",
                    "description": "Listing of the transactional attributes for the contact",
                    "items": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "delivered": {
                    "type": "array",
                    "description": "Listing of the delivered campaign for the contact",
                    "items": {
                      "required": [
                        "campaignId",
                        "eventTime"
                      ],
                      "type": "object",
                      "properties": {
                        "campaignId": {
                          "type": "integer",
                          "description": "ID of the campaign which generated the event",
                          "format": "int64",
                          "example": 3
                        },
                        "eventTime": {
                          "type": "string",
                          "description": "UTC date-time of the event",
                          "example": "2017-03-12T20:15:13Z"
                        }
                      }
                    }
                  }
                },
                "description": "Campaign statistics of the contact"
              }
            }
          }
        ]
      },
      "getContactCampaignStats": {
        "type": "object",
        "properties": {
          "messagesSent": {
            "type": "array",
            "items": {
              "required": [
                "campaignId",
                "eventTime"
              ],
              "type": "object",
              "properties": {
                "campaignId": {
                  "type": "integer",
                  "description": "ID of the campaign which generated the event",
                  "format": "int64",
                  "example": 3
                },
                "eventTime": {
                  "type": "string",
                  "description": "UTC date-time of the event",
                  "example": "2017-03-12T20:15:13Z"
                }
              }
            }
          },
          "hardBounces": {
            "type": "array",
            "items": {
              "required": [
                "campaignId",
                "eventTime"
              ],
              "type": "object",
              "properties": {
                "campaignId": {
                  "type": "integer",
                  "description": "ID of the campaign which generated the event",
                  "format": "int64",
                  "example": 3
                },
                "eventTime": {
                  "type": "string",
                  "description": "UTC date-time of the event",
                  "example": "2017-03-12T20:15:13Z"
                }
              }
            }
          },
          "softBounces": {
            "type": "array",
            "items": {
              "required": [
                "campaignId",
                "eventTime"
              ],
              "type": "object",
              "properties": {
                "campaignId": {
                  "type": "integer",
                  "description": "ID of the campaign which generated the event",
                  "format": "int64",
                  "example": 3
                },
                "eventTime": {
                  "type": "string",
                  "description": "UTC date-time of the event",
                  "example": "2017-03-12T20:15:13Z"
                }
              }
            }
          },
          "complaints": {
            "type": "array",
            "items": {
              "required": [
                "campaignId",
                "eventTime"
              ],
              "type": "object",
              "properties": {
                "campaignId": {
                  "type": "integer",
                  "description": "ID of the campaign which generated the event",
                  "format": "int64",
                  "example": 3
                },
                "eventTime": {
                  "type": "string",
                  "description": "UTC date-time of the event",
                  "example": "2017-03-12T20:15:13Z"
                }
              }
            }
          },
          "unsubscriptions": {
            "required": [
              "adminUnsubscription",
              "userUnsubscription"
            ],
            "type": "object",
            "properties": {
              "userUnsubscription": {
                "type": "array",
                "description": "Contact has unsubscribed via the unsubscription link in the email",
                "items": {
                  "required": [
                    "campaignId",
                    "eventTime"
                  ],
                  "type": "object",
                  "properties": {
                    "campaignId": {
                      "type": "integer",
                      "description": "ID of the campaign which generated the event",
                      "format": "int64",
                      "example": 3
                    },
                    "eventTime": {
                      "type": "string",
                      "description": "UTC date-time of the event",
                      "example": "2017-03-12T20:15:13Z"
                    },
                    "ip": {
                      "type": "string",
                      "description": "IP from which the user has unsubscribed",
                      "example": "165.87.3.15"
                    }
                  }
                }
              },
              "adminUnsubscription": {
                "type": "array",
                "description": "Contact has been unsubscribed from the administrator",
                "items": {
                  "required": [
                    "eventTime"
                  ],
                  "type": "object",
                  "properties": {
                    "eventTime": {
                      "type": "string",
                      "description": "UTC date-time of the event",
                      "example": "2017-03-12T20:15:13Z"
                    },
                    "ip": {
                      "type": "string",
                      "description": "IP from which the user has been unsubscribed",
                      "example": "165.87.3.15"
                    }
                  }
                }
              }
            }
          },
          "opened": {
            "type": "array",
            "items": {
              "required": [
                "campaignId",
                "count",
                "eventTime",
                "ip"
              ],
              "type": "object",
              "properties": {
                "campaignId": {
                  "type": "integer",
                  "description": "ID of the campaign which generated the event",
                  "format": "int64",
                  "example": 3
                },
                "count": {
                  "type": "integer",
                  "description": "Number of openings of the campaign",
                  "format": "int64",
                  "example": 3
                },
                "eventTime": {
                  "type": "string",
                  "description": "UTC date-time of the event",
                  "example": "2017-03-12T20:15:13Z"
                },
                "ip": {
                  "type": "string",
                  "description": "IP from which the user has opened the campaign",
                  "example": "165.87.3.15"
                }
              }
            }
          },
          "clicked": {
            "type": "array",
            "items": {
              "required": [
                "campaignId",
                "links"
              ],
              "type": "object",
              "properties": {
                "campaignId": {
                  "type": "integer",
                  "description": "ID of the campaign which generated the event",
                  "format": "int64",
                  "example": 3
                },
                "links": {
                  "type": "array",
                  "items": {
                    "required": [
                      "count",
                      "eventTime",
                      "ip",
                      "url"
                    ],
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "description": "Number of clicks on this link for the campaign",
                        "format": "int64",
                        "example": 1
                      },
                      "eventTime": {
                        "type": "string",
                        "description": "UTC date-time of the event",
                        "example": "2017-03-12T20:15:13Z"
                      },
                      "ip": {
                        "type": "string",
                        "description": "IP from which the user has clicked on the link",
                        "example": "165.87.3.15"
                      },
                      "url": {
                        "type": "string",
                        "description": "URL of the clicked link",
                        "example": "www.myshop.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "transacAttributes": {
            "type": "array",
            "items": {
              "required": [
                "orderDate",
                "orderId",
                "orderPrice"
              ],
              "type": "object",
              "properties": {
                "orderDate": {
                  "type": "string",
                  "description": "Date of the order",
                  "format": "date",
                  "example": "2017-03-12"
                },
                "orderPrice": {
                  "type": "number",
                  "description": "Price of the order",
                  "format": "float",
                  "example": 24.99
                },
                "orderId": {
                  "type": "integer",
                  "description": "ID of the order",
                  "format": "int64",
                  "example": 248
                }
              }
            }
          },
          "delivered": {
            "type": "array",
            "items": {
              "required": [
                "campaignId",
                "eventTime"
              ],
              "type": "object",
              "properties": {
                "campaignId": {
                  "type": "integer",
                  "description": "ID of the campaign which generated the event",
                  "format": "int64",
                  "example": 3
                },
                "eventTime": {
                  "type": "string",
                  "description": "UTC date-time of the event",
                  "example": "2017-03-12T20:15:13Z"
                }
              }
            }
          }
        },
        "description": "Campaign Statistics for the contact"
      },
      "getContacts": {
        "required": [
          "contacts",
          "count"
        ],
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "required": [
                    "attributes",
                    "createdAt",
                    "email",
                    "emailBlacklisted",
                    "id",
                    "listIds",
                    "modifiedAt",
                    "smsBlacklisted"
                  ],
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "Email address of the contact for which you requested the details",
                      "format": "email",
                      "example": "john.smith@example.com"
                    },
                    "id": {
                      "type": "integer",
                      "description": "ID of the contact for which you requested the details",
                      "format": "int64",
                      "example": 32
                    },
                    "emailBlacklisted": {
                      "type": "boolean",
                      "description": "Blacklist status for email campaigns (true=blacklisted, false=not blacklisted)",
                      "example": false
                    },
                    "smsBlacklisted": {
                      "type": "boolean",
                      "description": "Blacklist status for SMS campaigns (true=blacklisted, false=not blacklisted)",
                      "example": true
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Creation UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                      "example": "2017-05-12T12:30:00Z"
                    },
                    "modifiedAt": {
                      "type": "string",
                      "description": "Last modification UTC date-time of the contact (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                      "example": "2017-05-12T12:30:00Z"
                    },
                    "listIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "description": "List(s) in which the contact is included",
                        "format": "int64"
                      }
                    },
                    "listUnsubscribed": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "description": "List(s) in which the contact is included (only available if unsubscription per list is activated for the account)",
                        "format": "int64"
                      }
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {},
                      "description": "Set of attributes of the contact",
                      "example": {
                        "name": "Joe",
                        "email": "joe@example.com"
                      }
                    }
                  }
                }
              ]
            }
          },
          "count": {
            "type": "integer",
            "description": "Number of contacts",
            "format": "int64",
            "example": 17655
          }
        }
      },
      "getAttributes": {
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "description": "Listing of available contact attributes in your account",
            "items": {
              "required": [
                "category",
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the attribute",
                  "example": "LASTNAME"
                },
                "category": {
                  "type": "string",
                  "description": "Category of the attribute",
                  "example": "category",
                  "enum": [
                    "normal",
                    "transactional",
                    "category",
                    "calculated",
                    "global"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Type of the attribute",
                  "example": "text",
                  "enum": [
                    "text",
                    "date",
                    "float",
                    "id",
                    "boolean"
                  ]
                },
                "enumeration": {
                  "type": "array",
                  "description": "Parameter only available for \"category\" type attributes.",
                  "items": {
                    "required": [
                      "label",
                      "value"
                    ],
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "integer",
                        "description": "ID of Value of the \"category\" type attribute",
                        "format": "int64",
                        "example": 1
                      },
                      "label": {
                        "type": "string",
                        "description": "Label of the \"category\" type attribute",
                        "example": "Women"
                      }
                    }
                  }
                },
                "calculatedValue": {
                  "type": "string",
                  "description": "Calculated value formula",
                  "example": "COUNT[ORDER_ID,ORDER_DATE,==,NOW(-1)]"
                }
              }
            }
          }
        }
      },
      "getFolders": {
        "type": "object",
        "properties": {
          "folders": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "required": [
                    "id",
                    "name",
                    "totalBlacklisted",
                    "totalSubscribers",
                    "uniqueSubscribers"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the folder",
                      "format": "int64",
                      "example": 2
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the folder",
                      "example": "Magento Customers"
                    },
                    "totalBlacklisted": {
                      "type": "integer",
                      "description": "Number of blacklisted contacts in the folder",
                      "format": "int64",
                      "example": 32
                    },
                    "totalSubscribers": {
                      "type": "integer",
                      "description": "Number of contacts in the folder",
                      "format": "int64",
                      "example": 19777
                    },
                    "uniqueSubscribers": {
                      "type": "integer",
                      "description": "Number of unique contacts in the folder",
                      "format": "int64",
                      "example": 16222
                    }
                  }
                }
              ]
            }
          },
          "count": {
            "type": "integer",
            "description": "Number of folders available in your account",
            "format": "int64",
            "example": 10
          }
        }
      },
      "getFolder": {
        "required": [
          "id",
          "name",
          "totalBlacklisted",
          "totalSubscribers",
          "uniqueSubscribers"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the folder",
            "format": "int64",
            "example": 2
          },
          "name": {
            "type": "string",
            "description": "Name of the folder",
            "example": "Magento Customers"
          },
          "totalBlacklisted": {
            "type": "integer",
            "description": "Number of blacklisted contacts in the folder",
            "format": "int64",
            "example": 32
          },
          "totalSubscribers": {
            "type": "integer",
            "description": "Number of contacts in the folder",
            "format": "int64",
            "example": 19777
          },
          "uniqueSubscribers": {
            "type": "integer",
            "description": "Number of unique contacts in the folder",
            "format": "int64",
            "example": 16222
          }
        }
      },
      "getFolderLists": {
        "type": "object",
        "properties": {
          "lists": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "required": [
                    "id",
                    "name",
                    "totalBlacklisted",
                    "totalSubscribers",
                    "uniqueSubscribers"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the list",
                      "format": "int64",
                      "example": 23
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the list",
                      "example": "Magento Customers - EN"
                    },
                    "totalBlacklisted": {
                      "type": "integer",
                      "description": "Number of blacklisted contacts in the list",
                      "format": "int64",
                      "example": 13
                    },
                    "totalSubscribers": {
                      "type": "integer",
                      "description": "Number of contacts in the list",
                      "format": "int64",
                      "example": 1776
                    },
                    "uniqueSubscribers": {
                      "type": "integer",
                      "description": "Number of unique contacts in the list",
                      "format": "int64",
                      "example": 1789
                    }
                  }
                }
              ]
            }
          },
          "count": {
            "type": "integer",
            "description": "Number of lists in the folder",
            "format": "int64",
            "example": 6
          }
        }
      },
      "getLists": {
        "type": "object",
        "properties": {
          "lists": {
            "type": "array",
            "description": "Listing of all the lists available in your account",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "required": [
                    "id",
                    "name",
                    "totalBlacklisted",
                    "totalSubscribers",
                    "uniqueSubscribers"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the list",
                      "format": "int64",
                      "example": 23
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the list",
                      "example": "Magento Customers - EN"
                    },
                    "totalBlacklisted": {
                      "type": "integer",
                      "description": "Number of blacklisted contacts in the list",
                      "format": "int64",
                      "example": 13
                    },
                    "totalSubscribers": {
                      "type": "integer",
                      "description": "Number of contacts in the list",
                      "format": "int64",
                      "example": 1776
                    },
                    "uniqueSubscribers": {
                      "type": "integer",
                      "description": "Number of unique contacts in the list",
                      "format": "int64",
                      "example": 1789
                    }
                  }
                },
                {
                  "required": [
                    "folderId"
                  ],
                  "type": "object",
                  "properties": {
                    "folderId": {
                      "type": "integer",
                      "description": "ID of the folder",
                      "format": "int64",
                      "example": 2
                    }
                  }
                }
              ]
            }
          },
          "count": {
            "type": "integer",
            "description": "Number of lists in your account",
            "format": "int64",
            "example": 150
          }
        }
      },
      "getList": {
        "required": [
          "id",
          "name",
          "totalBlacklisted",
          "totalSubscribers",
          "uniqueSubscribers"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the list",
            "format": "int64",
            "example": 23
          },
          "name": {
            "type": "string",
            "description": "Name of the list",
            "example": "Magento Customers - EN"
          },
          "totalBlacklisted": {
            "type": "integer",
            "description": "Number of blacklisted contacts in the list",
            "format": "int64",
            "example": 13
          },
          "totalSubscribers": {
            "type": "integer",
            "description": "Number of contacts in the list",
            "format": "int64",
            "example": 1776
          },
          "uniqueSubscribers": {
            "type": "integer",
            "description": "Number of unique contacts in the list",
            "format": "int64",
            "example": 1789
          }
        }
      },
      "getExtendedList": {
        "allOf": [
          {
            "required": [
              "id",
              "name",
              "totalBlacklisted",
              "totalSubscribers",
              "uniqueSubscribers"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ID of the list",
                "format": "int64",
                "example": 23
              },
              "name": {
                "type": "string",
                "description": "Name of the list",
                "example": "Magento Customers - EN"
              },
              "totalBlacklisted": {
                "type": "integer",
                "description": "Number of blacklisted contacts in the list",
                "format": "int64",
                "example": 13
              },
              "totalSubscribers": {
                "type": "integer",
                "description": "Number of contacts in the list",
                "format": "int64",
                "example": 1776
              },
              "uniqueSubscribers": {
                "type": "integer",
                "description": "Number of unique contacts in the list",
                "format": "int64",
                "example": 1789
              }
            }
          },
          {
            "required": [
              "createdAt",
              "folderId"
            ],
            "type": "object",
            "properties": {
              "folderId": {
                "type": "integer",
                "description": "ID of the folder",
                "format": "int64",
                "example": 2
              },
              "createdAt": {
                "type": "string",
                "description": "Creation UTC date-time of the list (YYYY-MM-DDTHH:mm:ss.SSSZ)",
                "example": "2017-03-13T17:05:09Z"
              },
              "campaignStats": {
                "type": "array",
                "items": {
                  "required": [
                    "campaignId",
                    "stats"
                  ],
                  "type": "object",
                  "properties": {
                    "campaignId": {
                      "type": "integer",
                      "description": "ID of the campaign",
                      "format": "int64",
                      "example": 143
                    },
                    "stats": {
                      "required": [
                        "clickers",
                        "complaints",
                        "delivered",
                        "hardBounces",
                        "sent",
                        "softBounces",
                        "uniqueClicks",
                        "uniqueViews",
                        "unsubscriptions",
                        "viewed",
                        "trackableViews"
                      ],
                      "type": "object",
                      "properties": {
                        "listId": {
                          "type": "integer",
                          "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
                          "format": "int64",
                          "example": 2
                        },
                        "uniqueClicks": {
                          "type": "integer",
                          "description": "Number of unique clicks for the campaign",
                          "format": "int64",
                          "example": 2300
                        },
                        "clickers": {
                          "type": "integer",
                          "description": "Number of total clicks for the campaign",
                          "format": "int64",
                          "example": 2665
                        },
                        "complaints": {
                          "type": "integer",
                          "description": "Number of complaints (Spam reports) for the campaign",
                          "format": "int64",
                          "example": 1
                        },
                        "delivered": {
                          "type": "integer",
                          "description": "Number of delivered emails for the campaign",
                          "format": "int64",
                          "example": 19765
                        },
                        "sent": {
                          "type": "integer",
                          "description": "Number of sent emails for the campaign",
                          "format": "int64",
                          "example": 19887
                        },
                        "softBounces": {
                          "type": "integer",
                          "description": "Number of softbounce for the campaign",
                          "format": "int64",
                          "example": 100
                        },
                        "hardBounces": {
                          "type": "integer",
                          "description": "Number of harbounce for the campaign",
                          "format": "int64",
                          "example": 87
                        },
                        "uniqueViews": {
                          "type": "integer",
                          "description": "Number of unique openings for the campaign",
                          "format": "int64",
                          "example": 7779
                        },
                        "trackableViews": {
                          "type": "integer",
                          "description": "Recipients without any privacy protection option enabled in their email client",
                          "format": "int64",
                          "example": 5661
                        },
                        "unsubscriptions": {
                          "type": "integer",
                          "description": "Number of unsubscription for the campaign",
                          "format": "int64",
                          "example": 2
                        },
                        "viewed": {
                          "type": "integer",
                          "description": "Number of openings for the campaign",
                          "format": "int64",
                          "example": 8999
                        },
                        "deferred": {
                          "type": "integer",
                          "description": "Number of deferred emails for the campaign",
                          "format": "int64",
                          "example": 30
                        },
                        "returnBounce": {
                          "type": "integer",
                          "description": "Total number of non-delivered campaigns for a particular campaign id.",
                          "format": "int64",
                          "example": 5
                        }
                      }
                    }
                  }
                }
              },
              "dynamicList": {
                "type": "boolean",
                "description": "Status telling if the list is dynamic or not (true=dynamic, false=not dynamic)",
                "example": false
              }
            }
          }
        ]
      },
      "getSmsCampaignStats": {
        "required": [
          "answered",
          "delivered",
          "hardBounces",
          "processing",
          "sent",
          "softBounces",
          "unsubscriptions"
        ],
        "type": "object",
        "properties": {
          "delivered": {
            "type": "integer",
            "description": "Number of delivered SMS",
            "format": "int64",
            "example": 2987
          },
          "sent": {
            "type": "integer",
            "description": "Number of sent SMS",
            "format": "int64",
            "example": 3000
          },
          "processing": {
            "type": "integer",
            "description": "Number of processing SMS",
            "format": "int64",
            "example": 0
          },
          "softBounces": {
            "type": "integer",
            "description": "Number of softbounced SMS",
            "format": "int64",
            "example": 3
          },
          "hardBounces": {
            "type": "integer",
            "description": "Number of hardbounced SMS",
            "format": "int64",
            "example": 1
          },
          "unsubscriptions": {
            "type": "integer",
            "description": "Number of unsubscription SMS",
            "format": "int64",
            "example": 3
          },
          "answered": {
            "type": "integer",
            "description": "Number of replies to the SMS",
            "format": "int64",
            "example": 2
          }
        }
      },
      "getDeviceBrowserStats": {
        "required": [
          "clickers",
          "uniqueClicks",
          "uniqueViews",
          "viewed"
        ],
        "type": "object",
        "properties": {
          "clickers": {
            "type": "integer",
            "description": "Number of total clicks for the campaign using the particular browser",
            "format": "int64",
            "example": 2665
          },
          "uniqueClicks": {
            "type": "integer",
            "description": "Number of unique clicks for the campaign using the particular browser",
            "format": "int64",
            "example": 2300
          },
          "viewed": {
            "type": "integer",
            "description": "Number of openings for the campaign using the particular browser",
            "format": "int64",
            "example": 8999
          },
          "uniqueViews": {
            "type": "integer",
            "description": "Number of unique openings for the campaign using the particular browser",
            "format": "int64",
            "example": 7779
          }
        }
      },
      "getCampaignStats": {
        "required": [
          "clickers",
          "complaints",
          "delivered",
          "hardBounces",
          "sent",
          "softBounces",
          "uniqueClicks",
          "uniqueViews",
          "unsubscriptions",
          "viewed",
          "trackableViews"
        ],
        "type": "object",
        "properties": {
          "listId": {
            "type": "integer",
            "description": "List Id of email campaign (only in case of get email campaign(s)(not for global stats))",
            "format": "int64",
            "example": 2
          },
          "uniqueClicks": {
            "type": "integer",
            "description": "Number of unique clicks for the campaign",
            "format": "int64",
            "example": 2300
          },
          "clickers": {
            "type": "integer",
            "description": "Number of total clicks for the campaign",
            "format": "int64",
            "example": 2665
          },
          "complaints": {
            "type": "integer",
            "description": "Number of complaints (Spam reports) for the campaign",
            "format": "int64",
            "example": 1
          },
          "delivered": {
            "type": "integer",
            "description": "Number of delivered emails for the campaign",
            "format": "int64",
            "example": 19765
          },
          "sent": {
            "type": "integer",
            "description": "Number of sent emails for the campaign",
            "format": "int64",
            "example": 19887
          },
          "softBounces": {
            "type": "integer",
            "description": "Number of softbounce for the campaign",
            "format": "int64",
            "example": 100
          },
          "hardBounces": {
            "type": "integer",
            "description": "Number of harbounce for the campaign",
            "format": "int64",
            "example": 87
          },
          "uniqueViews": {
            "type": "integer",
            "description": "Number of unique openings for the campaign",
            "format": "int64",
            "example": 7779
          },
          "trackableViews": {
            "type": "integer",
            "description": "Recipients without any privacy protection option enabled in their email client",
            "format": "int64",
            "example": 5661
          },
          "unsubscriptions": {
            "type": "integer",
            "description": "Number of unsubscription for the campaign",
            "format": "int64",
            "example": 2
          },
          "viewed": {
            "type": "integer",
            "description": "Number of openings for the campaign",
            "format": "int64",
            "example": 8999
          },
          "deferred": {
            "type": "integer",
            "description": "Number of deferred emails for the campaign",
            "format": "int64",
            "example": 30
          },
          "returnBounce": {
            "type": "integer",
            "description": "Total number of non-delivered campaigns for a particular campaign id.",
            "format": "int64",
            "example": 5
          }
        }
      },
      "updateSmtpTemplate": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "description": "Tag of the template",
            "example": "OrderConfirmation"
          },
          "sender": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the sender",
                "example": "Mary from MyShop"
              },
              "email": {
                "type": "string",
                "description": "Email of the sender",
                "format": "email",
                "example": "contact@myshop.com"
              },
              "id": {
                "type": "integer",
                "description": "Select the sender for the template on the basis of sender id.\n_In order to select a sender with specific pool of IP’s, dedicated ip users shall pass id (instead of email)_.\n",
                "format": "int64",
                "example": 3
              }
            },
            "description": "Sender details including id or email and name (_optional_). Only one of either Sender's email or Sender's ID shall be passed in one request at a time. For example:\n**{\"name\":\"xyz\", \"email\":\"example@abc.com\"}**\n**{\"name\":\"xyz\", \"id\":123}**\n"
          },
          "templateName": {
            "type": "string",
            "description": "Name of the template",
            "example": "Order Confirmation - EN"
          },
          "htmlContent": {
            "type": "string",
            "description": "**Required if htmlUrl is empty**. Body of the message (HTML must have more than 10 characters)\n",
            "example": "The order n°xxxxx has been confirmed. Thanks for your purchase"
          },
          "htmlUrl": {
            "type": "string",
            "description": "**Required if htmlContent is empty**. URL to the body of the email (HTML)\n",
            "format": "url",
            "example": "https://html.domain.com"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the email",
            "example": "Thanks for your purchase !"
          },
          "replyTo": {
            "type": "string",
            "description": "Email on which campaign recipients will be able to reply to",
            "format": "email",
            "example": "support@myshop.com"
          },
          "toField": {
            "type": "string",
            "description": "To personalize the **To** Field. If you want to include the first name and last name of your recipient, add **{FNAME} {LNAME}**. These contact attributes must already exist in your SendinBlue account. If input parameter **params** used please use **{{contact.FNAME}} {{contact.LNAME}}** for personalization\n",
            "example": "{FNAME} {LNAME}"
          },
          "attachmentUrl": {
            "type": "string",
            "description": "Absolute url of the attachment (**no local file**). Extensions allowed: \n#### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub and eps\n",
            "format": "url",
            "example": "https://attachment.domain.com"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status of the template. isActive = false means template is inactive, isActive = true means template is active",
            "example": true
          }
        }
      },
      "updateCampaignStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Note:- **replicateTemplate** status will be available **only for template type campaigns.**\n",
            "enum": [
              "suspended",
              "archive",
              "darchive",
              "sent",
              "queued",
              "replicate",
              "replicateTemplate",
              "draft"
            ]
          }
        },
        "description": "Status of the campaign",
        "example": "draft"
      },
      "createSmtpTemplate": {
        "required": [
          "sender",
          "subject",
          "templateName"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "description": "Tag of the template",
            "example": "OrderConfirmation"
          },
          "sender": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the sender. **If not passed, will be set to default**\n",
                "example": "Mary from MyShop"
              },
              "email": {
                "type": "string",
                "description": "Email of the sender",
                "format": "email",
                "example": "contact@myshop.com"
              },
              "id": {
                "type": "integer",
                "description": "Select the sender for the template on the basis of sender id.\n_In order to select a sender with specific pool of IP’s, dedicated ip users shall pass id (instead of email)_.\n",
                "format": "int64",
                "example": 3
              }
            },
            "description": "Sender details including id or email and name (_optional_). Only one of either Sender's email or Sender's ID shall be passed in one request at a time. For example:\n**{\"name\":\"xyz\", \"email\":\"example@abc.com\"}**\n**{\"name\":\"xyz\", \"id\":123}**\n"
          },
          "templateName": {
            "type": "string",
            "description": "Name of the template",
            "example": "Order Confirmation - EN"
          },
          "htmlContent": {
            "type": "string",
            "description": "Body of the message (HTML version). The field must have more than 10 characters. **REQUIRED if htmlUrl is empty**\n",
            "example": "The order n°xxxxx has been confirmed. Thanks for your purchase"
          },
          "htmlUrl": {
            "type": "string",
            "description": "Url which contents the body of the email message. REQUIRED if htmlContent is empty",
            "format": "url",
            "example": "https://html.domain.com"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the template",
            "example": "Thanks for your purchase !"
          },
          "replyTo": {
            "type": "string",
            "description": "Email on which campaign recipients will be able to reply to",
            "format": "email",
            "example": "support@myshop.com"
          },
          "toField": {
            "type": "string",
            "description": "To personalize the **To** Field. If you want to include the first name and last name of your recipient, add **{FNAME} {LNAME}**. These contact attributes must already exist in your SendinBlue account. If input parameter **params** used please use **{{contact.FNAME}} {{contact.LNAME}}** for personalization\n",
            "example": "{FNAME} {LNAME}"
          },
          "attachmentUrl": {
            "type": "string",
            "description": "Absolute url of the attachment (**no local file**). Extension allowed:\n#### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub and eps'\n",
            "format": "url",
            "example": "https://attachment.domain.com"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status of template. isActive = true means template is active and isActive = false means template is inactive",
            "example": true
          }
        }
      },
      "createEmailCampaign": {
        "required": [
          "name",
          "sender"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "description": "Tag of the campaign",
            "example": "Newsletter"
          },
          "sender": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Sender Name",
                "example": "Mary from MyShop"
              },
              "email": {
                "type": "string",
                "description": "Sender email",
                "format": "email",
                "example": "newsletter@myshop.com"
              },
              "id": {
                "type": "integer",
                "description": "Select the sender for the campaign on the basis of sender id.\n_In order to select a sender with specific pool of IP’s, dedicated ip users shall pass id (instead of email)_.\n",
                "format": "int64",
                "example": 3
              }
            },
            "description": "Sender details including id or email and name (_optional_). Only one of either Sender's email or Sender's ID shall be passed in one request at a time. For example:\n**{\"name\":\"xyz\", \"email\":\"example@abc.com\"}**\n**{\"name\":\"xyz\", \"id\":123}**\n"
          },
          "name": {
            "type": "string",
            "description": "Name of the campaign",
            "example": "Newsletter - May 2017"
          },
          "htmlContent": {
            "type": "string",
            "description": "Mandatory if htmlUrl and templateId are empty. Body of the message (HTML).\n",
            "example": "<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>"
          },
          "htmlUrl": {
            "type": "string",
            "description": "**Mandatory if htmlContent and templateId are empty**. Url to the message (HTML). For example:\n**https://html.domain.com**\n",
            "format": "url",
            "example": "https://html.domain.com"
          },
          "templateId": {
            "type": "integer",
            "description": "**Mandatory if htmlContent and htmlUrl are empty**. Id of the transactional\nemail template with status _active_. Used to copy only its content fetched\nfrom htmlContent/htmlUrl to an email campaign for RSS feature.\n",
            "format": "int64"
          },
          "scheduledAt": {
            "type": "string",
            "description": "Sending UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result**.\nIf sendAtBestTime is set to true, your campaign will be sent according to the date passed (ignoring the time part). For example:\n**2017-06-01T12:30:00+02:00**\n",
            "example": "2017-06-01T12:30:00+02:00"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the campaign. **Mandatory if abTesting is false**.\nIgnored if abTesting is true.\n",
            "example": "Discover the New Collection !"
          },
          "replyTo": {
            "type": "string",
            "description": "Email on which the campaign recipients will be able to reply to",
            "format": "email",
            "example": "support@myshop.com"
          },
          "toField": {
            "type": "string",
            "description": "To personalize the **To** Field. If you want to include the first name and last name of your recipient, add **{FNAME} {LNAME}**. These contact attributes must already exist in your SendinBlue account. If input parameter **params** used please use **{{contact.FNAME}} {{contact.LNAME}}** for personalization\n",
            "example": "{FNAME} {LNAME}"
          },
          "recipients": {
            "type": "object",
            "properties": {
              "exclusionListIds": {
                "type": "array",
                "description": "List ids to exclude from the campaign",
                "items": {
                  "type": "integer",
                  "format": "int64",
                  "example": 8
                }
              },
              "listIds": {
                "type": "array",
                "description": "**Mandatory if scheduledAt is not empty**. List Ids to send the campaign to\n",
                "items": {
                  "type": "integer",
                  "format": "int64",
                  "example": 32
                }
              }
            },
            "description": "List ids to include/exclude from campaign"
          },
          "attachmentUrl": {
            "type": "string",
            "description": "Absolute url of the attachment (no local file).\nExtension allowed: \n#### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub and eps\n",
            "format": "url",
            "example": "https://attachment.domain.com"
          },
          "inlineImageActivation": {
            "type": "boolean",
            "description": "Use true to embedded the images in your email. Final size of\nthe email should be less than **4MB**. Campaigns with embedded images can\n_not be sent to more than 5000 contacts_\n",
            "example": true,
            "default": false
          },
          "mirrorActive": {
            "type": "boolean",
            "description": "Use true to enable the mirror link",
            "example": true
          },
          "footer": {
            "type": "string",
            "description": "Footer of the email campaign",
            "example": "[DEFAULT_FOOTER]"
          },
          "header": {
            "type": "string",
            "description": "Header of the email campaign",
            "example": "[DEFAULT_HEADER]"
          },
          "utmCampaign": {
            "type": "string",
            "description": "Customize the utm_campaign value. If this field is empty, the campaign name will be used. Only alphanumeric characters and spaces are allowed",
            "example": "NL_05_2017"
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "description": "Pass the set of attributes to customize the type classic campaign. For example: **{\"FNAME\":\"Joe\", \"LNAME\":\"Doe\"}**. Only available if **type** is **classic**. It's considered only if campaign is in _New Template Language format_. The New Template Language is dependent on the values of **subject, htmlContent/htmlUrl, sender.name & toField**\n",
            "example": {
              "FNAME": "Joe",
              "LNAME": "Doe"
            }
          },
          "sendAtBestTime": {
            "type": "boolean",
            "description": "Set this to true if you want to send your campaign at best time.",
            "example": true,
            "default": false
          },
          "abTesting": {
            "type": "boolean",
            "description": "Status of A/B Test. abTesting = false means it is disabled & abTesting = true means it is enabled. **subjectA, subjectB, splitRule, winnerCriteria & winnerDelay** will be considered when abTesting is set to true.\nsubjectA & subjectB are mandatory together & subject if passed is ignored. **Can be set to true only if sendAtBestTime is false**.\nYou will be able to set up two subject lines for your campaign and send them to a random sample of your total recipients. Half of the test group will receive version A, and the other half will receive version B\n",
            "example": true,
            "default": false
          },
          "subjectA": {
            "type": "string",
            "description": "Subject A of the campaign. **Mandatory if abTesting = true**.\nsubjectA & subjectB should have unique value\n",
            "example": "Discover the New Collection!"
          },
          "subjectB": {
            "type": "string",
            "description": "Subject B of the campaign. **Mandatory if abTesting = true**.\nsubjectA & subjectB should have unique value\n",
            "example": "Want to discover the New Collection?"
          },
          "splitRule": {
            "maximum": 50,
            "minimum": 1,
            "type": "integer",
            "description": "Add the size of your test groups. **Mandatory if abTesting = true & 'recipients' is passed**. We'll send version A and B to a random sample of recipients, and then the winning version to everyone else\n",
            "format": "int64",
            "example": 50
          },
          "winnerCriteria": {
            "type": "string",
            "description": "Choose the metrics that will determinate the winning version. **Mandatory if _splitRule_ >= 1 and < 50**. If splitRule = 50, `winnerCriteria` is ignored if passed\n",
            "example": "open",
            "enum": [
              "open",
              "click"
            ]
          },
          "winnerDelay": {
            "maximum": 168,
            "minimum": 1,
            "type": "integer",
            "description": "Choose the duration of the test in hours. Maximum is 7 days, pass 24*7 = 168 hours. The winning version will be sent at the end of the test. **Mandatory if _splitRule_ >= 1 and < 50**. If splitRule = 50, `winnerDelay` is ignored if passed\n",
            "format": "int64",
            "example": 50
          },
          "ipWarmupEnable": {
            "type": "boolean",
            "description": "**Available for dedicated ip clients**. Set this to true if you wish to warm up your ip.\n",
            "example": true,
            "default": false
          },
          "initialQuota": {
            "type": "integer",
            "description": "**Mandatory if ipWarmupEnable is set to true**. Set an initial quota greater than 1 for warming up your ip. We recommend you set a value of 3000.\n",
            "format": "int64",
            "example": 3000
          },
          "increaseRate": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "**Mandatory if ipWarmupEnable is set to true**. Set a percentage increase rate for warming up your ip. We recommend you set the increase rate to 30% per day. If you want to send the same number of emails every day, set the daily increase value to 0%.\n",
            "format": "int64",
            "example": 70
          }
        }
      },
      "updateEmailCampaign": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "description": "Tag of the campaign",
            "example": "Newsletter"
          },
          "sender": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Sender Name from which the campaign emails are sent",
                "example": "Mary from MyShop"
              },
              "email": {
                "type": "string",
                "description": "Sender email from which the campaign emails are sent",
                "format": "email",
                "example": "newsletter@myshop.com"
              },
              "id": {
                "type": "integer",
                "description": "Select the sender for the campaign on the basis of sender id. **In order to select a sender with specific pool of IP’s, dedicated ip users shall pass id (instead of email)**.\n",
                "format": "int64",
                "example": 3
              }
            },
            "description": "Sender details including id or email and name (optional). Only one of either Sender's email or Sender's ID shall be passed in one request at a time. For example:\n**{\"name\":\"xyz\", \"email\":\"example@abc.com\"}**\n**{\"name\":\"xyz\", \"id\":123}**\n"
          },
          "name": {
            "type": "string",
            "description": "Name of the campaign",
            "example": "Newsletter - May 2017"
          },
          "htmlContent": {
            "type": "string",
            "description": "Body of the message (HTML version). **REQUIRED if htmlUrl is empty**\n",
            "example": "<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>"
          },
          "htmlUrl": {
            "type": "string",
            "description": "Url which contents the body of the email message. **REQUIRED if htmlContent is empty**\n",
            "format": "url",
            "example": "https://html.domain.com"
          },
          "scheduledAt": {
            "type": "string",
            "description": "UTC date-time on which the campaign has to run (YYYY-MM-DDTHH:mm:ss.SSSZ).\n**Prefer to pass your timezone in date-time format for accurate result.**\nIf sendAtBestTime is set to true, your campaign will be sent according\nto the date passed (ignoring the time part).\n",
            "example": "2017-06-01T12:30:00+02:00"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the campaign",
            "example": "Discover the New Collection !"
          },
          "replyTo": {
            "type": "string",
            "description": "Email on which campaign recipients will be able to reply to",
            "format": "email",
            "example": "support@myshop.com"
          },
          "toField": {
            "type": "string",
            "description": "To personalize the **To** Field. If you want to include the first\nname and last name of your recipient, add **{FNAME} {LNAME}**. These contact\nattributes must already exist in your SendinBlue account. If input parameter\n**params** used please use **{{contact.FNAME}} {{contact.LNAME}}** for personalization\n",
            "example": "{FNAME} {LNAME}"
          },
          "recipients": {
            "type": "object",
            "properties": {
              "exclusionListIds": {
                "type": "array",
                "description": "List ids which have to be excluded from a campaign",
                "items": {
                  "type": "integer",
                  "format": "int64",
                  "example": 8
                }
              },
              "listIds": {
                "type": "array",
                "description": "Lists Ids to send the campaign to. **REQUIRED if already not present in campaign and scheduledAt is not empty**\n",
                "items": {
                  "type": "integer",
                  "format": "int64",
                  "example": 32
                }
              }
            },
            "description": "List ids to include/exclude from campaign"
          },
          "attachmentUrl": {
            "type": "string",
            "description": "Absolute url of the attachment (no local file).\nExtension allowed:\n#### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub and eps'\n",
            "format": "url",
            "example": "https://attachment.domain.com"
          },
          "inlineImageActivation": {
            "type": "boolean",
            "description": "Status of inline image. inlineImageActivation = false means image can’t be embedded, & inlineImageActivation = true means image can be embedded, in the email.\nYou cannot send a campaign of more than **4MB** with images embedded in the email. Campaigns with the images embedded in the email _must be sent to less than 5000 contacts_.\n",
            "example": true,
            "default": false
          },
          "mirrorActive": {
            "type": "boolean",
            "description": "Status of mirror links in campaign. mirrorActive = false means mirror links are deactivated, & mirrorActive = true means mirror links are activated, in the campaign",
            "example": true
          },
          "recurring": {
            "type": "boolean",
            "description": "**FOR TRIGGER ONLY !** Type of trigger campaign.recurring = false means contact can receive the same Trigger campaign only once, & recurring = true means contact can receive the same Trigger campaign several times\n",
            "example": false,
            "default": false
          },
          "footer": {
            "type": "string",
            "description": "Footer of the email campaign",
            "example": "[DEFAULT_FOOTER]"
          },
          "header": {
            "type": "string",
            "description": "Header of the email campaign",
            "example": "[DEFAULT_HEADER]"
          },
          "utmCampaign": {
            "type": "string",
            "description": "Customize the utm_campaign value. If this field is empty, the campaign name will be used. Only alphanumeric characters and spaces are allowed",
            "example": "NL_05_2017"
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "description": "Pass the set of attributes to customize the type classic campaign. For example: **{\"FNAME\":\"Joe\", \"LNAME\":\"Doe\"}**. Only available if **type** is **classic**. It's considered only if campaign is in _New Template Language format_. The New Template Language is dependent on the values of **subject, htmlContent/htmlUrl, sender.name & toField**\n",
            "example": {
              "FNAME": "Joe",
              "LNAME": "Doe"
            }
          },
          "sendAtBestTime": {
            "type": "boolean",
            "description": "Set this to true if you want to send your campaign at best time.\nNote:- **if true, warmup ip will be disabled.**\n",
            "example": true
          },
          "abTesting": {
            "type": "boolean",
            "description": "Status of A/B Test. abTesting = false means it is disabled & abTesting = true means it is enabled. **subjectA, subjectB, splitRule, winnerCriteria & winnerDelay** will be considered when abTesting is set to true.\nsubjectA & subjectB are mandatory together & subject if passed is ignored. **Can be set to true only if sendAtBestTime is false**.\nYou will be able to set up two subject lines for your campaign and send them to a random sample of your total recipients. Half of the test group will receive version A, and the other half will receive version B\n",
            "example": true,
            "default": false
          },
          "subjectA": {
            "type": "string",
            "description": "Subject A of the campaign. **Mandatory if abTesting = true**.\nsubjectA & subjectB should have unique value\n",
            "example": "Discover the New Collection!"
          },
          "subjectB": {
            "type": "string",
            "description": "Subject B of the campaign. **Mandatory if abTesting = true**.\nsubjectA & subjectB should have unique value\n",
            "example": "Want to discover the New Collection?"
          },
          "splitRule": {
            "maximum": 50,
            "minimum": 1,
            "type": "integer",
            "description": "Add the size of your test groups. **Mandatory if abTesting = true & 'recipients' is passed**. We'll send version A and B to a random sample of recipients, and then the winning version to everyone else\n",
            "format": "int64",
            "example": 50
          },
          "winnerCriteria": {
            "type": "string",
            "description": "Choose the metrics that will determinate the winning version. **Mandatory if _splitRule_ >= 1 and < 50**. If splitRule = 50, `winnerCriteria` is ignored if passed\n",
            "example": "open",
            "enum": [
              "open",
              "click"
            ]
          },
          "winnerDelay": {
            "maximum": 168,
            "minimum": 1,
            "type": "integer",
            "description": "Choose the duration of the test in hours. Maximum is 7 days, pass 24*7 = 168 hours. The winning version will be sent at the end of the test. **Mandatory if _splitRule_ >= 1 and < 50**. If splitRule = 50, `winnerDelay` is ignored if passed\n",
            "format": "int64",
            "example": 50
          },
          "ipWarmupEnable": {
            "type": "boolean",
            "description": "**Available for dedicated ip clients**. Set this to true if you wish to warm up your ip.\n",
            "example": true,
            "default": false
          },
          "initialQuota": {
            "type": "integer",
            "description": "Set an initial quota greater than 1 for warming up your ip. We recommend you set a value of 3000.\n",
            "format": "int64",
            "example": 3000
          },
          "increaseRate": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "Set a percentage increase rate for warming up your ip. We recommend you set the increase rate to 30% per day. If you want to send the same number of emails every day, set the daily increase value to 0%.\n",
            "format": "int64",
            "example": 70
          }
        }
      },
      "getSharedTemplateUrl": {
        "required": [
          "sharedUrl"
        ],
        "type": "object",
        "properties": {
          "sharedUrl": {
            "type": "string",
            "description": "A unique URL for the email campaign or transactional template. This URL can be shared with other Sendinblue users.",
            "format": "url",
            "example": "https://my.sendinblue.com/pt2YU7R5W_guXlowgumy_VX4pFsKu._zd0Gjj96x1_GMmzc1Qps5ZIpj6nx-"
          }
        }
      },
      "abTestCampaignResult": {
        "type": "object",
        "properties": {
          "winningVersion": {
            "type": "string",
            "description": "Winning Campaign Info. pending = Campaign has been picked for sending and winning version is yet to be decided, tie = A tie happened between both the versions, notAvailable = Campaign has not yet been picked for sending.",
            "example": "A",
            "enum": [
              "notAvailable",
              "pending",
              "tie",
              "A",
              "B"
            ]
          },
          "winningCriteria": {
            "type": "string",
            "description": "Criteria choosen for winning version (Open/Click)",
            "example": "Open",
            "enum": [
              "Open",
              "Click"
            ]
          },
          "winningSubjectLine": {
            "type": "string",
            "description": "Subject Line of current winning version",
            "example": "Subject Line A"
          },
          "openRate": {
            "type": "string",
            "description": "Open rate for current winning version",
            "example": "70%"
          },
          "clickRate": {
            "type": "string",
            "description": "Click rate for current winning version",
            "example": "70%"
          },
          "winningVersionRate": {
            "type": "string",
            "description": "Open/Click rate for the winner version",
            "example": "70%"
          },
          "statistics": {
            "required": [
              "clicks",
              "complaints",
              "hardBounces",
              "openers",
              "softBounces",
              "unsubscribed"
            ],
            "type": "object",
            "properties": {
              "openers": {
                "required": [
                  "Version A",
                  "Version B"
                ],
                "type": "object",
                "properties": {
                  "Version A": {
                    "type": "string",
                    "description": "percentage of an event for version A",
                    "example": "50%"
                  },
                  "Version B": {
                    "type": "string",
                    "description": "percentage of an event for version B",
                    "example": "50%"
                  }
                },
                "description": "Percentage of a particular event for both versions"
              },
              "clicks": {
                "required": [
                  "Version A",
                  "Version B"
                ],
                "type": "object",
                "properties": {
                  "Version A": {
                    "type": "string",
                    "description": "percentage of an event for version A",
                    "example": "50%"
                  },
                  "Version B": {
                    "type": "string",
                    "description": "percentage of an event for version B",
                    "example": "50%"
                  }
                },
                "description": "Percentage of a particular event for both versions"
              },
              "unsubscribed": {
                "required": [
                  "Version A",
                  "Version B"
                ],
                "type": "object",
                "properties": {
                  "Version A": {
                    "type": "string",
                    "description": "percentage of an event for version A",
                    "example": "50%"
                  },
                  "Version B": {
                    "type": "string",
                    "description": "percentage of an event for version B",
                    "example": "50%"
                  }
                },
                "description": "Percentage of a particular event for both versions"
              },
              "hardBounces": {
                "required": [
                  "Version A",
                  "Version B"
                ],
                "type": "object",
                "properties": {
                  "Version A": {
                    "type": "string",
                    "description": "percentage of an event for version A",
                    "example": "50%"
                  },
                  "Version B": {
                    "type": "string",
                    "description": "percentage of an event for version B",
                    "example": "50%"
                  }
                },
                "description": "Percentage of a particular event for both versions"
              },
              "softBounces": {
                "required": [
                  "Version A",
                  "Version B"
                ],
                "type": "object",
                "properties": {
                  "Version A": {
                    "type": "string",
                    "description": "percentage of an event for version A",
                    "example": "50%"
                  },
                  "Version B": {
                    "type": "string",
                    "description": "percentage of an event for version B",
                    "example": "50%"
                  }
                },
                "description": "Percentage of a particular event for both versions"
              },
              "complaints": {
                "required": [
                  "Version A",
                  "Version B"
                ],
                "type": "object",
                "properties": {
                  "Version A": {
                    "type": "string",
                    "description": "percentage of an event for version A",
                    "example": "50%"
                  },
                  "Version B": {
                    "type": "string",
                    "description": "percentage of an event for version B",
                    "example": "50%"
                  }
                },
                "description": "Percentage of a particular event for both versions"
              }
            }
          },
          "clickedLinks": {
            "required": [
              "Version A",
              "Version B"
            ],
            "type": "object",
            "properties": {
              "Version A": {
                "type": "array",
                "description": "Information on clicked links for a particular version",
                "items": {
                  "required": [
                    "clickRate",
                    "clicksCount",
                    "link"
                  ],
                  "type": "object",
                  "properties": {
                    "link": {
                      "type": "string",
                      "description": "URL of the link",
                      "example": "https://facbook.com/versionA"
                    },
                    "clicksCount": {
                      "type": "number",
                      "description": "Number of times a link is clicked",
                      "format": "int64",
                      "example": 3
                    },
                    "clickRate": {
                      "type": "string",
                      "description": "Percentage of clicks of link with respect to total clicks",
                      "example": "40%"
                    }
                  }
                }
              },
              "Version B": {
                "type": "array",
                "description": "Information on clicked links for a particular version",
                "items": {
                  "required": [
                    "clickRate",
                    "clicksCount",
                    "link"
                  ],
                  "type": "object",
                  "properties": {
                    "link": {
                      "type": "string",
                      "description": "URL of the link",
                      "example": "https://facbook.com/versionA"
                    },
                    "clicksCount": {
                      "type": "number",
                      "description": "Number of times a link is clicked",
                      "format": "int64",
                      "example": 3
                    },
                    "clickRate": {
                      "type": "string",
                      "description": "Percentage of clicks of link with respect to total clicks",
                      "example": "40%"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "emailExportRecipients": {
        "required": [
          "recipientsType"
        ],
        "type": "object",
        "properties": {
          "notifyURL": {
            "type": "string",
            "description": "Webhook called once the export process is finished. For reference, https://help.sendinblue.com/hc/en-us/articles/360007666479",
            "format": "url",
            "example": "http://requestb.in/173lyyx1"
          },
          "recipientsType": {
            "type": "string",
            "description": "Type of recipients to export for a campaign",
            "example": "openers",
            "enum": [
              "all",
              "nonClickers",
              "nonOpeners",
              "clickers",
              "openers",
              "softBounces",
              "hardBounces",
              "unsubscribed"
            ]
          }
        }
      },
      "requestSmsRecipientExport": {
        "required": [
          "recipientsType"
        ],
        "type": "object",
        "properties": {
          "notifyURL": {
            "type": "string",
            "description": "URL that will be called once the export process is finished. For reference, https://help.sendinblue.com/hc/en-us/articles/360007666479",
            "format": "url",
            "example": "http://requestb.in/173lyyx1"
          },
          "recipientsType": {
            "type": "string",
            "description": "Filter the recipients based on how they interacted with the campaign",
            "example": "answered",
            "enum": [
              "all",
              "delivered",
              "answered",
              "softBounces",
              "hardBounces",
              "unsubscribed"
            ]
          }
        }
      },
      "sendReport": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Language of email content for campaign report sending.",
            "example": "en",
            "default": "fr",
            "enum": [
              "fr",
              "es",
              "pt",
              "it",
              "de",
              "en"
            ]
          },
          "email": {
            "required": [
              "body",
              "to"
            ],
            "type": "object",
            "properties": {
              "to": {
                "type": "array",
                "description": "Email addresses of the recipients",
                "items": {
                  "type": "string",
                  "description": "Email address of the recipient",
                  "format": "email",
                  "example": "jim.suehan@example.com"
                }
              },
              "body": {
                "type": "string",
                "description": "Custom text message to be presented in the report email.",
                "example": "Please find attached the report of our last email campaign."
              }
            },
            "description": "Custom attributes for the report email."
          }
        }
      },
      "uploadImageToGallery": {
        "required": [
          "imageUrl"
        ],
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string",
            "description": "The absolute url of the image (**no local file**). Maximum allowed size for image is **2MB**.\nAllowed extensions for images are:\n#### jpeg, jpg, png, bmp, gif.\n",
            "example": "https://somedomain.com/image1.jpg"
          },
          "name": {
            "type": "string",
            "description": "Name of the image.",
            "example": "nature.jpg"
          }
        }
      },
      "sendSmtpEmail": {
        "type": "object",
        "properties": {
          "sender": {
            "description": "**Mandatory if `templateId` is not passed**. Pass name (_optional_) and email or id of sender from which emails will be sent. **`name` will be ignored if passed along with sender `id`**. For example,\n**{\"name\":\"Mary from MyShop\", \"email\":\"no-reply@myshop.com\"}**\n**{\"id\":2}**\n",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "description: Name of the sender from which the emails will be sent. **Maximum allowed characters are 70**. Applicable only when email is passed.\n",
                "example": "Mary from MyShop"
              },
              "email": {
                "type": "string",
                "description": "Email of the sender from which the emails will be sent. Mandatory if sender id is not passed.",
                "format": "email",
                "example": "no-reply@myshop.com"
              },
              "id": {
                "type": "integer",
                "description": "Id of the sender from which the emails will be sent. In order to select a sender with specific pool of IP’s, dedicated ip users shall pass id (instead of email). Mandatory if email is not passed.",
                "format": "int64",
                "example": 2
              }
            }
          },
          "to": {
            "type": "array",
            "description": "**Mandatory if messageVersions are not passed, ignored if messageVersions are passed**\nList of email addresses and names (_optional_) of the recipients. For example,\n**[{\"name\":\"Jimmy\", \"email\":\"jimmy98@example.com\"}, {\"name\":\"Joe\", \"email\":\"joe@example.com\"}]**\n",
            "items": {
              "required": [
                "email"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address of the recipient",
                  "format": "email",
                  "example": "jimmy98@example.com"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the recipient. **Maximum allowed characters are 70**.\n",
                  "example": "Jimmy"
                }
              }
            }
          },
          "bcc": {
            "type": "array",
            "description": "List of email addresses and names (_optional_) of the recipients in bcc\n",
            "items": {
              "required": [
                "email"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address of the recipient in bcc",
                  "format": "email",
                  "example": "helen9766@example.com"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the recipient in bcc. **Maximum allowed characters are 70**.\n",
                  "example": "Helen"
                }
              }
            }
          },
          "cc": {
            "type": "array",
            "description": "List of email addresses and names (_optional_) of the recipients in cc\n",
            "items": {
              "required": [
                "email"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address of the recipient in cc",
                  "format": "email",
                  "example": "ann6533@example.com"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the recipient in cc. **Maximum allowed characters are 70**.\n",
                  "example": "Ann"
                }
              }
            }
          },
          "htmlContent": {
            "type": "string",
            "description": "HTML body of the message. **Mandatory if 'templateId' is not passed, ignored if 'templateId' is passed**\n",
            "example": "<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>"
          },
          "textContent": {
            "type": "string",
            "description": "Plain Text body of the message. **Ignored if 'templateId' is passed**\n",
            "example": "Please confirm your email address by clicking on the link https://text.domain.com"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the message. **Mandatory if 'templateId' is not passed**\n",
            "example": "Login Email confirmation"
          },
          "replyTo": {
            "required": [
              "email"
            ],
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Email address in reply to",
                "format": "email",
                "example": "ann6533@example.com"
              },
              "name": {
                "type": "string",
                "description": "Name in reply to. **Maximum allowed characters are 70**.\n",
                "example": "Ann"
              }
            },
            "description": "Email (**required**), along with name (_optional_), on which transactional mail recipients will be able to reply back. For example,\n**{\"email\":\"ann6533@example.com\", \"name\":\"Ann\"}**\n"
          },
          "attachment": {
            "type": "array",
            "description": "Pass the _absolute URL_ (**no local file**) or the _base64 content_ of the attachment along with the attachment name. **Mandatory if attachment content is passed**. For example,\n**[{\"url\":\"https://attachment.domain.com/myAttachmentFromUrl.jpg\", \"name\":\"myAttachmentFromUrl.jpg\"}, {\"content\":\"base64 example content\", \"name\":\"myAttachmentFromBase64.jpg\"}]**.\nAllowed extensions for attachment file:\n#### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub, eps, odt, mp3, m4a, m4v, wma, ogg, flac, wav, aif, aifc, aiff, mp4, mov, avi, mkv, mpeg, mpg, wmv and pkpass.\nIf `templateId` is passed and is in New Template Language format then both attachment url and content are accepted. If template is in Old template Language format, then `attachment` is ignored \n",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "Absolute url of the attachment (**no local file**).\n",
                  "format": "url",
                  "example": "https://attachment.domain.com/myAttachmentFromUrl.jpg"
                },
                "content": {
                  "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                  "type": "string",
                  "description": "Base64 encoded chunk data of the attachment generated on the fly",
                  "format": "byte",
                  "example": "b3JkZXIucGRm"
                },
                "name": {
                  "type": "string",
                  "description": "**Required if content is passed**. Name of the attachment\n",
                  "example": "myAttachment.png"
                }
              }
            }
          },
          "headers": {
            "type": "object",
            "additionalProperties": {},
            "description": "Pass the set of custom headers (_not the standard headers_) that shall be sent along the mail headers in the original email. **'sender.ip'** header can be set (**only for dedicated ip users**) to mention the IP to be used for sending transactional emails. Headers are allowed in `This-Case-Only` (i.e. words separated by hyphen with first letter of each word in capital letter), they will be converted to such case styling if not in this format in the request payload. For example,\n**{\"sender.ip\":\"1.2.3.4\", \"X-Mailin-custom\":\"some_custom_header\", \"idempotencyKey\":\"abc-123\"}**.\n",
            "example": {
              "sender.ip": "1.2.3.4",
              "X-Mailin-custom": "some_custom_header",
              "idempotencyKey": "abc-123"
            }
          },
          "templateId": {
            "type": "integer",
            "description": "Id of the template. **Mandatory if messageVersions are passed**",
            "format": "int64",
            "example": 2
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "description": "Pass the set of attributes to customize the template. For example, **{\"FNAME\":\"Joe\", \"LNAME\":\"Doe\"}**. It's **considered only if template is in New Template Language format**.\n",
            "example": {
              "FNAME": "Joe",
              "LNAME": "Doe"
            }
          },
          "messageVersions": {
            "type": "array",
            "description": "You can customize and send out multiple versions of a templateId. Some global parameters such as **to(mandatory), bcc, cc, replyTo, subject** can also be customized specific to each version.\nTotal number of recipients in one API request must not exceed 200. However, you can still pass upto 99 recipients maximum in one message version.\nThe size of individual params in all the messageVersions shall not exceed **100 KB** limit and that of cumulative params shall not exceed **1000 KB**.\nThis feature is currently in its **beta version**. You can follow this **step-by-step guide** on how to use **messageVersions** to batch send emails - **https://developers.sendinblue.com/docs/batch-send-transactional-emails**\n",
            "items": {
              "type": "object",
              "required": [
                "to"
              ],
              "properties": {
                "to": {
                  "type": "array",
                  "description": "List of email addresses and names (_optional_) of the recipients. For example,\n**[{\"name\":\"Jimmy\", \"email\":\"jimmy98@example.com\"}, {\"name\":\"Joe\", \"email\":\"joe@example.com\"}]**\n",
                  "items": {
                    "required": [
                      "email"
                    ],
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email address of the recipient",
                        "format": "email",
                        "example": "jimmy98@example.com"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the recipient. **Maximum allowed characters are 70**.\n",
                        "example": "Jimmy"
                      }
                    }
                  }
                },
                "params": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "Pass the set of attributes to customize the template. For example, **{\"FNAME\":\"Joe\", \"LNAME\":\"Doe\"}**. It's **considered only if template is in New Template Language format**.\n",
                  "example": {
                    "FNAME": "Joe",
                    "LNAME": "Doe"
                  }
                },
                "bcc": {
                  "type": "array",
                  "description": "List of email addresses and names (_optional_) of the recipients in bcc\n",
                  "items": {
                    "required": [
                      "email"
                    ],
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email address of the recipient in bcc",
                        "format": "email",
                        "example": "helen9766@example.com"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the recipient in bcc. **Maximum allowed characters are 70**.\n",
                        "example": "Helen"
                      }
                    }
                  }
                },
                "cc": {
                  "type": "array",
                  "description": "List of email addresses and names (_optional_) of the recipients in cc\n",
                  "items": {
                    "required": [
                      "email"
                    ],
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email address of the recipient in cc",
                        "format": "email",
                        "example": "ann6533@example.com"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the recipient in cc. **Maximum allowed characters are 70**.\n",
                        "example": "Ann"
                      }
                    }
                  }
                },
                "replyTo": {
                  "required": [
                    "email"
                  ],
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "Email address in reply to",
                      "format": "email",
                      "example": "ann6533@example.com"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name in reply to. **Maximum allowed characters are 70**.\n",
                      "example": "Ann"
                    }
                  },
                  "description": "Email (**required**), along with name (_optional_), on which transactional mail recipients will be able to reply back. For example,\n**{\"email\":\"ann6533@example.com\", \"name\":\"Ann\"}**\n"
                },
                "subject": {
                  "type": "string",
                  "description": "Custom subject specific to message version\n",
                  "example": "Login Email confirmation"
                }
              }
            }
          },
          "tags": {
            "type": "array",
            "description": "Tag your emails to find them more easily",
            "items": {
              "type": "string",
              "example": "tag1"
            }
          }
        }
      },
      "deleteHardbounces": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Starting date (YYYY-MM-DD) of the time period for deletion. The hardbounces occurred after this date will be deleted. Must be less than or equal to the endDate",
            "example": "2016-12-31"
          },
          "endDate": {
            "type": "string",
            "description": "Ending date (YYYY-MM-DD) of the time period for deletion. The hardbounces until this date will be deleted. Must be greater than or equal to the startDate",
            "example": "2017-01-31"
          },
          "contactEmail": {
            "type": "string",
            "description": "Target a specific email address",
            "format": "email",
            "example": "alex76@example.com"
          }
        }
      },
      "blockDomain": {
        "type": "object",
        "required": [
          "domain"
        ],
        "properties": {
          "domain": {
            "type": "string",
            "description": "name of the domain to be blocked",
            "example": "example.com"
          }
        }
      },
      "createWebhook": {
        "required": [
          "events",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL of the webhook",
            "format": "url",
            "example": "http://requestb.in/173lyyx1"
          },
          "description": {
            "type": "string",
            "description": "Description of the webhook",
            "example": "Webhook triggered on unsubscription"
          },
          "events": {
            "type": "array",
            "description": "- Events triggering the webhook. Possible values for **Transactional** type webhook:\n#### `sent` OR `request`, `delivered`, `hardBounce`, `softBounce`, `blocked`, `spam`, `invalid`, `deferred`, `click`, `opened`, `uniqueOpened` and `unsubscribed`\n- Possible values for **Marketing** type webhook:\n#### `spam`, `opened`, `click`, `hardBounce`, `softBounce`, `unsubscribed`, `listAddition` & `delivered`\n- Possible values for **Inbound** type webhook:\n#### `inboundEmailProcessed`\n",
            "items": {
              "type": "string",
              "example": "unsubscribed",
              "enum": [
                "sent",
                "hardBounce",
                "softBounce",
                "blocked",
                "spam",
                "delivered",
                "request",
                "click",
                "invalid",
                "deferred",
                "opened",
                "uniqueOpened",
                "unsubscribed",
                "listAddition",
                "contactUpdated",
                "contactDeleted",
                "inboundEmailProcessed"
              ]
            }
          },
          "type": {
            "type": "string",
            "description": "Type of the webhook",
            "example": "marketing",
            "default": "transactional",
            "enum": [
              "transactional",
              "marketing",
              "inbound"
            ]
          },
          "domain": {
            "type": "string",
            "description": "Inbound domain of webhook, required in case of event type `inbound`",
            "example": "example.com"
          }
        }
      },
      "updateWebhook": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL of the webhook",
            "format": "url",
            "example": "http://requestb.in/173lyyx1"
          },
          "description": {
            "type": "string",
            "description": "Description of the webhook",
            "example": "Webhook triggered on contact hardbounce"
          },
          "events": {
            "type": "array",
            "description": "- Events triggering the webhook. Possible values for **Transactional** type webhook:\n#### `sent` OR `request`, `delivered`, `hardBounce`, `softBounce`, `blocked`, `spam`, `invalid`, `deferred`, `click`, `opened`, `uniqueOpened` and `unsubscribed`\n- Possible values for **Marketing** type webhook:\n#### `spam`, `opened`, `click`, `hardBounce`, `softBounce`, `unsubscribed`, `listAddition` & `delivered`\n- Possible values for **Inbound** type webhook:\n#### `inboundEmailProcessed`\n",
            "items": {
              "type": "string",
              "example": "hardBounce",
              "enum": [
                "sent",
                "hardBounce",
                "softBounce",
                "blocked",
                "spam",
                "delivered",
                "request",
                "click",
                "invalid",
                "deferred",
                "opened",
                "uniqueOpened",
                "unsubscribed",
                "listAddition",
                "contactUpdated",
                "contactDeleted",
                "inboundEmailProcessed"
              ]
            }
          },
          "domain": {
            "type": "string",
            "description": "Inbound domain of webhook, used in case of event type `inbound`",
            "example": "example.com"
          }
        }
      },
      "createDoiContact": {
        "required": [
          "email",
          "includeListIds",
          "redirectionUrl",
          "templateId"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address where the confirmation email will be sent. This email address will be the identifier for all other contact attributes.",
            "format": "email",
            "example": "elly@example.com"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "description": "Pass the set of attributes and their values. **These attributes must be present in your SendinBlue account**. For eg. **{'FNAME':'Elly', 'LNAME':'Roger'}**\n",
            "example": {
              "FNAME": "Elly",
              "LNAME": "Roger"
            }
          },
          "includeListIds": {
            "type": "array",
            "description": "Lists under user account where contact should be added",
            "items": {
              "type": "integer",
              "description": "Id of the list",
              "format": "int64",
              "example": 36
            }
          },
          "excludeListIds": {
            "type": "array",
            "description": "Lists under user account where contact should not be added",
            "items": {
              "type": "integer",
              "description": "Id of the list",
              "format": "int64",
              "example": 36
            }
          },
          "templateId": {
            "type": "integer",
            "description": "Id of the Double opt-in (DOI) template",
            "format": "int64",
            "example": 2
          },
          "redirectionUrl": {
            "type": "string",
            "description": "URL of the web page that user will be redirected to after clicking on the double opt in URL. When editing your DOI template you can reference this URL by using the tag **{{ params.DOIurl }}**.\n",
            "format": "url",
            "example": "http://requestb.in/173lyyx1"
          }
        }
      },
      "createContact": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address of the user. **Mandatory if \"SMS\" field is not passed in \"attributes\" parameter**. Mobile Number in **SMS** field should be passed with proper country code. For example:\n**{\"SMS\":\"+91xxxxxxxxxx\"}** or **{\"SMS\":\"0091xxxxxxxxxx\"}**\n",
            "format": "email",
            "example": "elly@example.com"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "description": "Pass the set of attributes and their values. **These attributes must be present in your SendinBlue account**. For eg:\n**{\"FNAME\":\"Elly\", \"LNAME\":\"Roger\"}**\n",
            "example": {
              "FNAME": "Elly",
              "LNAME": "Roger"
            }
          },
          "emailBlacklisted": {
            "type": "boolean",
            "description": "Set this field to blacklist the contact for emails (emailBlacklisted = true)",
            "example": false
          },
          "smsBlacklisted": {
            "type": "boolean",
            "description": "Set this field to blacklist the contact for SMS (smsBlacklisted = true)",
            "example": false
          },
          "listIds": {
            "type": "array",
            "description": "Ids of the lists to add the contact to",
            "items": {
              "type": "integer",
              "description": "Id of the list to add the contact to",
              "format": "int64",
              "example": 36
            }
          },
          "updateEnabled": {
            "type": "boolean",
            "description": "Facilitate to update the existing contact in the same request (updateEnabled = true)",
            "example": false,
            "default": false
          },
          "smtpBlacklistSender": {
            "type": "array",
            "description": "transactional email forbidden sender for contact. Use only for email Contact ( only available if updateEnabled = true )",
            "items": {
              "type": "string",
              "format": "email"
            }
          }
        }
      },
      "updateContact": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {},
            "description": "Pass the set of attributes to be updated. **These attributes must be present in your account**. To update existing email address of a contact with the new one please pass EMAIL in attribtes. For example, **{ \"EMAIL\":\"newemail@domain.com\", \"FNAME\":\"Ellie\", \"LNAME\":\"Roger\"}**.\nKeep in mind transactional attributes can be updated the same way as normal attributes. Mobile Number in **SMS** field should be passed with proper country code. For example: **{\"SMS\":\"+91xxxxxxxxxx\"} or {\"SMS\":\"0091xxxxxxxxxx\"}**\n",
            "example": {
              "EMAIL": "newemail@domain.com",
              "FNAME": "Ellie",
              "LNAME": "Roger"
            }
          },
          "emailBlacklisted": {
            "type": "boolean",
            "description": "Set/unset this field to blacklist/allow the contact for emails (emailBlacklisted = true)",
            "example": false
          },
          "smsBlacklisted": {
            "type": "boolean",
            "description": "Set/unset this field to blacklist/allow the contact for SMS (smsBlacklisted = true)",
            "example": true
          },
          "listIds": {
            "type": "array",
            "description": "Ids of the lists to add the contact to",
            "items": {
              "type": "integer",
              "description": "Id of the list to add the contact to",
              "format": "int64",
              "example": 65
            }
          },
          "unlinkListIds": {
            "type": "array",
            "description": "Ids of the lists to remove the contact from",
            "items": {
              "type": "integer",
              "description": "Id of the list to remove the contact from",
              "format": "int64",
              "example": 36
            }
          },
          "smtpBlacklistSender": {
            "type": "array",
            "description": "transactional email forbidden sender for contact. Use only for email Contact",
            "items": {
              "type": "string",
              "format": "email"
            }
          }
        }
      },
      "updateBatchContacts": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "description": "List of contacts to be updated",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address of the user to be updated (For each operation only pass one of the supported contact identifiers. Email, id or sms)",
                  "format": "email",
                  "example": "elly@example.com"
                },
                "id": {
                  "type": "integer",
                  "description": "id of the user to be updated (For each operation only pass one of the supported contact identifiers. Email, id or sms)",
                  "format": "int64",
                  "example": 31
                },
                "sms": {
                  "type": "string",
                  "description": "SMS of the user to be updated (For each operation only pass one of the supported contact identifiers. Email, id or sms)",
                  "example": "+91xxxxxxxxxx"
                },
                "attributes": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "Pass the set of attributes to be updated. **These attributes must be present in your account**. To update existing email address of a contact with the new one please pass EMAIL in attribtes. For example, **{ \"EMAIL\":\"newemail@domain.com\", \"FNAME\":\"Ellie\", \"LNAME\":\"Roger\"}**.\nKeep in mind transactional attributes can be updated the same way as normal attributes. Mobile Number in **SMS** field should be passed with proper country code. For example: **{\"SMS\":\"+91xxxxxxxxxx\"} or {\"SMS\":\"0091xxxxxxxxxx\"}**\n",
                  "example": {
                    "EMAIL": "newemail@domain.com",
                    "FNAME": "Ellie",
                    "LNAME": "Roger"
                  }
                },
                "emailBlacklisted": {
                  "type": "boolean",
                  "description": "Set/unset this field to blacklist/allow the contact for emails (emailBlacklisted = true)",
                  "example": false
                },
                "smsBlacklisted": {
                  "type": "boolean",
                  "description": "Set/unset this field to blacklist/allow the contact for SMS (smsBlacklisted = true)",
                  "example": true
                },
                "listIds": {
                  "type": "array",
                  "description": "Ids of the lists to add the contact to",
                  "items": {
                    "type": "integer",
                    "description": "Id of the list to add the contact to",
                    "format": "int64",
                    "example": 65
                  }
                },
                "unlinkListIds": {
                  "type": "array",
                  "description": "Ids of the lists to remove the contact from",
                  "items": {
                    "type": "integer",
                    "description": "Id of the list to remove the contact from",
                    "format": "int64",
                    "example": 36
                  }
                },
                "smtpBlacklistSender": {
                  "type": "array",
                  "description": "transactional email forbidden sender for contact. Use only for email Contact",
                  "items": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      },
      "createAttribute": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of the attribute. **Use only if the attribute's category is 'calculated' or 'global'**\n",
            "example": "COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]"
          },
          "enumeration": {
            "type": "array",
            "description": "List of values and labels that the attribute can take. **Use only if the attribute's category is \"category\"**. For example:\n**[{\"value\":1, \"label\":\"male\"}, {\"value\":2, \"label\":\"female\"}]**\n",
            "items": {
              "required": [
                "label",
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "type": "integer",
                  "description": "Id of the value",
                  "example": 1
                },
                "label": {
                  "type": "string",
                  "description": "Label of the value",
                  "example": "Women"
                }
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Type of the attribute. **Use only if the attribute's category is 'normal', 'category' or 'transactional'**\nType **boolean** is only available if the category is **normal** attribute\nType **id** is only available if the category is **transactional** attribute\nType **category** is only available if the category is **category** attribute\n",
            "example": "text",
            "enum": [
              "text",
              "date",
              "float",
              "boolean",
              "id",
              "category"
            ]
          }
        }
      },
      "updateAttribute": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of the attribute to update. **Use only if the attribute's category is 'calculated' or 'global'**\n",
            "example": "COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]"
          },
          "enumeration": {
            "type": "array",
            "description": "List of the values and labels that the attribute can take. **Use only if the attribute's category is \"category\"**. For example,\n**[{\"value\":1, \"label\":\"male\"}, {\"value\":2, \"label\":\"female\"}]**\n",
            "items": {
              "required": [
                "label",
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "type": "integer",
                  "description": "Id of the value",
                  "example": 1
                },
                "label": {
                  "type": "string",
                  "description": "Label of the value",
                  "example": "Men"
                }
              }
            }
          }
        }
      },
      "createList": {
        "required": [
          "folderId",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the list",
            "example": "Magento Customer - ES"
          },
          "folderId": {
            "type": "integer",
            "description": "Id of the parent folder in which this list is to be created",
            "format": "int64",
            "example": 2
          }
        }
      },
      "updateList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the list. Either of the two parameters (name, folderId) can be updated at a time.",
            "example": "Magento Customer - ES"
          },
          "folderId": {
            "type": "integer",
            "description": "Id of the folder in which the list is to be moved. Either of the two parameters (name, folderId) can be updated at a time.",
            "format": "int64",
            "example": 2
          }
        }
      },
      "requestContactExport": {
        "type": "object",
        "required": [
          "customContactFilter"
        ],
        "properties": {
          "exportAttributes": {
            "type": "array",
            "description": "List of all the attributes that you want to export. **These attributes must be present in your contact database.** For example:\n**['fname', 'lname', 'email']**\n",
            "items": {
              "type": "string",
              "example": "NAME"
            }
          },
          "customContactFilter": {
            "type": "object",
            "properties": {
              "actionForContacts": {
                "type": "string",
                "description": "**Mandatory if neither actionForEmailCampaigns nor actionForSmsCampaigns is passed.** This will export the contacts on the basis of provided action applied on contacts as per the list id.\n* **allContacts** - Fetch the list of all contacts for a particular list.\n* **subscribed & unsubscribed** - Fetch the list of subscribed / unsubscribed (blacklisted via any means) contacts for a particular list. \n* **unsubscribedPerList** - Fetch the list of contacts that are unsubscribed from a particular list only.\n",
                "enum": [
                  "allContacts",
                  "subscribed",
                  "unsubscribed",
                  "unsubscribedPerList"
                ]
              },
              "actionForEmailCampaigns": {
                "type": "string",
                "description": "**Mandatory if neither actionForContacts nor actionForSmsCampaigns is passed.** This will export the contacts on the basis of provided action applied on email campaigns.\n* **openers & nonOpeners** - emailCampaignId is mandatory. Fetch the list of readers / non-readers for a particular email campaign.\n* **clickers & nonClickers** - emailCampaignId is mandatory. Fetch the list of clickers / non-clickers for a particular email campaign.\n* **unsubscribed** - emailCampaignId is mandatory. Fetch the list of all unsubscribed (blacklisted via any means) contacts for a particular email campaign.\n* **hardBounces & softBounces** - emailCampaignId is optional. Fetch the list of hard bounces / soft bounces for a particular / all email campaign(s).\n",
                "enum": [
                  "openers",
                  "nonOpeners",
                  "clickers",
                  "nonClickers",
                  "unsubscribed",
                  "hardBounces",
                  "softBounces"
                ]
              },
              "actionForSmsCampaigns": {
                "type": "string",
                "description": "**Mandatory if neither actionForContacts nor actionForEmailCampaigns is passed.** This will export the contacts on the basis of provided action applied on sms campaigns.\n* **unsubscribed** - Fetch the list of all unsubscribed (blacklisted via any means) contacts for all / particular sms campaigns.\n* **hardBounces & softBounces** - Fetch the list of hard bounces / soft bounces for all / particular sms campaigns.\n",
                "enum": [
                  "hardBounces",
                  "softBounces",
                  "unsubscribed"
                ]
              },
              "listId": {
                "type": "integer",
                "description": "**Mandatory if actionForContacts is passed, ignored otherwise.** Id of the list for which the corresponding action shall be applied in the filter.\n",
                "format": "int64",
                "example": 2
              },
              "emailCampaignId": {
                "type": "integer",
                "description": "Considered only if **actionForEmailCampaigns** is passed, ignored otherwise. **Mandatory if action is one of the following - openers, nonOpeners, clickers, nonClickers, unsubscribed.**\nThe id of the email campaign for which the corresponding action shall be applied in the filter.\n",
                "format": "int64",
                "example": 12
              },
              "smsCampaignId": {
                "type": "integer",
                "description": "Considered only if **actionForSmsCampaigns** is passed, ignored otherwise. The id of sms campaign for which the corresponding action shall be applied in the filter.\n",
                "format": "int64",
                "example": 12
              }
            },
            "description": "Set the filter for the contacts to be exported.\n"
          },
          "notifyUrl": {
            "type": "string",
            "description": "Webhook that will be called once the export process is finished. For reference, https://help.sendinblue.com/hc/en-us/articles/360007666479",
            "format": "url",
            "example": "http://requestb.in/173lyyx1"
          }
        }
      },
      "requestContactImport": {
        "type": "object",
        "properties": {
          "fileUrl": {
            "type": "string",
            "description": "**Mandatory if fileBody is not defined.** URL of the file to be imported (**no local file**). Possible file formats:\n#### .txt, .csv\n",
            "format": "url",
            "example": "https://importfile.domain.com"
          },
          "fileBody": {
            "type": "string",
            "description": "**Mandatory if fileUrl is not defined.** CSV content to be imported. Use semicolon to separate multiple attributes. **Maximum allowed file body size is 10MB** . However we recommend a safe limit of around 8 MB to avoid the issues caused due to increase of file body size while parsing. Please use fileUrl instead to import bigger files.\n",
            "example": "NAME;SURNAME;EMAIL\\n\"Smith\";\"John\";\"john.smith@example.com\"\\n\"Roger\";\"Ellie\";\"ellie36@example.com"
          },
          "listIds": {
            "type": "array",
            "description": "**Mandatory if newList is not defined.** Ids of the lists in which the contacts shall be imported. For example, **[2, 4, 7]**.\n",
            "items": {
              "type": "integer",
              "description": "List Id in which the contacts shall be imported",
              "format": "int64",
              "example": 76
            }
          },
          "notifyUrl": {
            "type": "string",
            "description": "URL that will be called once the import process is finished. For reference, https://help.sendinblue.com/hc/en-us/articles/360007666479",
            "format": "url",
            "example": "http://requestb.in/173lyyx1"
          },
          "newList": {
            "type": "object",
            "properties": {
              "listName": {
                "type": "string",
                "description": "List with listName will be created first and users will be imported in it. **Mandatory if listIds is empty**.\n",
                "example": "ContactImport - 2017-05"
              },
              "folderId": {
                "type": "integer",
                "description": "Id of the folder where this new list shall be created. **Mandatory if listName is not empty**\n",
                "format": "int64",
                "example": 2
              }
            },
            "description": "To create a new list and import the contacts into it, pass the listName and an optional folderId."
          },
          "emailBlacklist": {
            "type": "boolean",
            "description": "To blacklist all the contacts for email",
            "example": false,
            "default": false
          },
          "smsBlacklist": {
            "type": "boolean",
            "description": "To blacklist all the contacts for sms",
            "example": false,
            "default": false
          },
          "updateExistingContacts": {
            "type": "boolean",
            "description": "To facilitate the choice to update the existing contacts",
            "example": true,
            "default": true
          },
          "emptyContactsAttributes": {
            "type": "boolean",
            "description": "To facilitate the choice to erase any attribute of the existing contacts with empty value. emptyContactsAttributes = true means the empty fields in your import will erase any attribute that currently contain data in SendinBlue, & emptyContactsAttributes = false means the empty fields will not affect your existing data ( **only available if `updateExistingContacts` set to true **)\n",
            "example": true,
            "default": false
          }
        }
      },
      "createSmsCampaign": {
        "required": [
          "content",
          "name",
          "sender"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the campaign",
            "example": "Spring Promo Code"
          },
          "sender": {
            "maxLength": 15,
            "type": "string",
            "description": "Name of the sender. **The number of characters is limited to 11 for alphanumeric characters and 15 for numeric characters**\n",
            "example": "MyShop"
          },
          "content": {
            "type": "string",
            "description": "Content of the message. The **maximum characters used per SMS is 160**, if used more than that, it will be counted as more than one SMS\n",
            "example": "Get a discount by visiting our NY store and saying : Happy Spring!"
          },
          "recipients": {
            "required": [
              "listIds"
            ],
            "type": "object",
            "properties": {
              "listIds": {
                "type": "array",
                "description": "Lists Ids to send the campaign to. **REQUIRED if scheduledAt is not empty**\n",
                "items": {
                  "type": "integer",
                  "description": "List Id to send the campaign to",
                  "format": "int64",
                  "example": 54
                }
              },
              "exclusionListIds": {
                "type": "array",
                "description": "List ids which have to be excluded from a campaign",
                "items": {
                  "type": "integer",
                  "description": "List Id to exclude from the campaign",
                  "format": "int64",
                  "example": 15
                }
              }
            }
          },
          "scheduledAt": {
            "type": "string",
            "description": "UTC date-time on which the campaign has to run (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
            "example": "2017-05-05T12:30:00+02:00"
          },
          "unicodeEnabled": {
            "type": "boolean",
            "description": "Format of the message. It indicates whether the content should be treated as unicode or not.\n",
            "example": true,
            "default": false
          }
        }
      },
      "updateSmsCampaign": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the campaign",
            "example": "Spring Promo Code"
          },
          "sender": {
            "maxLength": 15,
            "type": "string",
            "description": "Name of the sender. **The number of characters is limited to 11 for alphanumeric characters and 15 for numeric characters**\n",
            "example": "MyShop"
          },
          "content": {
            "type": "string",
            "description": "Content of the message. The **maximum characters used per SMS is 160**, if used more than that, it will be counted as more than one SMS\n",
            "example": "Get a discount by visiting our NY store and saying : Happy Spring!"
          },
          "recipients": {
            "required": [
              "listIds"
            ],
            "type": "object",
            "properties": {
              "listIds": {
                "type": "array",
                "description": "Lists Ids to send the campaign to. **REQUIRED if scheduledAt is not empty**\n",
                "items": {
                  "type": "integer",
                  "description": "List Id to send the campaign to",
                  "format": "int64",
                  "example": 54
                }
              },
              "exclusionListIds": {
                "type": "array",
                "description": "List ids which have to be excluded from a campaign",
                "items": {
                  "type": "integer",
                  "description": "List Id to exclude from the campaign",
                  "format": "int64",
                  "example": 15
                }
              }
            }
          },
          "scheduledAt": {
            "type": "string",
            "description": "UTC date-time on which the campaign has to run (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
            "example": "2017-05-05T12:30:00+02:00"
          },
          "unicodeEnabled": {
            "type": "boolean",
            "description": "Format of the message. It indicates whether the content should be treated as unicode or not.\n",
            "example": true,
            "default": false
          }
        }
      },
      "sendTransacSms": {
        "required": [
          "content",
          "recipient",
          "sender"
        ],
        "type": "object",
        "properties": {
          "sender": {
            "maxLength": 15,
            "type": "string",
            "description": "Name of the sender. **The number of characters is limited to 11 for alphanumeric characters and 15 for numeric characters**\n",
            "example": "MyShop"
          },
          "recipient": {
            "type": "string",
            "description": "Mobile number to send SMS with the country code",
            "example": "33689965433"
          },
          "content": {
            "type": "string",
            "description": "Content of the message. If more than **160 characters** long, will be sent as multiple text messages\n",
            "example": "Enter this code:CCJJG8 to validate your account"
          },
          "type": {
            "type": "string",
            "description": "Type of the SMS. Marketing SMS messages are those sent typically with marketing content. Transactional SMS messages are sent to individuals and are triggered in response to some action, such as a sign-up, purchase, etc.",
            "example": "marketing",
            "default": "transactional",
            "enum": [
              "transactional",
              "marketing"
            ]
          },
          "tag": {
            "type": "string",
            "description": "Tag of the message",
            "example": "accountValidation"
          },
          "webUrl": {
            "type": "string",
            "description": "Webhook to call for each event triggered by the message (delivered etc.)",
            "format": "url",
            "example": "http://requestb.in/173lyyx1"
          },
          "unicodeEnabled": {
            "type": "boolean",
            "description": "Format of the message. It indicates whether the content should be treated as unicode or not.\n",
            "example": true,
            "default": false
          }
        }
      },
      "sendTestEmail": {
        "type": "object",
        "properties": {
          "emailTo": {
            "type": "array",
            "description": "List of the email addresses of the recipients whom you wish to send the test mail.\n_If left empty, the test mail will be sent to your entire test list. You can not send more than 50 test emails per day_.\n",
            "items": {
              "type": "string",
              "description": "Email addres of the recipient",
              "format": "email",
              "example": "helen.jurger@example.com"
            }
          }
        }
      },
      "sendTestSms": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Mobile number of the recipient with the country code. This number **must belong to one of your contacts in SendinBlue account and must not be blacklisted**\n",
            "example": "33689965433"
          }
        }
      },
      "getTransacAggregatedSmsReport": {
        "type": "object",
        "properties": {
          "range": {
            "type": "string",
            "description": "Time frame of the report",
            "example": "2016-09-08|2017-04-06"
          },
          "requests": {
            "type": "integer",
            "description": "Number of requests for the timeframe",
            "format": "int64",
            "example": 263
          },
          "delivered": {
            "type": "integer",
            "description": "Number of delivered SMS for the timeframe",
            "format": "int64",
            "example": 249
          },
          "hardBounces": {
            "type": "integer",
            "description": "Number of hardbounces for the timeframe",
            "format": "int64",
            "example": 1
          },
          "softBounces": {
            "type": "integer",
            "description": "Number of softbounces for the timeframe",
            "format": "int64",
            "example": 4
          },
          "blocked": {
            "type": "integer",
            "description": "Number of blocked contact for the timeframe",
            "format": "int64",
            "example": 2
          },
          "unsubscribed": {
            "type": "integer",
            "description": "Number of unsubscription for the timeframe",
            "format": "int64",
            "example": 6
          },
          "replied": {
            "type": "integer",
            "description": "Number of answered SMS for the timeframe",
            "format": "int64",
            "example": 12
          },
          "accepted": {
            "type": "integer",
            "description": "Number of accepted for the timeframe",
            "format": "int64",
            "example": 252
          },
          "rejected": {
            "type": "integer",
            "description": "Number of rejected for the timeframe",
            "format": "int64",
            "example": 8
          }
        }
      },
      "getTransacSmsReport": {
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "description": "Date for which statistics are retrieved",
                  "format": "date",
                  "example": "2017-03-17"
                },
                "requests": {
                  "type": "integer",
                  "description": "Number of requests for the date",
                  "format": "int64",
                  "example": 87
                },
                "delivered": {
                  "type": "integer",
                  "description": "Number of delivered SMS for the date",
                  "format": "int64",
                  "example": 85
                },
                "hardBounces": {
                  "type": "integer",
                  "description": "Number of hardbounces for the date",
                  "format": "int64",
                  "example": 1
                },
                "softBounces": {
                  "type": "integer",
                  "description": "Number of softbounces for the date",
                  "format": "int64",
                  "example": 1
                },
                "blocked": {
                  "type": "integer",
                  "description": "Number of blocked contact for the date",
                  "format": "int64",
                  "example": 0
                },
                "unsubscribed": {
                  "type": "integer",
                  "description": "Number of unsubscription for the date",
                  "format": "int64",
                  "example": 1
                },
                "replied": {
                  "type": "integer",
                  "description": "Number of answered SMS for the date",
                  "format": "int64",
                  "example": 2
                },
                "accepted": {
                  "type": "integer",
                  "description": "Number of accepted for the date",
                  "format": "int64",
                  "example": 85
                },
                "rejected": {
                  "type": "integer",
                  "description": "Number of rejected for the date",
                  "format": "int64",
                  "example": 1
                }
              }
            }
          }
        }
      },
      "getIp": {
        "required": [
          "active",
          "domain",
          "id",
          "ip"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the dedicated IP",
            "format": "int64",
            "example": 3
          },
          "ip": {
            "type": "string",
            "description": "Dedicated IP",
            "example": "123.65.8.22"
          },
          "active": {
            "type": "boolean",
            "description": "Status of the IP (true=active, false=inactive)",
            "example": true
          },
          "domain": {
            "type": "string",
            "description": "Domain associated to the IP",
            "example": "mailing.myshop.com"
          }
        }
      },
      "getIpsFromSender": {
        "required": [
          "ips"
        ],
        "type": "object",
        "properties": {
          "ips": {
            "type": "array",
            "description": "Dedicated IP(s) linked to a sender",
            "items": {
              "required": [
                "domain",
                "id",
                "ip",
                "weight"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of the dedicated IP",
                  "format": "int64",
                  "example": 3
                },
                "ip": {
                  "type": "string",
                  "description": "Dedicated IP",
                  "example": "123.65.8.22"
                },
                "domain": {
                  "type": "string",
                  "description": "Domain associated to the IP",
                  "example": "mailing.myshop.dom"
                },
                "weight": {
                  "type": "integer",
                  "description": "Weight of the IP",
                  "format": "int64",
                  "example": 75
                }
              }
            }
          }
        }
      },
      "getIps": {
        "required": [
          "ips"
        ],
        "type": "object",
        "properties": {
          "ips": {
            "type": "array",
            "description": "Dedicated IP(s) available on your account",
            "items": {
              "required": [
                "active",
                "domain",
                "id",
                "ip"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of the dedicated IP",
                  "format": "int64",
                  "example": 3
                },
                "ip": {
                  "type": "string",
                  "description": "Dedicated IP",
                  "example": "123.65.8.22"
                },
                "active": {
                  "type": "boolean",
                  "description": "Status of the IP (true=active, false=inactive)",
                  "example": true
                },
                "domain": {
                  "type": "string",
                  "description": "Domain associated to the IP",
                  "example": "mailing.myshop.com"
                }
              }
            }
          }
        }
      },
      "getIpFromSender": {
        "required": [
          "domain",
          "id",
          "ip",
          "weight"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the dedicated IP",
            "format": "int64",
            "example": 3
          },
          "ip": {
            "type": "string",
            "description": "Dedicated IP",
            "example": "123.65.8.22"
          },
          "domain": {
            "type": "string",
            "description": "Domain associated to the IP",
            "example": "mailing.myshop.dom"
          },
          "weight": {
            "type": "integer",
            "description": "Weight of the IP",
            "format": "int64",
            "example": 75
          }
        }
      },
      "manageIp": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "description": "Dedicated ID",
            "example": "123.65.8.22"
          }
        }
      },
      "getTransacEmailContent": {
        "required": [
          "attachmentCount",
          "body",
          "date",
          "email",
          "events",
          "subject"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address to which transactional email has been sent",
            "format": "email",
            "example": "abc@example.com"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the sent email",
            "example": "Summer Camp"
          },
          "templateId": {
            "type": "integer",
            "description": "Id of the template",
            "format": "int64",
            "example": 2
          },
          "date": {
            "type": "string",
            "description": "Date on which transactional email was sent",
            "example": "2017-03-12T12:30:00Z"
          },
          "events": {
            "type": "array",
            "description": "Series of events which occurred on the transactional email",
            "items": {
              "required": [
                "name",
                "time"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the event that occurred on the sent email",
                  "example": "delivered"
                },
                "time": {
                  "type": "string",
                  "description": "Time at which the event occurred",
                  "example": "2017-03-12T12:30:00Z"
                }
              }
            }
          },
          "body": {
            "type": "string",
            "description": "Actual content of the transactional email that has been sent",
            "example": "<!DOCTYPE html> <html> <body> <h1>Greetings from the team</h1> <p>This is the actual html content sent</p> </body> </html>"
          },
          "attachmentCount": {
            "type": "integer",
            "description": "Count of the attachments that were sent in the email",
            "format": "int64",
            "example": 2
          }
        }
      },
      "getTransacEmailsList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of transactional emails available on your account according to the passed filter",
            "format": "int64",
            "example": 5
          },
          "transactionalEmails": {
            "type": "array",
            "items": {
              "required": [
                "date",
                "email",
                "messageId",
                "subject",
                "uuid"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email address to which transactional email has been sent",
                  "format": "email",
                  "example": "john.smith@example.com"
                },
                "subject": {
                  "type": "string",
                  "description": "Subject of the sent email",
                  "example": "Summer Camp"
                },
                "templateId": {
                  "type": "integer",
                  "description": "Id of the template",
                  "format": "int64",
                  "example": 2
                },
                "messageId": {
                  "type": "string",
                  "description": "Message Id of the sent email",
                  "example": "<201798300811.5700093@relay.domain.com>"
                },
                "uuid": {
                  "type": "string",
                  "description": "Unique id of the email sent to a particular contact",
                  "example": "5a78c-209ok98262910-s99a341"
                },
                "date": {
                  "type": "string",
                  "description": "Date on which transactional email was sent",
                  "example": "2017-03-12T12:30:00Z"
                },
                "from": {
                  "type": "string",
                  "description": "Email address of the sender from which the email was sent",
                  "format": "email",
                  "example": "diana.doe@example.com"
                },
                "tags": {
                  "type": "array",
                  "description": "Tags used for your email",
                  "items": {
                    "type": "string",
                    "example": "tag1"
                  }
                }
              }
            }
          }
        }
      },
      "getBlockedDomains": {
        "type": "object",
        "required": [
          "domains"
        ],
        "properties": {
          "domains": {
            "description": "List of all blocked domains",
            "type": "array",
            "items": {
              "type": "string",
              "description": "name of blocked domain",
              "example": "contact.com"
            }
          }
        }
      },
      "abTestVersionStats": {
        "required": [
          "Version A",
          "Version B"
        ],
        "type": "object",
        "properties": {
          "Version A": {
            "type": "string",
            "description": "percentage of an event for version A",
            "example": "50%"
          },
          "Version B": {
            "type": "string",
            "description": "percentage of an event for version B",
            "example": "50%"
          }
        },
        "description": "Percentage of a particular event for both versions"
      },
      "abTestVersionClicks": {
        "type": "array",
        "description": "Information on clicked links for a particular version",
        "items": {
          "required": [
            "clickRate",
            "clicksCount",
            "link"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string",
              "description": "URL of the link",
              "example": "https://facbook.com/versionA"
            },
            "clicksCount": {
              "type": "number",
              "description": "Number of times a link is clicked",
              "format": "int64",
              "example": 3
            },
            "clickRate": {
              "type": "string",
              "description": "Percentage of clicks of link with respect to total clicks",
              "example": "40%"
            }
          }
        }
      },
      "getInboundEmailEvents": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "uuid",
                "sender",
                "date",
                "recipient"
              ],
              "properties": {
                "uuid": {
                  "description": "UUID that can be used to fetch additional data",
                  "type": "string",
                  "format": "uuid"
                },
                "date": {
                  "description": "Date when email was received on SMTP relay",
                  "type": "string",
                  "format": "date-time"
                },
                "sender": {
                  "description": "Sender’s email address",
                  "type": "string",
                  "format": "email"
                },
                "recipient": {
                  "description": "Recipient’s email address",
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        }
      },
      "getInboundEmailEventsByUuid": {
        "type": "object",
        "properties": {
          "receivedAt": {
            "description": "Date when email was received on SMTP relay",
            "type": "string",
            "format": "date-time",
            "example": "2019-05-25T11:53:26Z"
          },
          "deliveredAt": {
            "description": "Date when email was delivered successfully to client’s webhook",
            "type": "string",
            "nullable": true,
            "format": "date-time"
          },
          "recipient": {
            "description": "Recipient’s email address",
            "type": "string",
            "format": "email"
          },
          "sender": {
            "description": "Sender’s email address",
            "type": "string",
            "format": "email"
          },
          "messageId": {
            "description": "Value of the Message-ID header. This will be present only after the processing is done.",
            "type": "string"
          },
          "subject": {
            "description": "Value of the Subject header. This will be present only after the processing is done. ",
            "type": "string"
          },
          "attachments": {
            "description": "List of attachments of the email. This will be present only after the processing is done.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "filename specified in the Content-Disposition header of the attachment",
                  "type": "string"
                },
                "contentType": {
                  "description": "value of the Content-Type header of the attachment",
                  "type": "string"
                },
                "contentId": {
                  "description": "value of the Content-ID header of the attachment.",
                  "type": "string"
                },
                "contentLength": {
                  "description": "size of the attachment in bytes",
                  "type": "integer"
                }
              }
            }
          },
          "logs": {
            "description": "List of events/logs that describe the lifecycle of the email on SIB platform",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "description": "Date of the event",
                  "type": "string",
                  "format": "date-time"
                },
                "type": {
                  "description": "Type of the event",
                  "type": "string",
                  "enum": [
                    "received",
                    "processed",
                    "webhookFailed",
                    "webhookDelivered"
                  ]
                }
              }
            }
          }
        }
      },
      "subAccountsResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of subaccounts"
          },
          "subAccounts": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "companyName",
                "active",
                "createdAt"
              ],
              "properties": {
                "id": {
                  "description": "Client id of sub-account organization",
                  "type": "integer",
                  "format": "int64"
                },
                "companyName": {
                  "description": "Name of sub-account organization",
                  "type": "string"
                },
                "active": {
                  "description": "Whether organization is active or not",
                  "type": "boolean"
                },
                "createdAt": {
                  "description": "Timestamp when the organization was created",
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      },
      "createSubAccount": {
        "type": "object",
        "required": [
          "companyName"
        ],
        "properties": {
          "companyName": {
            "description": "Name of the organization",
            "type": "string"
          },
          "language": {
            "description": "Request language for localization information",
            "type": "string",
            "enum": [
              "en",
              "fr",
              "it",
              "es",
              "pt",
              "de"
            ]
          },
          "timezone": {
            "description": "Request timezone of the client",
            "type": "string"
          }
        },
        "example": {
          "companyName": "Test Sub-account",
          "timezone": "Europe/Paris",
          "language": "en"
        }
      },
      "masterDetailsResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email id of master account"
          },
          "companyName": {
            "type": "string",
            "description": "Company name of master account organization"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique identifier of the master account organization"
          },
          "currencyCode": {
            "type": "string",
            "description": "Currency code of the master account organization"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone of the master account organization"
          },
          "billingInfo": {
            "type": "object",
            "description": "Billing details of the master account organization",
            "properties": {
              "email": {
                "type": "string",
                "description": "Billing email id of master account"
              },
              "companyName": {
                "type": "string",
                "description": "Company name of master account"
              },
              "name": {
                "type": "object",
                "description": "Billing name of master account holder",
                "properties": {
                  "givenName": {
                    "type": "string",
                    "description": "First name for billing"
                  },
                  "familyName": {
                    "type": "string",
                    "description": "Last name for billing"
                  }
                }
              },
              "address": {
                "type": "object",
                "description": "Billing address of master account",
                "properties": {
                  "streetAddress": {
                    "type": "string",
                    "description": "Street address"
                  },
                  "locality": {
                    "type": "string",
                    "description": "Locality"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Postal code"
                  },
                  "stateCode": {
                    "type": "string",
                    "description": "State code"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "Country code"
                  }
                }
              }
            }
          },
          "planInfo": {
            "type": "object",
            "description": "Plan details",
            "properties": {
              "currencyCode": {
                "type": "string",
                "description": "Plan currency"
              },
              "nextBillingAt": {
                "type": "integer",
                "format": "int64",
                "description": "Timestamp of next billing date"
              },
              "price": {
                "type": "number",
                "description": "Plan amount"
              },
              "planPeriod": {
                "type": "string",
                "description": "Plan period type",
                "enum": [
                  "month",
                  "year"
                ]
              },
              "subAccounts": {
                "type": "integer",
                "description": "Number of sub-accounts"
              },
              "features": {
                "type": "array",
                "description": "List of provided features in the plan",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the feature"
                    },
                    "unitValue": {
                      "type": "string",
                      "description": "Unit value of the feature"
                    },
                    "quantity": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Quantity provided in the plan"
                    },
                    "used": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Quantity consumed by master"
                    },
                    "remaining": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Quantity remaining in the plan"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "subAccountDetailsResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the sub-account user"
          },
          "email": {
            "type": "string",
            "description": "Email id of the sub-account organization"
          },
          "companyName": {
            "type": "string",
            "description": "Sub-account company name"
          },
          "planInfo": {
            "type": "object",
            "description": "Sub-account plan details",
            "properties": {
              "credits": {
                "type": "object",
                "description": "Sub-account messaging quota details",
                "properties": {
                  "sms": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Sms quota of the sub-account"
                  },
                  "emails": {
                    "type": "object",
                    "description": "Email quota details of the sub-account",
                    "properties": {
                      "quantity": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Quantity of email messaging limits provided"
                      },
                      "remaining": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Available email messaging limits for use"
                      }
                    }
                  }
                }
              },
              "features": {
                "type": "object",
                "description": "Sub-account features and addons quota details",
                "properties": {
                  "inbox": {
                    "type": "object",
                    "description": "Inbox details",
                    "properties": {
                      "quantity": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Quantity of inbox provided"
                      },
                      "remaining": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Available inboxes for use"
                      }
                    }
                  },
                  "landingPage": {
                    "type": "object",
                    "description": "Landing page details",
                    "properties": {
                      "quantity": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Quantity of landing pages provided"
                      },
                      "remaining": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Available landing pages for use"
                      }
                    }
                  },
                  "users": {
                    "type": "object",
                    "description": "Multi-account details",
                    "properties": {
                      "quantity": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Quantity of multi-account's provided"
                      },
                      "remaining": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Available multi-accounts for use"
                      }
                    }
                  }
                }
              },
              "planType": {
                "type": "string",
                "description": "type of the plan"
              }
            }
          }
        }
      },
      "subAccountUpdatePlanRequest": {
        "type": "object",
        "description": "Details of the plan to be changed",
        "properties": {
          "credits": {
            "type": "object",
            "description": "Credit details to update",
            "properties": {
              "email": {
                "type": "integer",
                "format": "int64",
                "description": "Number of email credits"
              }
            }
          },
          "features": {
            "type": "object",
            "description": "Features details to update",
            "properties": {
              "users": {
                "type": "integer",
                "format": "int64",
                "description": "Number of multi-users"
              },
              "landingPage": {
                "type": "integer",
                "format": "int64",
                "description": "Number of landing pages"
              },
              "inbox": {
                "type": "integer",
                "format": "int64",
                "description": "Number of inboxes"
              }
            }
          }
        },
        "example": {
          "credits": {
            "email": 5000
          },
          "features": {
            "users": 15,
            "landingPage": 20,
            "inbox": 10
          }
        }
      },
      "Contact": {
        "required": [
          "email",
          "crmLists"
        ],
        "type": "object",
        "description": "Contact Details",
        "properties": {
          "virtualNextTask": {
            "type": "object",
            "description": "Next incomplete task of contact",
            "default": null,
            "example": {
              "id": "618e030658282f0555259086",
              "date": "2021-11-12T06:30:00+00:00",
              "done": false
            }
          },
          "email": {
            "type": "string",
            "description": "Contact email",
            "example": "contact@example.com"
          },
          "assignToId": {
            "type": "string",
            "description": "User id to whom contact is assigned",
            "example": "5faab4b7f195bb3c4c31e62a"
          },
          "contactsId": {
            "type": "integer",
            "description": "Contact id",
            "example": 247
          },
          "crmLists": {
            "additionalProperties": true,
            "type": "object",
            "description": "CRM lists in which contact is added",
            "example": [
              43,
              58
            ]
          },
          "attributes": {
            "type": "object",
            "description": "Contact attributes e.g firstname / lastname / SMS etc.",
            "example": {
              "SMS": "33058407250",
              "IDENTIFICATION": "1-3RHQ-259",
              "CIV": "MS",
              "LAST_NAME": "Brennon",
              "FIRST_NAME": "Meg",
              "DOB": "1986-05-02T00:00:00.000Z",
              "ADDRESS": "1 5th avenue",
              "ZIP_CODE": "44300",
              "CITY": "New-York",
              "ACTION_CODE": "17HH98CH"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-05-01T17:05:03.000Z",
            "description": "Contact created date/time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-05-01T17:05:03.000Z",
            "description": "Contact updated date/time"
          }
        }
      },
      "Task": {
        "required": [
          "taskTypeId",
          "name",
          "date"
        ],
        "type": "object",
        "description": "Task Details",
        "properties": {
          "firstContact": {
            "required": [
              "email",
              "crmLists"
            ],
            "type": "object",
            "description": "Contact Details",
            "properties": {
              "virtualNextTask": {
                "type": "object",
                "description": "Next incomplete task of contact",
                "default": null,
                "example": {
                  "id": "618e030658282f0555259086",
                  "date": "2021-11-12T06:30:00+00:00",
                  "done": false
                }
              },
              "email": {
                "type": "string",
                "description": "Contact email",
                "example": "contact@example.com"
              },
              "assignToId": {
                "type": "string",
                "description": "User id to whom contact is assigned",
                "example": "5faab4b7f195bb3c4c31e62a"
              },
              "contactsId": {
                "type": "integer",
                "description": "Contact id",
                "example": 247
              },
              "crmLists": {
                "additionalProperties": true,
                "type": "object",
                "description": "CRM lists in which contact is added",
                "example": [
                  43,
                  58
                ]
              },
              "attributes": {
                "type": "object",
                "description": "Contact attributes e.g firstname / lastname / SMS etc.",
                "example": {
                  "SMS": "33058407250",
                  "IDENTIFICATION": "1-3RHQ-259",
                  "CIV": "MS",
                  "LAST_NAME": "Brennon",
                  "FIRST_NAME": "Meg",
                  "DOB": "1986-05-02T00:00:00.000Z",
                  "ADDRESS": "1 5th avenue",
                  "ZIP_CODE": "44300",
                  "CITY": "New-York",
                  "ACTION_CODE": "17HH98CH"
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2017-05-01T17:05:03.000Z",
                "description": "Contact created date/time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2017-05-01T17:05:03.000Z",
                "description": "Contact updated date/time"
              }
            }
          },
          "id": {
            "type": "string",
            "description": "Unique task id",
            "example": "61a5cd07ca1347c82306ad06"
          },
          "taskTypeId": {
            "type": "string",
            "description": "Id for type of task e.g Call / Email / Meeting etc.",
            "example": "61a5cd07ca1347c82306ad09"
          },
          "name": {
            "type": "string",
            "description": "Name of task",
            "example": "Task: Connect with client"
          },
          "contactsIds": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "description": "Contact ids for contacts linked to this task",
            "example": [
              1,
              2,
              3
            ]
          },
          "contacts": {
            "items": {
              "required": [
                "email",
                "crmLists"
              ],
              "type": "object",
              "description": "Contact Details",
              "properties": {
                "virtualNextTask": {
                  "type": "object",
                  "description": "Next incomplete task of contact",
                  "default": null,
                  "example": {
                    "id": "618e030658282f0555259086",
                    "date": "2021-11-12T06:30:00+00:00",
                    "done": false
                  }
                },
                "email": {
                  "type": "string",
                  "description": "Contact email",
                  "example": "contact@example.com"
                },
                "assignToId": {
                  "type": "string",
                  "description": "User id to whom contact is assigned",
                  "example": "5faab4b7f195bb3c4c31e62a"
                },
                "contactsId": {
                  "type": "integer",
                  "description": "Contact id",
                  "example": 247
                },
                "crmLists": {
                  "additionalProperties": true,
                  "type": "object",
                  "description": "CRM lists in which contact is added",
                  "example": [
                    43,
                    58
                  ]
                },
                "attributes": {
                  "type": "object",
                  "description": "Contact attributes e.g firstname / lastname / SMS etc.",
                  "example": {
                    "SMS": "33058407250",
                    "IDENTIFICATION": "1-3RHQ-259",
                    "CIV": "MS",
                    "LAST_NAME": "Brennon",
                    "FIRST_NAME": "Meg",
                    "DOB": "1986-05-02T00:00:00.000Z",
                    "ADDRESS": "1 5th avenue",
                    "ZIP_CODE": "44300",
                    "CITY": "New-York",
                    "ACTION_CODE": "17HH98CH"
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-05-01T17:05:03.000Z",
                  "description": "Contact created date/time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-05-01T17:05:03.000Z",
                  "description": "Contact updated date/time"
                }
              }
            },
            "type": "array",
            "description": "Contact details for contacts linked to this task",
            "example": [
              {
                "email": "contact@example.com",
                "id": 247,
                "emailBlacklisted": true,
                "smsBlacklisted": true,
                "createdAt": "2017-05-01T17:05:03.000Z",
                "modifiedAt": "2017-05-01T17:05:03.000Z",
                "listIds": [
                  1,
                  2
                ],
                "attributes": {
                  "SMS": "33058407250",
                  "IDENTIFICATION": "1-3RHQ-259",
                  "CIV": "MS",
                  "LAST_NAME": "Brennon",
                  "FIRST_NAME": "Meg",
                  "DOB": "1986-05-02T00:00:00.000Z",
                  "ADDRESS": "1 5th avenue",
                  "ZIP_CODE": "44300",
                  "CITY": "New-York",
                  "ACTION_CODE": "17HH98CH"
                }
              },
              {
                "email": "33058407248@mailin-sms.com",
                "id": 245,
                "emailBlacklisted": true,
                "smsBlacklisted": false,
                "createdAt": "2017-05-01T17:05:03.000Z",
                "modifiedAt": "2017-05-01T17:05:03.000Z",
                "listIds": [
                  1,
                  2,
                  3
                ],
                "attributes": {
                  "SMS": "33058407248",
                  "IDENTIFICATION": "1-78JS-432",
                  "CIV": "MS",
                  "LAST_NAME": "Press",
                  "FIRST_NAME": "Sophia",
                  "DOB": "1980-09-11T00:00:00.000Z",
                  "ADDRESS": "5 Flower Street",
                  "ZIP_CODE": "44119",
                  "CITY": "Seattle",
                  "ACTION_CODE": "17HU765"
                }
              }
            ]
          },
          "dealsIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "Deal ids for deals a task is linked to",
            "example": [
              "61a5ce58c5d4795761045990",
              "61a5ce58c5d4795761045991",
              "61a5ce58c5d4795761045992"
            ]
          },
          "companiesIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "Companies ids for companies a task is linked to",
            "example": [
              "61a5ce58c5d4795761045990",
              "61a5ce58c5d4795761045991",
              "61a5ce58c5d4795761045992"
            ]
          },
          "assignToId": {
            "type": "string",
            "description": "User id to whom task is assigned",
            "example": "5faab4b7f195bb3c4c31e62a"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-11-01T17:44:54.668Z",
            "description": "Task date/time"
          },
          "duration": {
            "type": "integer",
            "description": "Duration of task",
            "example": 900000
          },
          "notes": {
            "type": "string",
            "description": "Notes added to a task",
            "example": "In communication with client for resolution of queries."
          },
          "done": {
            "type": "boolean",
            "description": "Task marked as done",
            "example": false
          },
          "reminder": {
            "description": "Task reminder date/time for a task",
            "required": [
              "value",
              "unit",
              "types"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "example": 10,
                "description": "Value of time unit before reminder is to be sent"
              },
              "unit": {
                "type": "string",
                "enum": [
                  "minutes",
                  "hours",
                  "weeks",
                  "days"
                ],
                "description": "Unit of time before reminder is to be sent",
                "example": "minutes"
              },
              "types": {
                "items": {
                  "type": "string"
                },
                "enum": [
                  "email",
                  "push"
                ],
                "description": "Type of task reminder",
                "type": "array",
                "example": [
                  "email"
                ]
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-11-01T17:44:54.668Z",
            "description": "Task created date/time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-11-01T17:44:54.668Z",
            "description": "Task update date/time"
          },
          "refs": {
            "type": "object",
            "example": {
              "dealsIds": [
                {
                  "id": "61a5ce58c5d4795761045990",
                  "attributes": {
                    "deal_name": "Deal Example",
                    "deal_owner": "5faab4b7f195bb3c4c31e62a",
                    "pipeline": "61122683f86562145185b489",
                    "deal_stage": "3d696d83-c75b-404d-b062-680186b8bbb",
                    "stage_updated_at": "2017-11-22T09:23:44.213Z",
                    "created_at": "2017-09-24T12:33:24.657Z",
                    "number_of_contacts": 1,
                    "last_updated_date": "2019-11-22T09:23:44.246Z",
                    "last_activity_date": "2017-09-30T06:44:15.765Z",
                    "next_activity_date": null,
                    "number_of_activities": 1,
                    "close_date": "2019-11-21T18:30:00.000Z",
                    "actual_close_date": "2019-11-22T09:23:44.213Z",
                    "total_revenue": 0
                  },
                  "companyTimelineEnabledFrom": null,
                  "linkedContactsIds": [
                    247
                  ],
                  "linkedCompaniesIds": []
                }
              ]
            }
          }
        }
      },
      "TaskReminder": {
        "required": [
          "value",
          "unit",
          "types"
        ],
        "type": "object",
        "description": "Task reminder date/time for a task",
        "properties": {
          "value": {
            "type": "integer",
            "example": 10,
            "description": "Value of time unit before reminder is to be sent"
          },
          "unit": {
            "type": "string",
            "enum": [
              "minutes",
              "hours",
              "weeks",
              "days"
            ],
            "description": "Unit of time before reminder is to be sent",
            "example": "minutes"
          },
          "types": {
            "items": {
              "type": "string"
            },
            "enum": [
              "email",
              "push"
            ],
            "description": "Type of task reminder",
            "type": "array",
            "example": [
              "email"
            ]
          }
        }
      }
    },
    "responses": {
      "createModel": {
        "description": "successfully created",
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "id"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of the object created",
                  "format": "int64",
                  "example": 5
                }
              }
            }
          }
        }
      },
      "createdProcessId": {
        "description": "process id created",
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "processId"
              ],
              "type": "object",
              "properties": {
                "processId": {
                  "type": "integer",
                  "description": "Id of the process created",
                  "format": "int64",
                  "example": 78
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api-key": {
        "type": "apiKey",
        "description": "The API key should be passed in the request headers as `api-key` for authentication.",
        "name": "api-key",
        "in": "header"
      }
    }
  },
  "x-samples-languages": [
    "curl"
  ]
}